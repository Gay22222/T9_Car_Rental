# ==================================================
# Path: E:\UIT\HK8\NT118\Project\T9_Car_Rental\app
# Detected tech: android, java
# ==================================================

## DIRECTORY STRUCTURE
```
app/
├── .idea/
├── build/
├── debug/
│   └── app-debug.aab
├── release/
│   ├── baselineProfiles/
│   │   ├── 0/
│   │   │   └── app-release.dm
│   │   └── 1/
│   │       └── app-release.dm
│   ├── app-release.aab
│   ├── app-release.apk
│   └── output-metadata.json
├── sampledata/
├── src/
│   ├── androidTest/
│   │   └── java/
│   │       └── com/
│   │           └── uit/
│   │               └── carrental/
│   │                   └── ExampleInstrumentedTest.java
│   ├── main/
│   │   ├── java/
│   │   │   └── com/
│   │   │       └── uit/
│   │   │           └── carrental/
│   │   │               ├── ActivityPages/
│   │   │               │   ├── AdminMainActivity.java
│   │   │               │   ├── CustomerMainActivity.java
│   │   │               │   ├── OwnerMainActivity.java
│   │   │               │   └── StartAppActivity.java
│   │   │               ├── Adapter/
│   │   │               │   ├── ActivityAdapter.java
│   │   │               │   ├── BookingAdapter.java
│   │   │               │   ├── MessageAdapter.java
│   │   │               │   ├── NotificationAdapter.java
│   │   │               │   ├── OwnerActivityAdapter.java
│   │   │               │   ├── OwnerNotificationAdapter.java
│   │   │               │   ├── OwnerVehicleAdapter.java
│   │   │               │   ├── SplashPagerAdapter.java
│   │   │               │   ├── UserAdapter.java
│   │   │               │   ├── VehicleAdapter.java
│   │   │               │   └── ViewPagerAdapter.java
│   │   │               ├── FragmentPages/
│   │   │               │   ├── Admin/
│   │   │               │   │   ├── AdminSettingsFragment.java
│   │   │               │   │   ├── AdminStatisticsFragment.java
│   │   │               │   │   ├── AdminUserListFragment.java
│   │   │               │   │   ├── AdminVehicleListFragment.java
│   │   │               │   │   ├── RequestSupplementDialogFragment.java
│   │   │               │   │   ├── SimpleBarChart.java
│   │   │               │   │   ├── UserStatsActivity.java
│   │   │               │   │   ├── UserStatsFragment.java
│   │   │               │   │   └── VehicleFilterFragment.java
│   │   │               │   ├── Customer/
│   │   │               │   │   ├── ChatFragment.java
│   │   │               │   │   ├── CustomerActivityFragment.java
│   │   │               │   │   ├── CustomerHomeFragment.java
│   │   │               │   │   ├── CustomerNotificationFragment.java
│   │   │               │   │   ├── CustomerSettingFragment.java
│   │   │               │   │   └── CustomerVehicleFilterFragment.java
│   │   │               │   ├── Owner/
│   │   │               │   │   ├── OwnerActivityFragment.java
│   │   │               │   │   ├── OwnerNotificationsFragment.java
│   │   │               │   │   ├── OwnerSettingFragment.java
│   │   │               │   │   └── OwnerVehicleFragment.java
│   │   │               │   └── SplashFragment.java
│   │   │               ├── Model/
│   │   │               │   ├── Booking.java
│   │   │               │   ├── CreateOrder.java
│   │   │               │   ├── Message.java
│   │   │               │   ├── Notification.java
│   │   │               │   ├── Order.java
│   │   │               │   ├── RentalHistory.java
│   │   │               │   ├── User.java
│   │   │               │   ├── UserClient.java
│   │   │               │   ├── Vehicle.java
│   │   │               │   └── onClickInterface.java
│   │   │               ├── Repository/
│   │   │               │   └── VehicleRepository.java
│   │   │               ├── Service/
│   │   │               │   ├── Activity/
│   │   │               │   │   ├── CustomerActivityDetail.java
│   │   │               │   │   └── OwnerActivityDetail.java
│   │   │               │   ├── Api/
│   │   │               │   │   └── CloudinaryApi.java
│   │   │               │   ├── Booking/
│   │   │               │   │   ├── CarDetailActivity.java
│   │   │               │   │   ├── CustomerBookingDetailActivity.java
│   │   │               │   │   ├── OwnerBookingDetailActivity.java
│   │   │               │   │   ├── RequestSuccessActivity.java
│   │   │               │   │   ├── ScheduleSelect.java
│   │   │               │   │   └── ScheduleSelectViewModel.java
│   │   │               │   ├── UserAuthentication/
│   │   │               │   │   ├── CCCDActivity.java
│   │   │               │   │   ├── ForgotPasswordActivity.java
│   │   │               │   │   ├── GGVerrifyPhone.java
│   │   │               │   │   ├── LoginActivity.java
│   │   │               │   │   ├── ProfileManagement.java
│   │   │               │   │   ├── RegisterActivity.java
│   │   │               │   │   ├── UpdatePassword.java
│   │   │               │   │   ├── UserProfile.java
│   │   │               │   │   └── ValidatePhoneActivity.java
│   │   │               │   ├── Vehicle/
│   │   │               │   │   ├── AddVehicleActivity.java
│   │   │               │   │   ├── AdminVehicleDetailActivity.java
│   │   │               │   │   ├── UpdateVehicleActivity.java
│   │   │               │   │   ├── VehicleCardActivity.java
│   │   │               │   │   └── VehicleDetailActivity.java
│   │   │               │   └── ZaloPay/
│   │   │               │       ├── Api/
│   │   │               │       │   ├── CreateOrder.java
│   │   │               │       │   └── HttpProvider.java
│   │   │               │       ├── Constant/
│   │   │               │       │   └── AppInfo.java
│   │   │               │       ├── Helper/
│   │   │               │       │   ├── HMac/
│   │   │               │       │   │   ├── HMacUtil.java
│   │   │               │       │   │   └── HexStringUtil.java
│   │   │               │       │   └── Helpers.java
│   │   │               │       └── ZPDK/
│   │   │               │           └── zpdk-release-v3.1.aar
│   │   │               └── code.txt
│   │   ├── res/
│   │   │   ├── anim/
│   │   │   │   ├── anim_in_left.xml
│   │   │   │   ├── anim_in_right.xml
│   │   │   │   ├── anim_out_left.xml
│   │   │   │   ├── anim_out_right.xml
│   │   │   │   ├── slide_in_up.xml
│   │   │   │   └── slide_out_up.xml
│   │   │   ├── drawable/
│   │   │   │   ├── a2_0_1.png
│   │   │   │   ├── background1_car_details.xml
│   │   │   │   ├── background2_car_details.xml
│   │   │   │   ├── background3_car_details.xml
│   │   │   │   ├── background_car_details.xml
│   │   │   │   ├── background_main.xml
│   │   │   │   ├── bg_gradient_login.xml
│   │   │   │   ├── bg_gradient_register.xml
│   │   │   │   ├── bg_gradient_social.xml
│   │   │   │   ├── bg_gradient_splash_button.xml
│   │   │   │   ├── bg_light_settings.xml
│   │   │   │   ├── blue_circle_line.xml
│   │   │   │   ├── blue_line.xml
│   │   │   │   ├── blue_round_border.xml
│   │   │   │   ├── blue_round_button.xml
│   │   │   │   ├── blue_round_card.xml
│   │   │   │   ├── bmw_svg.png
│   │   │   │   ├── button_gradient_account.xml
│   │   │   │   ├── button_gradient_cccd.xml
│   │   │   │   ├── button_gradient_update_profile.xml
│   │   │   │   ├── calendar_icon.png
│   │   │   │   ├── close_cicle.png
│   │   │   │   ├── combined_shape.xml
│   │   │   │   ├── combined_shape_car_details.xml
│   │   │   │   ├── combined_shape_main.xml
│   │   │   │   ├── combined_shape_settings.xml
│   │   │   │   ├── combined_shape_signup.xml
│   │   │   │   ├── cr10bffffff.xml
│   │   │   │   ├── cr12b003087.xml
│   │   │   │   ├── cr12b0030873b.xml
│   │   │   │   ├── cr12b123094.xml
│   │   │   │   ├── cr12bffffff.xml
│   │   │   │   ├── cr12lr270c5f5f4eaf9f9.xml
│   │   │   │   ├── cr15b003087.xml
│   │   │   │   ├── cr3b19b800.xml
│   │   │   │   ├── cr3be53535.xml
│   │   │   │   ├── cr48b003087.xml
│   │   │   │   ├── cr48bcacaca.xml
│   │   │   │   ├── cr48bff4500.xml
│   │   │   │   ├── cr4bfbfbfb.xml
│   │   │   │   ├── cr8b00308726.xml
│   │   │   │   ├── cr8b0b54da5e.xml
│   │   │   │   ├── cr8b6da9f1.xml
│   │   │   │   ├── cr8bd5e9fe.xml
│   │   │   │   ├── cr8bd9d9d957.xml
│   │   │   │   ├── cr8be6eefb.xml
│   │   │   │   ├── cr8bff450080.xml
│   │   │   │   ├── create_account_arrow.png
│   │   │   │   ├── ellipse_27_update_profile.xml
│   │   │   │   ├── ellipse_28_update_profile.xml
│   │   │   │   ├── ellipse_29_update_profile.xml
│   │   │   │   ├── ellipse_30_update_profile.xml
│   │   │   │   ├── ellipse_31_update_profile.xml
│   │   │   │   ├── ellipse_32_update_profile.xml
│   │   │   │   ├── ellipse_33_update_profile.xml
│   │   │   │   ├── ellipse_34_update_profile.xml
│   │   │   │   ├── email_verification_icon1.png
│   │   │   │   ├── field.xml
│   │   │   │   ├── field1.xml
│   │   │   │   ├── field1_account.xml
│   │   │   │   ├── field1_cccd.xml
│   │   │   │   ├── field1_signup.xml
│   │   │   │   ├── field1_update_profile.xml
│   │   │   │   ├── field2_account.xml
│   │   │   │   ├── field2_signup.xml
│   │   │   │   ├── field2_update_profile.xml
│   │   │   │   ├── field3_account.xml
│   │   │   │   ├── field3_signup.xml
│   │   │   │   ├── field3_update_profile.xml
│   │   │   │   ├── field4_account.xml
│   │   │   │   ├── field4_signup.xml
│   │   │   │   ├── field4_update_profile.xml
│   │   │   │   ├── field5_update_profile.xml
│   │   │   │   ├── field_account.xml
│   │   │   │   ├── field_cccd.xml
│   │   │   │   ├── field_signup.xml
│   │   │   │   ├── field_update_profile.xml
│   │   │   │   ├── floating_chat_icon.xml
│   │   │   │   ├── google_1.png
│   │   │   │   ├── gradient_button.xml
│   │   │   │   ├── grey_border_top.xml
│   │   │   │   ├── honda_civic_2025_lua_chon_hoan_hao_cho_gia_dinh_tre.jpeg
│   │   │   │   ├── ic_activity.xml
│   │   │   │   ├── ic_add_white_24dp.xml
│   │   │   │   ├── ic_admin_account.xml
│   │   │   │   ├── ic_arrow_back.png
│   │   │   │   ├── ic_arrow_back_blu.png
│   │   │   │   ├── ic_arrow_left.png
│   │   │   │   ├── ic_car.xml
│   │   │   │   ├── ic_check_green_24dp.xml
│   │   │   │   ├── ic_commission.xml
│   │   │   │   ├── ic_delete.xml
│   │   │   │   ├── ic_edit.xml
│   │   │   │   ├── ic_filter.png
│   │   │   │   ├── ic_full_screen_black_24dp.xml
│   │   │   │   ├── ic_history.xml
│   │   │   │   ├── ic_home.xml
│   │   │   │   ├── ic_launcher_background.xml
│   │   │   │   ├── ic_launcher_foreground.xml
│   │   │   │   ├── ic_lock.xml
│   │   │   │   ├── ic_mail.xml
│   │   │   │   ├── ic_next.png
│   │   │   │   ├── ic_next_1.xml
│   │   │   │   ├── ic_noti_new.png
│   │   │   │   ├── ic_notifications.xml
│   │   │   │   ├── ic_person.xml
│   │   │   │   ├── ic_pre.png
│   │   │   │   ├── ic_refresh_black_24dp.xml
│   │   │   │   ├── ic_search.xml
│   │   │   │   ├── ic_setting.xml
│   │   │   │   ├── ic_visibility_black_24dp.xml
│   │   │   │   ├── ic_visibility_off_black_24dp.xml
│   │   │   │   ├── icon1_ai.xml
│   │   │   │   ├── icon_ai.xml
│   │   │   │   ├── icon_next.xml
│   │   │   │   ├── icons_colorizer_main.xml
│   │   │   │   ├── id_card.png
│   │   │   │   ├── image1_car_details.png
│   │   │   │   ├── image1_cccd.xml
│   │   │   │   ├── image1_main.png
│   │   │   │   ├── image2_car_details.png
│   │   │   │   ├── image2_cccd.xml
│   │   │   │   ├── image2_main.xml
│   │   │   │   ├── image3_car_details.png
│   │   │   │   ├── image_56_ai.png
│   │   │   │   ├── image_5_account.png
│   │   │   │   ├── image_account.xml
│   │   │   │   ├── image_car_details.png
│   │   │   │   ├── image_cccd.xml
│   │   │   │   ├── image_main.png
│   │   │   │   ├── image_settings.xml
│   │   │   │   ├── image_splash_2.png
│   │   │   │   ├── image_splash_3.png
│   │   │   │   ├── image_splash_4.png
│   │   │   │   ├── image_update_profile.xml
│   │   │   │   ├── images_1__main.jpeg
│   │   │   │   ├── images_2__main.jpeg
│   │   │   │   ├── images_3__main.jpeg
│   │   │   │   ├── img_2.png
│   │   │   │   ├── img_car_booking_successful.png
│   │   │   │   ├── input_image.png
│   │   │   │   ├── line_8_settings.xml
│   │   │   │   ├── line_8_stroke_account.xml
│   │   │   │   ├── line_8_stroke_cccd.xml
│   │   │   │   ├── line_8_update_profile.xml
│   │   │   │   ├── mercedes_c300_amg_2022_2023_2024_2025_noi_that_ngoai_that_mercedeshaxaco_com_vn_5.jpeg
│   │   │   │   ├── message_bubble_background.xml
│   │   │   │   ├── message_bubble_background_user.xml
│   │   │   │   ├── rectangle.xml
│   │   │   │   ├── rectangle1.xml
│   │   │   │   ├── rectangle1_account.xml
│   │   │   │   ├── rectangle1_ai.xml
│   │   │   │   ├── rectangle1_car_details.xml
│   │   │   │   ├── rectangle1_cccd.xml
│   │   │   │   ├── rectangle1_main.xml
│   │   │   │   ├── rectangle1_settings.xml
│   │   │   │   ├── rectangle1_signup.xml
│   │   │   │   ├── rectangle1_update_profile.xml
│   │   │   │   ├── rectangle_17_main.xml
│   │   │   │   ├── rectangle_18_main.xml
│   │   │   │   ├── rectangle_194.xml
│   │   │   │   ├── rectangle_194_signup.xml
│   │   │   │   ├── rectangle_195.xml
│   │   │   │   ├── rectangle_195_signup.xml
│   │   │   │   ├── rectangle_196_signup.xml
│   │   │   │   ├── rectangle_197_signup.xml
│   │   │   │   ├── rectangle_198_signup.xml
│   │   │   │   ├── rectangle_199_ai.xml
│   │   │   │   ├── rectangle_199_signup.xml
│   │   │   │   ├── rectangle_19_main.xml
│   │   │   │   ├── rectangle_200_signup.xml
│   │   │   │   ├── rectangle_account.xml
│   │   │   │   ├── rectangle_ai.xml
│   │   │   │   ├── rectangle_car_details.xml
│   │   │   │   ├── rectangle_cccd.xml
│   │   │   │   ├── rectangle_main.xml
│   │   │   │   ├── rectangle_quarter_radius.xml
│   │   │   │   ├── rectangle_quarter_radius_top_right.xml
│   │   │   │   ├── rectangle_settings.xml
│   │   │   │   ├── rectangle_signup.xml
│   │   │   │   ├── rectangle_update_profile.xml
│   │   │   │   ├── red_round_button.xml
│   │   │   │   ├── round_card.xml
│   │   │   │   ├── round_line.xml
│   │   │   │   ├── rounded_corner.xml
│   │   │   │   ├── s000000sw1bfffcfc.xml
│   │   │   │   ├── s003087sw1bffffff.xml
│   │   │   │   ├── s003087sw1cr100b0030871f.xml
│   │   │   │   ├── s003087sw1cr15bffffff.xml
│   │   │   │   ├── s3dd34csw3b3dd34c.xml
│   │   │   │   ├── s4d3a4dsw1cr100.xml
│   │   │   │   ├── s4d3a4dsw1cr100bffbc7d33.xml
│   │   │   │   ├── s4d3a4dsw1cr12.xml
│   │   │   │   ├── s4d3a4dsw1cr8bffffff.xml
│   │   │   │   ├── s6d62f7sw7b6d62f7.xml
│   │   │   │   ├── sb60101sw1cr100bb6050233.xml
│   │   │   │   ├── sb66e01sw1cr100bb64d0233.xml
│   │   │   │   ├── sbbbbbbsw1.xml
│   │   │   │   ├── screenshot_2025_04_03_154923_removebg_preview_1.png
│   │   │   │   ├── screenshot_2025_04_03_154923_removebg_preview_2.png
│   │   │   │   ├── select_button.xml
│   │   │   │   ├── setting_button_gradient.xml
│   │   │   │   ├── setting_button_ripple.xml
│   │   │   │   ├── setting_sign_out_gradient.xml
│   │   │   │   ├── show_password_selector.xml
│   │   │   │   ├── splash_scroll_inactive.xml
│   │   │   │   ├── stroke.xml
│   │   │   │   ├── time_9_41_signup.xml
│   │   │   │   ├── vector.xml
│   │   │   │   ├── vector1.xml
│   │   │   │   ├── vector10_ai.xml
│   │   │   │   ├── vector10_settings.xml
│   │   │   │   ├── vector10_signup.xml
│   │   │   │   ├── vector11_ai.xml
│   │   │   │   ├── vector11_settings.xml
│   │   │   │   ├── vector11_signup.xml
│   │   │   │   ├── vector12_settings.xml
│   │   │   │   ├── vector12_signup.xml
│   │   │   │   ├── vector13_settings.xml
│   │   │   │   ├── vector13_signup.xml
│   │   │   │   ├── vector14_settings.xml
│   │   │   │   ├── vector14_signup.xml
│   │   │   │   ├── vector15_settings.xml
│   │   │   │   ├── vector15_signup.xml
│   │   │   │   ├── vector16_settings.xml
│   │   │   │   ├── vector16_signup.xml
│   │   │   │   ├── vector17_settings.xml
│   │   │   │   ├── vector17_signup.xml
│   │   │   │   ├── vector18_settings.xml
│   │   │   │   ├── vector19_settings.xml
│   │   │   │   ├── vector1_1.xml
│   │   │   │   ├── vector1_cccd.xml
│   │   │   │   ├── vector1_main.xml
│   │   │   │   ├── vector1_settings.xml
│   │   │   │   ├── vector1_signup.xml
│   │   │   │   ├── vector1_update_profile.xml
│   │   │   │   ├── vector2.xml
│   │   │   │   ├── vector20_settings.xml
│   │   │   │   ├── vector2_2.xml
│   │   │   │   ├── vector2_ai.xml
│   │   │   │   ├── vector2_cccd.xml
│   │   │   │   ├── vector2_main.xml
│   │   │   │   ├── vector2_settings.xml
│   │   │   │   ├── vector2_signup.xml
│   │   │   │   ├── vector2_update_profile.xml
│   │   │   │   ├── vector3.xml
│   │   │   │   ├── vector3_settings.xml
│   │   │   │   ├── vector3_signup.xml
│   │   │   │   ├── vector4.xml
│   │   │   │   ├── vector4_settings.xml
│   │   │   │   ├── vector4_signup.xml
│   │   │   │   ├── vector5.xml
│   │   │   │   ├── vector5_settings.xml
│   │   │   │   ├── vector5_signup.xml
│   │   │   │   ├── vector6.xml
│   │   │   │   ├── vector6_settings.xml
│   │   │   │   ├── vector6_signup.xml
│   │   │   │   ├── vector7.xml
│   │   │   │   ├── vector7_settings.xml
│   │   │   │   ├── vector7_signup.xml
│   │   │   │   ├── vector8_settings.xml
│   │   │   │   ├── vector8_signup.xml
│   │   │   │   ├── vector9_settings.xml
│   │   │   │   ├── vector9_signup.xml
│   │   │   │   ├── vector_account.xml
│   │   │   │   ├── vector_car_details.xml
│   │   │   │   ├── vector_cccd.xml
│   │   │   │   ├── vector_main.xml
│   │   │   │   ├── vector_settings.xml
│   │   │   │   ├── vector_signup.xml
│   │   │   │   ├── vector_update_profile.xml
│   │   │   │   ├── vehicle_info_card.xml
│   │   │   │   ├── white_round_border.xml
│   │   │   │   ├── yellow_circle_line.xml
│   │   │   │   └── yellow_line.xml
│   │   │   ├── drawable-v24/
│   │   │   │   ├── ic_add_white_24dp.xml
│   │   │   │   ├── ic_google.png
│   │   │   │   ├── ic_launcher_foreground.xml
│   │   │   │   ├── sign_in_background.jpg
│   │   │   │   ├── start_app_background.png
│   │   │   │   ├── start_app_background_1.jpg
│   │   │   │   ├── start_app_background_2.png
│   │   │   │   ├── start_app_background_3.jpg
│   │   │   │   └── start_app_background_4.webp
│   │   │   ├── font/
│   │   │   │   ├── relay_roboto_flex_regular.xml
│   │   │   │   └── relay_roboto_flex_regular_font.ttf
│   │   │   ├── layout/
│   │   │   │   ├── activity_add_vehicle.xml
│   │   │   │   ├── activity_admin_main.xml
│   │   │   │   ├── activity_admin_user_list.xml
│   │   │   │   ├── activity_admin_vehicle_detail.xml
│   │   │   │   ├── activity_admin_vehicle_list.xml
│   │   │   │   ├── activity_cccd.xml
│   │   │   │   ├── activity_detail_car.xml
│   │   │   │   ├── activity_finished.xml
│   │   │   │   ├── activity_forgot_password.xml
│   │   │   │   ├── activity_ggverrify_phone.xml
│   │   │   │   ├── activity_payment.xml
│   │   │   │   ├── activity_profile.xml
│   │   │   │   ├── activity_profile_management.xml
│   │   │   │   ├── activity_register.xml
│   │   │   │   ├── activity_role_selection.xml
│   │   │   │   ├── activity_schedule_select.xml
│   │   │   │   ├── activity_sign_in.xml
│   │   │   │   ├── activity_splash.xml
│   │   │   │   ├── activity_start_app.xml
│   │   │   │   ├── activity_update_password.xml
│   │   │   │   ├── activity_update_vehicle.xml
│   │   │   │   ├── activity_user_stats.xml
│   │   │   │   ├── activity_validate_phone.xml
│   │   │   │   ├── admin_vehicle_card.xml
│   │   │   │   ├── customer_activity_main.xml
│   │   │   │   ├── customer_booking_detail.xml
│   │   │   │   ├── customer_fragment_activity.xml
│   │   │   │   ├── customer_fragment_home.xml
│   │   │   │   ├── customer_fragment_notification.xml
│   │   │   │   ├── customer_fragment_setting.xml
│   │   │   │   ├── customer_vehicle_filter.xml
│   │   │   │   ├── dialog_request_supplement.xml
│   │   │   │   ├── dialog_vehicle_filter.xml
│   │   │   │   ├── fragment_admin_settings.xml
│   │   │   │   ├── fragment_admin_statistics.xml
│   │   │   │   ├── fragment_admin_user_list.xml
│   │   │   │   ├── fragment_admin_vehicle_list.xml
│   │   │   │   ├── fragment_chat.xml
│   │   │   │   ├── fragment_user_stats.xml
│   │   │   │   ├── fragment_vehicle_filter.xml
│   │   │   │   ├── item_activity.xml
│   │   │   │   ├── item_brand.xml
│   │   │   │   ├── item_notification.xml
│   │   │   │   ├── item_setting_row.xml
│   │   │   │   ├── item_user.xml
│   │   │   │   ├── message_item.xml
│   │   │   │   ├── owner_activity_main.xml
│   │   │   │   ├── owner_booking_detail.xml
│   │   │   │   ├── owner_fragment_activity.xml
│   │   │   │   ├── owner_fragment_notification.xml
│   │   │   │   ├── owner_fragment_setting.xml
│   │   │   │   ├── owner_fragment_vehicle.xml
│   │   │   │   ├── owner_vehicle_card.xml
│   │   │   │   ├── sflash_1.xml
│   │   │   │   ├── sflash_2.xml
│   │   │   │   ├── sflash_3.xml
│   │   │   │   ├── sflash_4.xml
│   │   │   │   ├── vehicle_card.xml
│   │   │   │   └── vehicle_stat_item.xml
│   │   │   ├── menu/
│   │   │   │   ├── admin_bottom_menu.xml
│   │   │   │   ├── customer_bottom_menu.xml
│   │   │   │   └── owner_bottom_menu.xml
│   │   │   ├── mipmap-anydpi-v26/
│   │   │   │   ├── car_rental.png
│   │   │   │   ├── ic_launcher.xml
│   │   │   │   └── ic_launcher_round.xml
│   │   │   ├── mipmap-hdpi/
│   │   │   │   ├── ic_launcher.webp
│   │   │   │   └── ic_launcher_round.webp
│   │   │   ├── mipmap-mdpi/
│   │   │   │   ├── ic_launcher.webp
│   │   │   │   └── ic_launcher_round.webp
│   │   │   ├── mipmap-xhdpi/
│   │   │   │   ├── ic_launcher.webp
│   │   │   │   └── ic_launcher_round.webp
│   │   │   ├── mipmap-xxhdpi/
│   │   │   │   ├── ic_launcher.webp
│   │   │   │   └── ic_launcher_round.webp
│   │   │   ├── mipmap-xxxhdpi/
│   │   │   │   ├── ic_launcher.webp
│   │   │   │   └── ic_launcher_round.webp
│   │   │   ├── values/
│   │   │   │   ├── colors.xml
│   │   │   │   ├── dimens.xml
│   │   │   │   ├── font_certs.xml
│   │   │   │   ├── strings.xml
│   │   │   │   ├── styles.xml
│   │   │   │   └── themes.xml
│   │   │   ├── values-night/
│   │   │   │   └── themes.xml
│   │   │   ├── xml/
│   │   │   │   ├── backup_rules.xml
│   │   │   │   └── data_extraction_rules.xml
│   │   │   └── —Pngtree—road design traffic travel vehicle_3853824 1.png
│   │   ├── ui-packages/
│   │   │   ├── account_nh_h_ng/
│   │   │   │   ├── fonts/
│   │   │   │   │   ├── relay_inter_black.ttf
│   │   │   │   │   ├── relay_inter_black_italic.ttf
│   │   │   │   │   ├── relay_inter_bold.ttf
│   │   │   │   │   ├── relay_inter_bold_italic.ttf
│   │   │   │   │   ├── relay_inter_extrabold.ttf
│   │   │   │   │   ├── relay_inter_extrabold_italic.ttf
│   │   │   │   │   ├── relay_inter_extralight.ttf
│   │   │   │   │   ├── relay_inter_extralight_italic.ttf
│   │   │   │   │   ├── relay_inter_italic.ttf
│   │   │   │   │   ├── relay_inter_light.ttf
│   │   │   │   │   ├── relay_inter_light_italic.ttf
│   │   │   │   │   ├── relay_inter_medium.ttf
│   │   │   │   │   ├── relay_inter_medium_italic.ttf
│   │   │   │   │   ├── relay_inter_regular.ttf
│   │   │   │   │   ├── relay_inter_semibold.ttf
│   │   │   │   │   ├── relay_inter_semibold_italic.ttf
│   │   │   │   │   ├── relay_inter_thin.ttf
│   │   │   │   │   ├── relay_inter_thin_italic.ttf
│   │   │   │   │   └── relay_roboto_flex_regular.ttf
│   │   │   │   ├── 9_41.svg
│   │   │   │   ├── FONTS.txt
│   │   │   │   ├── VERSION.txt
│   │   │   │   ├── account_nh_h_ng.json
│   │   │   │   ├── account_nh_h_ng_preview.png
│   │   │   │   ├── combined_shape.svg
│   │   │   │   ├── config.json
│   │   │   │   ├── field.svg
│   │   │   │   ├── field1.svg
│   │   │   │   ├── field2.svg
│   │   │   │   ├── field3.svg
│   │   │   │   ├── field4.svg
│   │   │   │   ├── image.svg
│   │   │   │   ├── image_51.png
│   │   │   │   ├── line_8_stroke_.svg
│   │   │   │   ├── rectangle.svg
│   │   │   │   ├── rectangle1.svg
│   │   │   │   └── vector.svg
│   │   │   ├── ai_chatbot/
│   │   │   │   ├── fonts/
│   │   │   │   │   └── relay_roboto_flex_regular.ttf
│   │   │   │   ├── 9_41.svg
│   │   │   │   ├── FONTS.txt
│   │   │   │   ├── VERSION.txt
│   │   │   │   ├── ai_chatbot.json
│   │   │   │   ├── ai_chatbot_preview.png
│   │   │   │   ├── combined_shape.svg
│   │   │   │   ├── config.json
│   │   │   │   ├── icon.svg
│   │   │   │   ├── icon1.svg
│   │   │   │   ├── image_56.png
│   │   │   │   ├── rectangle.svg
│   │   │   │   ├── rectangle1.svg
│   │   │   │   ├── rectangle_199.svg
│   │   │   │   ├── vector.svg
│   │   │   │   ├── vector1.svg
│   │   │   │   ├── vector10.svg
│   │   │   │   ├── vector11.svg
│   │   │   │   ├── vector12.svg
│   │   │   │   ├── vector13.svg
│   │   │   │   ├── vector14.svg
│   │   │   │   ├── vector15.svg
│   │   │   │   ├── vector16.svg
│   │   │   │   ├── vector17.svg
│   │   │   │   ├── vector18.svg
│   │   │   │   ├── vector19.svg
│   │   │   │   ├── vector2.svg
│   │   │   │   ├── vector20.svg
│   │   │   │   ├── vector21.svg
│   │   │   │   ├── vector22.svg
│   │   │   │   ├── vector23.svg
│   │   │   │   ├── vector24.svg
│   │   │   │   ├── vector25.svg
│   │   │   │   ├── vector26.svg
│   │   │   │   ├── vector27.svg
│   │   │   │   ├── vector28.svg
│   │   │   │   ├── vector29.svg
│   │   │   │   ├── vector3.svg
│   │   │   │   ├── vector30.svg
│   │   │   │   ├── vector31.svg
│   │   │   │   ├── vector32.svg
│   │   │   │   ├── vector33.svg
│   │   │   │   ├── vector34.svg
│   │   │   │   ├── vector35.svg
│   │   │   │   ├── vector36.svg
│   │   │   │   ├── vector37.svg
│   │   │   │   ├── vector38.svg
│   │   │   │   ├── vector39.svg
│   │   │   │   ├── vector4.svg
│   │   │   │   ├── vector40.svg
│   │   │   │   ├── vector41.svg
│   │   │   │   ├── vector42.svg
│   │   │   │   ├── vector43.svg
│   │   │   │   ├── vector44.svg
│   │   │   │   ├── vector45.svg
│   │   │   │   ├── vector46.svg
│   │   │   │   ├── vector47.svg
│   │   │   │   ├── vector48.svg
│   │   │   │   ├── vector49.svg
│   │   │   │   ├── vector5.svg
│   │   │   │   ├── vector50.svg
│   │   │   │   ├── vector51.svg
│   │   │   │   ├── vector52.svg
│   │   │   │   ├── vector53.svg
│   │   │   │   ├── vector54.svg
│   │   │   │   ├── vector55.svg
│   │   │   │   ├── vector56.svg
│   │   │   │   ├── vector57.svg
│   │   │   │   ├── vector58.svg
│   │   │   │   ├── vector59.svg
│   │   │   │   ├── vector6.svg
│   │   │   │   ├── vector60.svg
│   │   │   │   ├── vector61.svg
│   │   │   │   ├── vector7.svg
│   │   │   │   ├── vector8.svg
│   │   │   │   └── vector9.svg
│   │   │   ├── car_details/
│   │   │   │   ├── fonts/
│   │   │   │   │   ├── relay_inter_black.ttf
│   │   │   │   │   ├── relay_inter_black_italic.ttf
│   │   │   │   │   ├── relay_inter_bold.ttf
│   │   │   │   │   ├── relay_inter_bold_italic.ttf
│   │   │   │   │   ├── relay_inter_extrabold.ttf
│   │   │   │   │   ├── relay_inter_extrabold_italic.ttf
│   │   │   │   │   ├── relay_inter_extralight.ttf
│   │   │   │   │   ├── relay_inter_extralight_italic.ttf
│   │   │   │   │   ├── relay_inter_italic.ttf
│   │   │   │   │   ├── relay_inter_light.ttf
│   │   │   │   │   ├── relay_inter_light_italic.ttf
│   │   │   │   │   ├── relay_inter_medium.ttf
│   │   │   │   │   ├── relay_inter_medium_italic.ttf
│   │   │   │   │   ├── relay_inter_regular.ttf
│   │   │   │   │   ├── relay_inter_semibold.ttf
│   │   │   │   │   ├── relay_inter_semibold_italic.ttf
│   │   │   │   │   ├── relay_inter_thin.ttf
│   │   │   │   │   ├── relay_inter_thin_italic.ttf
│   │   │   │   │   └── relay_roboto_flex_regular.ttf
│   │   │   │   ├── 9_41.svg
│   │   │   │   ├── FONTS.txt
│   │   │   │   ├── VERSION.txt
│   │   │   │   ├── background.svg
│   │   │   │   ├── background1.svg
│   │   │   │   ├── background2.svg
│   │   │   │   ├── background3.svg
│   │   │   │   ├── car_details.json
│   │   │   │   ├── car_details_preview.png
│   │   │   │   ├── combined_shape.svg
│   │   │   │   ├── config.json
│   │   │   │   ├── image.png
│   │   │   │   ├── image1.png
│   │   │   │   ├── image2.png
│   │   │   │   ├── image3.png
│   │   │   │   ├── mercedes_c300_amg_2022_2023_2024_2025_noi_that_ngoai_that_mercedeshaxaco_com_vn_5.jpeg
│   │   │   │   ├── rectangle.svg
│   │   │   │   ├── rectangle1.svg
│   │   │   │   └── vector.svg
│   │   │   ├── change_password_nh_h_ng/
│   │   │   │   ├── fonts/
│   │   │   │   │   ├── relay_inter_black.ttf
│   │   │   │   │   ├── relay_inter_black_italic.ttf
│   │   │   │   │   ├── relay_inter_bold.ttf
│   │   │   │   │   ├── relay_inter_bold_italic.ttf
│   │   │   │   │   ├── relay_inter_extrabold.ttf
│   │   │   │   │   ├── relay_inter_extrabold_italic.ttf
│   │   │   │   │   ├── relay_inter_extralight.ttf
│   │   │   │   │   ├── relay_inter_extralight_italic.ttf
│   │   │   │   │   ├── relay_inter_italic.ttf
│   │   │   │   │   ├── relay_inter_light.ttf
│   │   │   │   │   ├── relay_inter_light_italic.ttf
│   │   │   │   │   ├── relay_inter_medium.ttf
│   │   │   │   │   ├── relay_inter_medium_italic.ttf
│   │   │   │   │   ├── relay_inter_regular.ttf
│   │   │   │   │   ├── relay_inter_semibold.ttf
│   │   │   │   │   ├── relay_inter_semibold_italic.ttf
│   │   │   │   │   ├── relay_inter_thin.ttf
│   │   │   │   │   ├── relay_inter_thin_italic.ttf
│   │   │   │   │   └── relay_roboto_flex_regular.ttf
│   │   │   │   ├── 9_41.svg
│   │   │   │   ├── FONTS.txt
│   │   │   │   ├── VERSION.txt
│   │   │   │   ├── change_password_nh_h_ng.json
│   │   │   │   ├── change_password_nh_h_ng_preview.png
│   │   │   │   ├── combined_shape.svg
│   │   │   │   ├── config.json
│   │   │   │   ├── field.svg
│   │   │   │   ├── field1.svg
│   │   │   │   ├── image.svg
│   │   │   │   ├── rectangle.svg
│   │   │   │   ├── rectangle1.svg
│   │   │   │   └── vector.svg
│   │   │   ├── main_screen/
│   │   │   │   ├── fonts/
│   │   │   │   │   └── relay_roboto_flex_regular.ttf
│   │   │   │   ├── 9_41.svg
│   │   │   │   ├── FONTS.txt
│   │   │   │   ├── VERSION.txt
│   │   │   │   ├── a2_0_1.png
│   │   │   │   ├── background.svg
│   │   │   │   ├── bmw_svg.png
│   │   │   │   ├── combined_shape.svg
│   │   │   │   ├── config.json
│   │   │   │   ├── honda_civic_2025_lua_chon_hoan_hao_cho_gia_dinh_tre.jpeg
│   │   │   │   ├── icons_colorizer.svg
│   │   │   │   ├── image.png
│   │   │   │   ├── image1.png
│   │   │   │   ├── image2.svg
│   │   │   │   ├── images_1_.jpeg
│   │   │   │   ├── images_2_.jpeg
│   │   │   │   ├── images_3_.jpeg
│   │   │   │   ├── main_screen.json
│   │   │   │   ├── main_screen_preview.png
│   │   │   │   ├── mercedes_c300_amg_2022_2023_2024_2025_noi_that_ngoai_that_mercedeshaxaco_com_vn_5.jpeg
│   │   │   │   ├── rectangle.svg
│   │   │   │   ├── rectangle1.svg
│   │   │   │   ├── rectangle_17.svg
│   │   │   │   ├── rectangle_18.svg
│   │   │   │   ├── rectangle_19.svg
│   │   │   │   ├── vector.svg
│   │   │   │   ├── vector1.svg
│   │   │   │   └── vector2.svg
│   │   │   ├── noti_01_car_owner_ly/
│   │   │   │   ├── fonts/
│   │   │   │   │   └── relay_roboto_flex_regular.ttf
│   │   │   │   ├── 9_41.svg
│   │   │   │   ├── FONTS.txt
│   │   │   │   ├── VERSION.txt
│   │   │   │   ├── combined_shape.svg
│   │   │   │   ├── config.json
│   │   │   │   ├── icon.svg
│   │   │   │   ├── noti_01_car_owner_ly.json
│   │   │   │   ├── noti_01_car_owner_ly_preview.png
│   │   │   │   ├── rectangle.svg
│   │   │   │   └── rectangle1.svg
│   │   │   ├── noti_02_car_renter_ly/
│   │   │   │   ├── fonts/
│   │   │   │   │   └── relay_roboto_flex_regular.ttf
│   │   │   │   ├── 9_41.svg
│   │   │   │   ├── FONTS.txt
│   │   │   │   ├── VERSION.txt
│   │   │   │   ├── combined_shape.svg
│   │   │   │   ├── config.json
│   │   │   │   ├── icon.svg
│   │   │   │   ├── noti_02_car_renter_ly.json
│   │   │   │   ├── noti_02_car_renter_ly_preview.png
│   │   │   │   ├── rectangle.svg
│   │   │   │   └── rectangle1.svg
│   │   │   ├── notification_success_password_nh_h_ng/
│   │   │   │   ├── fonts/
│   │   │   │   │   └── relay_roboto_flex_regular.ttf
│   │   │   │   ├── 9_41.svg
│   │   │   │   ├── FONTS.txt
│   │   │   │   ├── VERSION.txt
│   │   │   │   ├── combined_shape.svg
│   │   │   │   ├── config.json
│   │   │   │   ├── image.svg
│   │   │   │   ├── notification_success_password_nh_h_ng.json
│   │   │   │   ├── notification_success_password_nh_h_ng_preview.png
│   │   │   │   ├── rectangle.svg
│   │   │   │   └── rectangle1.svg
│   │   │   ├── order_request_car_owner_ly/
│   │   │   │   ├── fonts/
│   │   │   │   │   ├── relay_inter_black.ttf
│   │   │   │   │   ├── relay_inter_black_italic.ttf
│   │   │   │   │   ├── relay_inter_bold.ttf
│   │   │   │   │   ├── relay_inter_bold_italic.ttf
│   │   │   │   │   ├── relay_inter_extrabold.ttf
│   │   │   │   │   ├── relay_inter_extrabold_italic.ttf
│   │   │   │   │   ├── relay_inter_extralight.ttf
│   │   │   │   │   ├── relay_inter_extralight_italic.ttf
│   │   │   │   │   ├── relay_inter_italic.ttf
│   │   │   │   │   ├── relay_inter_light.ttf
│   │   │   │   │   ├── relay_inter_light_italic.ttf
│   │   │   │   │   ├── relay_inter_medium.ttf
│   │   │   │   │   ├── relay_inter_medium_italic.ttf
│   │   │   │   │   ├── relay_inter_regular.ttf
│   │   │   │   │   ├── relay_inter_semibold.ttf
│   │   │   │   │   ├── relay_inter_semibold_italic.ttf
│   │   │   │   │   ├── relay_inter_thin.ttf
│   │   │   │   │   ├── relay_inter_thin_italic.ttf
│   │   │   │   │   └── relay_roboto_flex_regular.ttf
│   │   │   │   ├── 9_41.svg
│   │   │   │   ├── FONTS.txt
│   │   │   │   ├── VERSION.txt
│   │   │   │   ├── combined_shape.svg
│   │   │   │   ├── config.json
│   │   │   │   ├── field.svg
│   │   │   │   ├── field1.svg
│   │   │   │   ├── field2.svg
│   │   │   │   ├── field3.svg
│   │   │   │   ├── field4.svg
│   │   │   │   ├── field5.svg
│   │   │   │   ├── field6.svg
│   │   │   │   ├── field7.svg
│   │   │   │   ├── field8.svg
│   │   │   │   ├── line_6.svg
│   │   │   │   ├── line_7.svg
│   │   │   │   ├── line_8.svg
│   │   │   │   ├── order_request_car_owner_ly.json
│   │   │   │   ├── order_request_car_owner_ly_preview.png
│   │   │   │   ├── rectangle.svg
│   │   │   │   ├── rectangle1.svg
│   │   │   │   └── vector.svg
│   │   │   ├── payment_confirmation_ly/
│   │   │   │   ├── fonts/
│   │   │   │   │   ├── relay_inter_black.ttf
│   │   │   │   │   ├── relay_inter_black_italic.ttf
│   │   │   │   │   ├── relay_inter_bold.ttf
│   │   │   │   │   ├── relay_inter_bold_italic.ttf
│   │   │   │   │   ├── relay_inter_extrabold.ttf
│   │   │   │   │   ├── relay_inter_extrabold_italic.ttf
│   │   │   │   │   ├── relay_inter_extralight.ttf
│   │   │   │   │   ├── relay_inter_extralight_italic.ttf
│   │   │   │   │   ├── relay_inter_italic.ttf
│   │   │   │   │   ├── relay_inter_light.ttf
│   │   │   │   │   ├── relay_inter_light_italic.ttf
│   │   │   │   │   ├── relay_inter_medium.ttf
│   │   │   │   │   ├── relay_inter_medium_italic.ttf
│   │   │   │   │   ├── relay_inter_regular.ttf
│   │   │   │   │   ├── relay_inter_semibold.ttf
│   │   │   │   │   ├── relay_inter_semibold_italic.ttf
│   │   │   │   │   ├── relay_inter_thin.ttf
│   │   │   │   │   ├── relay_inter_thin_italic.ttf
│   │   │   │   │   └── relay_roboto_flex_regular.ttf
│   │   │   │   ├── 9_41.svg
│   │   │   │   ├── FONTS.txt
│   │   │   │   ├── VERSION.txt
│   │   │   │   ├── combined_shape.svg
│   │   │   │   ├── config.json
│   │   │   │   ├── field.svg
│   │   │   │   ├── field1.svg
│   │   │   │   ├── field2.svg
│   │   │   │   ├── field3.svg
│   │   │   │   ├── field4.svg
│   │   │   │   ├── field5.svg
│   │   │   │   ├── field6.svg
│   │   │   │   ├── field7.svg
│   │   │   │   ├── line_6.svg
│   │   │   │   ├── line_7.svg
│   │   │   │   ├── payment_confirmation_ly.json
│   │   │   │   ├── payment_confirmation_ly_preview.png
│   │   │   │   ├── rectangle.svg
│   │   │   │   └── rectangle1.svg
│   │   │   ├── request_success/
│   │   │   │   ├── fonts/
│   │   │   │   │   ├── relay_inter_black.ttf
│   │   │   │   │   ├── relay_inter_black_italic.ttf
│   │   │   │   │   ├── relay_inter_bold.ttf
│   │   │   │   │   ├── relay_inter_bold_italic.ttf
│   │   │   │   │   ├── relay_inter_extrabold.ttf
│   │   │   │   │   ├── relay_inter_extrabold_italic.ttf
│   │   │   │   │   ├── relay_inter_extralight.ttf
│   │   │   │   │   ├── relay_inter_extralight_italic.ttf
│   │   │   │   │   ├── relay_inter_italic.ttf
│   │   │   │   │   ├── relay_inter_light.ttf
│   │   │   │   │   ├── relay_inter_light_italic.ttf
│   │   │   │   │   ├── relay_inter_medium.ttf
│   │   │   │   │   ├── relay_inter_medium_italic.ttf
│   │   │   │   │   ├── relay_inter_regular.ttf
│   │   │   │   │   ├── relay_inter_semibold.ttf
│   │   │   │   │   ├── relay_inter_semibold_italic.ttf
│   │   │   │   │   ├── relay_inter_thin.ttf
│   │   │   │   │   ├── relay_inter_thin_italic.ttf
│   │   │   │   │   └── relay_roboto_flex_regular.ttf
│   │   │   │   ├── 2617918_1.png
│   │   │   │   ├── 9_41.svg
│   │   │   │   ├── FONTS.txt
│   │   │   │   ├── VERSION.txt
│   │   │   │   ├── c_2.png
│   │   │   │   ├── combined_shape.svg
│   │   │   │   ├── config.json
│   │   │   │   ├── original_0270c1e5eb77eba7f50a2a64ae316475_1.png
│   │   │   │   ├── rectangle.svg
│   │   │   │   ├── rectangle1.svg
│   │   │   │   ├── request_success.json
│   │   │   │   ├── request_success_preview.png
│   │   │   │   ├── vector.svg
│   │   │   │   └── vector1.svg
│   │   │   ├── select_date_time/
│   │   │   │   ├── fonts/
│   │   │   │   │   ├── relay_inter_black.ttf
│   │   │   │   │   ├── relay_inter_black_italic.ttf
│   │   │   │   │   ├── relay_inter_bold.ttf
│   │   │   │   │   ├── relay_inter_bold_italic.ttf
│   │   │   │   │   ├── relay_inter_extrabold.ttf
│   │   │   │   │   ├── relay_inter_extrabold_italic.ttf
│   │   │   │   │   ├── relay_inter_extralight.ttf
│   │   │   │   │   ├── relay_inter_extralight_italic.ttf
│   │   │   │   │   ├── relay_inter_italic.ttf
│   │   │   │   │   ├── relay_inter_light.ttf
│   │   │   │   │   ├── relay_inter_light_italic.ttf
│   │   │   │   │   ├── relay_inter_medium.ttf
│   │   │   │   │   ├── relay_inter_medium_italic.ttf
│   │   │   │   │   ├── relay_inter_regular.ttf
│   │   │   │   │   ├── relay_inter_semibold.ttf
│   │   │   │   │   ├── relay_inter_semibold_italic.ttf
│   │   │   │   │   ├── relay_inter_thin.ttf
│   │   │   │   │   ├── relay_inter_thin_italic.ttf
│   │   │   │   │   └── relay_roboto_flex_regular.ttf
│   │   │   │   ├── 9_41.svg
│   │   │   │   ├── FONTS.txt
│   │   │   │   ├── VERSION.txt
│   │   │   │   ├── combined_shape.svg
│   │   │   │   ├── config.json
│   │   │   │   ├── rectangle.svg
│   │   │   │   ├── rectangle1.svg
│   │   │   │   ├── select_date_time.json
│   │   │   │   ├── select_date_time_preview.png
│   │   │   │   ├── vector.svg
│   │   │   │   ├── vector1.svg
│   │   │   │   ├── vector2.svg
│   │   │   │   ├── vector3.svg
│   │   │   │   └── vector4.svg
│   │   │   ├── setting_nh_h_ng/
│   │   │   │   ├── fonts/
│   │   │   │   │   └── relay_roboto_flex_regular.ttf
│   │   │   │   ├── 9_41.svg
│   │   │   │   ├── FONTS.txt
│   │   │   │   ├── VERSION.txt
│   │   │   │   ├── bg_light.svg
│   │   │   │   ├── combined_shape.svg
│   │   │   │   ├── config.json
│   │   │   │   ├── image.svg
│   │   │   │   ├── line_8.svg
│   │   │   │   ├── rectangle.svg
│   │   │   │   ├── rectangle1.svg
│   │   │   │   ├── setting_nh_h_ng.json
│   │   │   │   ├── setting_nh_h_ng_preview.png
│   │   │   │   ├── vector.svg
│   │   │   │   ├── vector1.svg
│   │   │   │   ├── vector10.svg
│   │   │   │   ├── vector11.svg
│   │   │   │   ├── vector12.svg
│   │   │   │   ├── vector13.svg
│   │   │   │   ├── vector14.svg
│   │   │   │   ├── vector15.svg
│   │   │   │   ├── vector16.svg
│   │   │   │   ├── vector17.svg
│   │   │   │   ├── vector18.svg
│   │   │   │   ├── vector19.svg
│   │   │   │   ├── vector2.svg
│   │   │   │   ├── vector20.svg
│   │   │   │   ├── vector3.svg
│   │   │   │   ├── vector4.svg
│   │   │   │   ├── vector5.svg
│   │   │   │   ├── vector6.svg
│   │   │   │   ├── vector7.svg
│   │   │   │   ├── vector8.svg
│   │   │   │   └── vector9.svg
│   │   │   ├── sflash_1_my/
│   │   │   │   ├── fonts/
│   │   │   │   │   └── relay_roboto_flex_regular.ttf
│   │   │   │   ├── 9_41.svg
│   │   │   │   ├── FONTS.txt
│   │   │   │   ├── VERSION.txt
│   │   │   │   ├── combined_shape.svg
│   │   │   │   ├── config.json
│   │   │   │   ├── rectangle.svg
│   │   │   │   ├── rectangle1.svg
│   │   │   │   ├── screenshot_2025_04_03_154923_removebg_preview_1.png
│   │   │   │   ├── sflash_1_my.json
│   │   │   │   ├── sflash_1_my_preview.png
│   │   │   │   ├── vector.svg
│   │   │   │   ├── vector1.svg
│   │   │   │   └── vector2.svg
│   │   │   ├── sflash_2_my/
│   │   │   │   ├── fonts/
│   │   │   │   │   └── relay_roboto_flex_regular.ttf
│   │   │   │   ├── 9_41.svg
│   │   │   │   ├── FONTS.txt
│   │   │   │   ├── VERSION.txt
│   │   │   │   ├── combined_shape.svg
│   │   │   │   ├── config.json
│   │   │   │   ├── image.png
│   │   │   │   ├── rectangle.svg
│   │   │   │   ├── rectangle1.svg
│   │   │   │   ├── screenshot_2025_04_03_154923_removebg_preview_2.png
│   │   │   │   ├── sflash_2_my.json
│   │   │   │   ├── sflash_2_my_preview.png
│   │   │   │   ├── vector.svg
│   │   │   │   ├── vector1.svg
│   │   │   │   └── vector2.svg
│   │   │   ├── sflash_3_my/
│   │   │   │   ├── fonts/
│   │   │   │   │   └── relay_roboto_flex_regular.ttf
│   │   │   │   ├── 9_41.svg
│   │   │   │   ├── FONTS.txt
│   │   │   │   ├── VERSION.txt
│   │   │   │   ├── combined_shape.svg
│   │   │   │   ├── config.json
│   │   │   │   ├── image.png
│   │   │   │   ├── rectangle.svg
│   │   │   │   ├── rectangle1.svg
│   │   │   │   ├── screenshot_2025_04_03_154923_removebg_preview_2.png
│   │   │   │   ├── sflash_3_my.json
│   │   │   │   ├── sflash_3_my_preview.png
│   │   │   │   ├── vector.svg
│   │   │   │   ├── vector1.svg
│   │   │   │   └── vector2.svg
│   │   │   ├── sflash_4_my/
│   │   │   │   ├── fonts/
│   │   │   │   │   └── relay_roboto_flex_regular.ttf
│   │   │   │   ├── 9_41.svg
│   │   │   │   ├── FONTS.txt
│   │   │   │   ├── VERSION.txt
│   │   │   │   ├── combined_shape.svg
│   │   │   │   ├── config.json
│   │   │   │   ├── image.png
│   │   │   │   ├── rectangle.svg
│   │   │   │   ├── rectangle1.svg
│   │   │   │   ├── screenshot_2025_04_03_154923_removebg_preview_2.png
│   │   │   │   ├── sflash_4_my.json
│   │   │   │   ├── sflash_4_my_preview.png
│   │   │   │   ├── vector.svg
│   │   │   │   ├── vector1.svg
│   │   │   │   └── vector2.svg
│   │   │   ├── sign_in_my/
│   │   │   │   ├── fonts/
│   │   │   │   │   └── relay_roboto_flex_regular.ttf
│   │   │   │   ├── 9_41.svg
│   │   │   │   ├── FONTS.txt
│   │   │   │   ├── VERSION.txt
│   │   │   │   ├── combined_shape.svg
│   │   │   │   ├── config.json
│   │   │   │   ├── field.svg
│   │   │   │   ├── field1.svg
│   │   │   │   ├── google_1.png
│   │   │   │   ├── rectangle.svg
│   │   │   │   ├── rectangle1.svg
│   │   │   │   ├── rectangle_194.svg
│   │   │   │   ├── rectangle_195.svg
│   │   │   │   ├── screenshot_2025_04_03_154923_removebg_preview_1.png
│   │   │   │   ├── sign_in_my.json
│   │   │   │   ├── sign_in_my_preview.png
│   │   │   │   ├── vector.svg
│   │   │   │   ├── vector1.svg
│   │   │   │   ├── vector2.svg
│   │   │   │   ├── vector3.svg
│   │   │   │   ├── vector4.svg
│   │   │   │   ├── vector5.svg
│   │   │   │   ├── vector6.svg
│   │   │   │   └── vector7.svg
│   │   │   ├── sign_up_my/
│   │   │   │   ├── fonts/
│   │   │   │   │   └── relay_roboto_flex_regular.ttf
│   │   │   │   ├── 9_41.svg
│   │   │   │   ├── FONTS.txt
│   │   │   │   ├── VERSION.txt
│   │   │   │   ├── combined_shape.svg
│   │   │   │   ├── config.json
│   │   │   │   ├── field.svg
│   │   │   │   ├── field1.svg
│   │   │   │   ├── field2.svg
│   │   │   │   ├── field3.svg
│   │   │   │   ├── field4.svg
│   │   │   │   ├── google_1.png
│   │   │   │   ├── rectangle.svg
│   │   │   │   ├── rectangle1.svg
│   │   │   │   ├── rectangle_194.svg
│   │   │   │   ├── rectangle_195.svg
│   │   │   │   ├── rectangle_196.svg
│   │   │   │   ├── rectangle_197.svg
│   │   │   │   ├── rectangle_198.svg
│   │   │   │   ├── rectangle_199.svg
│   │   │   │   ├── rectangle_200.svg
│   │   │   │   ├── screenshot_2025_04_03_154923_removebg_preview_1.png
│   │   │   │   ├── sign_up_my.json
│   │   │   │   ├── sign_up_my_preview.png
│   │   │   │   ├── vector.svg
│   │   │   │   ├── vector1.svg
│   │   │   │   ├── vector10.svg
│   │   │   │   ├── vector11.svg
│   │   │   │   ├── vector12.svg
│   │   │   │   ├── vector13.svg
│   │   │   │   ├── vector14.svg
│   │   │   │   ├── vector15.svg
│   │   │   │   ├── vector16.svg
│   │   │   │   ├── vector17.svg
│   │   │   │   ├── vector2.svg
│   │   │   │   ├── vector3.svg
│   │   │   │   ├── vector4.svg
│   │   │   │   ├── vector5.svg
│   │   │   │   ├── vector6.svg
│   │   │   │   ├── vector7.svg
│   │   │   │   ├── vector8.svg
│   │   │   │   └── vector9.svg
│   │   │   ├── update_cccd_nh_h_ng/
│   │   │   │   ├── fonts/
│   │   │   │   │   ├── relay_inter_black.ttf
│   │   │   │   │   ├── relay_inter_black_italic.ttf
│   │   │   │   │   ├── relay_inter_bold.ttf
│   │   │   │   │   ├── relay_inter_bold_italic.ttf
│   │   │   │   │   ├── relay_inter_extrabold.ttf
│   │   │   │   │   ├── relay_inter_extrabold_italic.ttf
│   │   │   │   │   ├── relay_inter_extralight.ttf
│   │   │   │   │   ├── relay_inter_extralight_italic.ttf
│   │   │   │   │   ├── relay_inter_italic.ttf
│   │   │   │   │   ├── relay_inter_light.ttf
│   │   │   │   │   ├── relay_inter_light_italic.ttf
│   │   │   │   │   ├── relay_inter_medium.ttf
│   │   │   │   │   ├── relay_inter_medium_italic.ttf
│   │   │   │   │   ├── relay_inter_regular.ttf
│   │   │   │   │   ├── relay_inter_semibold.ttf
│   │   │   │   │   ├── relay_inter_semibold_italic.ttf
│   │   │   │   │   ├── relay_inter_thin.ttf
│   │   │   │   │   ├── relay_inter_thin_italic.ttf
│   │   │   │   │   └── relay_roboto_flex_regular.ttf
│   │   │   │   ├── 9_41.svg
│   │   │   │   ├── FONTS.txt
│   │   │   │   ├── VERSION.txt
│   │   │   │   ├── combined_shape.svg
│   │   │   │   ├── config.json
│   │   │   │   ├── field.svg
│   │   │   │   ├── field1.svg
│   │   │   │   ├── image.svg
│   │   │   │   ├── image1.svg
│   │   │   │   ├── image2.svg
│   │   │   │   ├── line_8_stroke_.svg
│   │   │   │   ├── rectangle.svg
│   │   │   │   ├── rectangle1.svg
│   │   │   │   ├── update_cccd_nh_h_ng.json
│   │   │   │   ├── update_cccd_nh_h_ng_preview.png
│   │   │   │   ├── vector.svg
│   │   │   │   ├── vector1.svg
│   │   │   │   └── vector2.svg
│   │   │   ├── update_profile_nh_h_ng/
│   │   │   │   ├── fonts/
│   │   │   │   │   ├── relay_inter_black.ttf
│   │   │   │   │   ├── relay_inter_black_italic.ttf
│   │   │   │   │   ├── relay_inter_bold.ttf
│   │   │   │   │   ├── relay_inter_bold_italic.ttf
│   │   │   │   │   ├── relay_inter_extrabold.ttf
│   │   │   │   │   ├── relay_inter_extrabold_italic.ttf
│   │   │   │   │   ├── relay_inter_extralight.ttf
│   │   │   │   │   ├── relay_inter_extralight_italic.ttf
│   │   │   │   │   ├── relay_inter_italic.ttf
│   │   │   │   │   ├── relay_inter_light.ttf
│   │   │   │   │   ├── relay_inter_light_italic.ttf
│   │   │   │   │   ├── relay_inter_medium.ttf
│   │   │   │   │   ├── relay_inter_medium_italic.ttf
│   │   │   │   │   ├── relay_inter_regular.ttf
│   │   │   │   │   ├── relay_inter_semibold.ttf
│   │   │   │   │   ├── relay_inter_semibold_italic.ttf
│   │   │   │   │   ├── relay_inter_thin.ttf
│   │   │   │   │   ├── relay_inter_thin_italic.ttf
│   │   │   │   │   └── relay_roboto_flex_regular.ttf
│   │   │   │   ├── 9_41.svg
│   │   │   │   ├── FONTS.txt
│   │   │   │   ├── VERSION.txt
│   │   │   │   ├── combined_shape.svg
│   │   │   │   ├── config.json
│   │   │   │   ├── ellipse_27.svg
│   │   │   │   ├── ellipse_28.svg
│   │   │   │   ├── ellipse_29.svg
│   │   │   │   ├── ellipse_30.svg
│   │   │   │   ├── ellipse_31.svg
│   │   │   │   ├── ellipse_32.svg
│   │   │   │   ├── ellipse_33.svg
│   │   │   │   ├── ellipse_34.svg
│   │   │   │   ├── field.svg
│   │   │   │   ├── field1.svg
│   │   │   │   ├── field2.svg
│   │   │   │   ├── field3.svg
│   │   │   │   ├── field4.svg
│   │   │   │   ├── field5.svg
│   │   │   │   ├── image.svg
│   │   │   │   ├── line_8.svg
│   │   │   │   ├── rectangle.svg
│   │   │   │   ├── rectangle1.svg
│   │   │   │   ├── update_profile_nh_h_ng.json
│   │   │   │   ├── update_profile_nh_h_ng_preview.png
│   │   │   │   ├── vector.svg
│   │   │   │   ├── vector1.svg
│   │   │   │   └── vector2.svg
│   │   │   └── verification_nh_h_ng/
│   │   │       ├── fonts/
│   │   │       │   ├── relay_inter_black.ttf
│   │   │       │   ├── relay_inter_black_italic.ttf
│   │   │       │   ├── relay_inter_bold.ttf
│   │   │       │   ├── relay_inter_bold_italic.ttf
│   │   │       │   ├── relay_inter_extrabold.ttf
│   │   │       │   ├── relay_inter_extrabold_italic.ttf
│   │   │       │   ├── relay_inter_extralight.ttf
│   │   │       │   ├── relay_inter_extralight_italic.ttf
│   │   │       │   ├── relay_inter_italic.ttf
│   │   │       │   ├── relay_inter_light.ttf
│   │   │       │   ├── relay_inter_light_italic.ttf
│   │   │       │   ├── relay_inter_medium.ttf
│   │   │       │   ├── relay_inter_medium_italic.ttf
│   │   │       │   ├── relay_inter_regular.ttf
│   │   │       │   ├── relay_inter_semibold.ttf
│   │   │       │   ├── relay_inter_semibold_italic.ttf
│   │   │       │   ├── relay_inter_thin.ttf
│   │   │       │   ├── relay_inter_thin_italic.ttf
│   │   │       │   └── relay_roboto_flex_regular.ttf
│   │   │       ├── 9_41.svg
│   │   │       ├── FONTS.txt
│   │   │       ├── VERSION.txt
│   │   │       ├── combined_shape.svg
│   │   │       ├── config.json
│   │   │       ├── field.svg
│   │   │       ├── field1.svg
│   │   │       ├── field2.svg
│   │   │       ├── field3.svg
│   │   │       ├── rectangle.svg
│   │   │       ├── rectangle1.svg
│   │   │       ├── vector.svg
│   │   │       ├── verification_nh_h_ng.json
│   │   │       └── verification_nh_h_ng_preview.png
│   │   └── AndroidManifest.xml
│   └── test/
│       └── java/
│           └── com/
│               └── uit/
│                   └── carrental/
│                       └── ExampleUnitTest.java
├── .gitignore
├── build.gradle
├── google-services.json
└── proguard-rules.pro
```

## FILE CONTENTS

### src\androidTest\java\com\uit\carrental\ExampleInstrumentedTest.java
```java
package com.uit.carrental;

import android.content.Context;

import androidx.test.platform.app.InstrumentationRegistry;
import androidx.test.ext.junit.runners.AndroidJUnit4;

import org.junit.Test;
import org.junit.runner.RunWith;

import static org.junit.Assert.*;

/**
 * Instrumented test, which will execute on an Android device.
 *
 * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
 */
@RunWith(AndroidJUnit4.class)
public class ExampleInstrumentedTest {
    @Test
    public void useAppContext() {
        // Context of the app under test.
        Context appContext = InstrumentationRegistry.getInstrumentation().getTargetContext();
        assertEquals("com.uit.carrenting", appContext.getPackageName());
    }
}
```

### src\main\AndroidManifest.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.uit.carrental">

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.CAMERA" />

    <queries>
        <package android:name="vn.com.vng.zalopay" />
        <package android:name="vn.com.vng.zalopay.sbmc" />
    </queries>

    <application
        android:usesCleartextTraffic="true"
        android:name="com.uit.carrental.Model.UserClient"
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/car_rental"
        android:label="@string/app_name"
        android:largeHeap="true"
        android:requestLegacyExternalStorage="true"
        android:roundIcon="@mipmap/car_rental"
        android:supportsRtl="true"
        android:theme="@style/Theme.CarRenting.NoActionBar"
        tools:ignore="Instantiatable"
        tools:replace="android:fullBackupContent, android:theme"
        tools:targetApi="31">

        <!-- Start App -->
        <activity
            android:name=".ActivityPages.StartAppActivity"
            android:exported="true"
            android:launchMode="singleTask"
            android:theme="@style/Theme.CarRenting.NoActionBar">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />
                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />
                <data android:scheme="https" android:host="example.com" />
            </intent-filter>
        </activity>

        <!-- Authentication -->
        <activity
            android:name=".Service.UserAuthentication.LoginActivity"
            android:exported="false"
            android:theme="@style/Theme.CarRenting.NoActionBar" />
        <activity
            android:name=".Service.UserAuthentication.RegisterActivity"
            android:exported="false"
            android:theme="@style/Theme.CarRenting.NoActionBar" />
        <activity
            android:name=".Service.UserAuthentication.ValidatePhoneActivity"
            android:exported="false"
            android:theme="@style/Theme.CarRenting.NoActionBar" />
        <activity
            android:name=".Service.UserAuthentication.ForgotPasswordActivity"
            android:exported="false" />
        <activity
            android:name=".Service.UserAuthentication.GGVerrifyPhone"
            android:exported="false" />
        <activity
            android:name=".Service.UserAuthentication.UpdatePassword"
            android:exported="false" />
        <activity
            android:name=".Service.UserAuthentication.UserProfile"
            android:exported="false" />
        <activity
            android:name=".Service.UserAuthentication.ProfileManagement"
            android:exported="false" />
        <activity
            android:name=".Service.UserAuthentication.CCCDActivity"
            android:exported="false"
            android:parentActivityName=".Service.UserAuthentication.ProfileManagement">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".Service.UserAuthentication.ProfileManagement" />
        </activity>

        <!-- Main Activities -->
        <activity
            android:name=".ActivityPages.CustomerMainActivity"
            android:exported="false"
            android:theme="@style/Theme.CarRenting.NoActionBar" />
        <activity
            android:name=".ActivityPages.OwnerMainActivity"
            android:exported="false"
            android:theme="@style/Theme.CarRenting.NoActionBar" />
        <activity
            android:name=".ActivityPages.AdminMainActivity"
            android:exported="false"
            android:theme="@style/Theme.CarRenting.NoActionBar" />

        <!-- Vehicle Management -->
        <activity
            android:name=".Service.Vehicle.AddVehicleActivity"
            android:exported="false" />
        <activity
            android:name=".Service.Vehicle.UpdateVehicleActivity"
            android:exported="false" />
        <activity
            android:name=".Service.Vehicle.VehicleCardActivity"
            android:exported="false" />
        <activity
            android:name=".Service.Vehicle.VehicleDetailActivity"
            android:exported="false" />

        <!-- Booking and Payment -->
        <activity
            android:name=".Service.Booking.ScheduleSelect"
            android:exported="false" />
        <activity
            android:name=".Service.Booking.RequestSuccessActivity"
            android:exported="false" />
        <activity
            android:name=".Service.Booking.CarDetailActivity"
            android:exported="false" />
        <activity
            android:name=".Service.Booking.CustomerBookingDetailActivity"
            android:exported="true"
            android:label="Merchant Demo"
            android:launchMode="singleTask">
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />
                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />
                <data android:scheme="demozpdk" android:host="app" />
            </intent-filter>
        </activity>
        <activity
            android:name=".Service.Activity.OwnerActivityDetail"
            android:exported="false" />
        <activity android:name=".FragmentPages.Admin.UserStatsActivity" />
        <activity
            android:name=".Service.Vehicle.AdminVehicleDetailActivity"
            android:exported="false"
            android:theme="@style/Theme.CarRenting.NoActionBar" />

        <activity android:name=".Service.Booking.OwnerBookingDetailActivity"
            android:exported="false"
            android:theme="@style/Theme.CarRenting.NoActionBar" />/>
        <!-- Meta-data -->
        <meta-data
            android:name="com.google.android.geo.API_KEY"
            android:value="@string/google_api_key" />
        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />
    </application>
</manifest>
```

### src\main\java\com\uit\carrental\ActivityPages\AdminMainActivity.java
```java
package com.uit.carrental.ActivityPages;

import android.os.Bundle;
import androidx.appcompat.app.AppCompatActivity;
import androidx.fragment.app.Fragment;
import androidx.fragment.app.FragmentManager;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.uit.carrental.FragmentPages.Admin.AdminSettingsFragment;
import com.uit.carrental.FragmentPages.Admin.AdminStatisticsFragment;
import com.uit.carrental.FragmentPages.Admin.AdminUserListFragment;
import com.uit.carrental.FragmentPages.Admin.AdminVehicleListFragment;
import com.uit.carrental.R;

public class AdminMainActivity extends AppCompatActivity {

    private static final String TAG_USERS = "users";
    private static final String TAG_VEHICLES = "vehicles";
    private static final String TAG_STATISTICS = "statistics";
    private static final String TAG_SETTINGS = "settings";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_admin_main);

        BottomNavigationView bottomNavigationView = findViewById(R.id.bottom_navigation_view);
        bottomNavigationView.setBackground(null);
        bottomNavigationView.setOnItemSelectedListener(item -> {
            String tag;
            Fragment fragment = null;
            int itemId = item.getItemId();

            if (itemId == R.id.users) {
                tag = TAG_USERS;
                fragment = getSupportFragmentManager().findFragmentByTag(TAG_USERS);
                if (fragment == null) fragment = new AdminUserListFragment();
            } else if (itemId == R.id.vehicles) {
                tag = TAG_VEHICLES;
                fragment = getSupportFragmentManager().findFragmentByTag(TAG_VEHICLES);
                if (fragment == null) fragment = new AdminVehicleListFragment();
            } else if (itemId == R.id.statistics) {
                tag = TAG_STATISTICS;
                fragment = getSupportFragmentManager().findFragmentByTag(TAG_STATISTICS);
                if (fragment == null) fragment = new AdminStatisticsFragment();
            } else if (itemId == R.id.settings) {
                tag = TAG_SETTINGS;
                fragment = getSupportFragmentManager().findFragmentByTag(TAG_SETTINGS);
                if (fragment == null) fragment = new AdminSettingsFragment();
            } else {
                return false;
            }

            showFragment(fragment, tag);
            return true;
        });

        // Load default (Users)
        if (savedInstanceState == null) {
            showFragment(new AdminUserListFragment(), TAG_USERS);
            bottomNavigationView.setSelectedItemId(R.id.users);
        }
    }

    private void showFragment(Fragment fragment, String tag) {
        FragmentManager fragmentManager = getSupportFragmentManager();
        fragmentManager.beginTransaction()
                .replace(R.id.frame_layout_admin, fragment, tag)
                .addToBackStack(tag)
                .commit();
    }
}
```

### src\main\java\com\uit\carrental\ActivityPages\CustomerMainActivity.java
```java
package com.uit.carrental.ActivityPages;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import androidx.appcompat.app.AppCompatActivity;
import androidx.fragment.app.Fragment;
import androidx.fragment.app.FragmentManager;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.uit.carrental.FragmentPages.Customer.CustomerActivityFragment;
import com.uit.carrental.FragmentPages.Customer.CustomerHomeFragment;
import com.uit.carrental.FragmentPages.Customer.CustomerNotificationFragment;
import com.uit.carrental.FragmentPages.Customer.CustomerSettingFragment;
import com.uit.carrental.R;
import com.uit.carrental.databinding.CustomerActivityMainBinding;

public class CustomerMainActivity extends AppCompatActivity {

    private static final String TAG = "CustomerMainActivity";
    private CustomerActivityMainBinding binding;
    private static final String TAG_HOME = "home";
    private static final String TAG_ACTIVITY = "activity";
    private static final String TAG_NOTIFICATIONS = "notifications";
    private static final String TAG_SETTING = "setting";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        binding = CustomerActivityMainBinding.inflate(getLayoutInflater());
        setContentView(binding.getRoot());

        binding.bottomNavigationView.setBackground(null);
        binding.bottomNavigationView.setOnItemSelectedListener(item -> {
            String tag;
            Fragment fragment;
            int itemId = item.getItemId();

            if (itemId == R.id.home) {
                tag = TAG_HOME;
                fragment = getSupportFragmentManager().findFragmentByTag(TAG_HOME);
                if (fragment == null) fragment = new CustomerHomeFragment();
            } else if (itemId == R.id.activity) {
                tag = TAG_ACTIVITY;
                fragment = getSupportFragmentManager().findFragmentByTag(TAG_ACTIVITY);
                if (fragment == null) fragment = new CustomerActivityFragment();
            } else if (itemId == R.id.notifications) {
                tag = TAG_NOTIFICATIONS;
                fragment = getSupportFragmentManager().findFragmentByTag(TAG_NOTIFICATIONS);
                if (fragment == null) fragment = new CustomerNotificationFragment();
            } else if (itemId == R.id.setting) {
                tag = TAG_SETTING;
                fragment = getSupportFragmentManager().findFragmentByTag(TAG_SETTING);
                if (fragment == null) fragment = new CustomerSettingFragment();
            } else {
                return false;
            }

            showFragment(fragment, tag);
            return true;
        });

        // Xử lý intent từ các activity khác
        handleIntent(getIntent());
    }

    @Override
    protected void onNewIntent(Intent intent) {
        super.onNewIntent(intent);
        setIntent(intent);
        handleIntent(intent);
    }

    private void handleIntent(Intent intent) {
        String fragment = intent.getStringExtra("fragment");
        Log.d(TAG, "Xử lý intent, fragment: " + fragment);
        Fragment selectedFragment = null;
        String tag = TAG_HOME;
        int navItemId = R.id.home;

        if ("home".equals(fragment)) {
            selectedFragment = getSupportFragmentManager().findFragmentByTag(TAG_HOME);
            if (selectedFragment == null) selectedFragment = new CustomerHomeFragment();
            tag = TAG_HOME;
            navItemId = R.id.home;
        } else if ("notifications".equals(fragment)) {
            selectedFragment = getSupportFragmentManager().findFragmentByTag(TAG_NOTIFICATIONS);
            if (selectedFragment == null) selectedFragment = new CustomerNotificationFragment();
            tag = TAG_NOTIFICATIONS;
            navItemId = R.id.notifications;
        } else if ("activity".equals(fragment)) {
            selectedFragment = getSupportFragmentManager().findFragmentByTag(TAG_ACTIVITY);
            if (selectedFragment == null) selectedFragment = new CustomerActivityFragment();
            tag = TAG_ACTIVITY;
            navItemId = R.id.activity;
        } else if ("setting".equals(fragment)) {
            selectedFragment = getSupportFragmentManager().findFragmentByTag(TAG_SETTING);
            if (selectedFragment == null) selectedFragment = new CustomerSettingFragment();
            tag = TAG_SETTING;
            navItemId = R.id.setting;
        } else if (getSupportFragmentManager().findFragmentByTag(TAG_HOME) == null) {
            selectedFragment = new CustomerHomeFragment();
        }

        if (selectedFragment != null) {
            showFragment(selectedFragment, tag);
            binding.bottomNavigationView.setSelectedItemId(navItemId);
        }
    }

    private void showFragment(Fragment fragment, String tag) {
        FragmentManager fragmentManager = getSupportFragmentManager();
        fragmentManager.popBackStack(null, FragmentManager.POP_BACK_STACK_INCLUSIVE);
        fragmentManager.beginTransaction()
                .replace(R.id.frame_layout_customer, fragment, tag)
                .commit();
    }
}
```

### src\main\java\com\uit\carrental\ActivityPages\OwnerMainActivity.java
```java
package com.uit.carrental.ActivityPages;

import android.os.Bundle;

import androidx.appcompat.app.AppCompatActivity;
import androidx.fragment.app.Fragment;
import androidx.fragment.app.FragmentManager;
import androidx.fragment.app.FragmentTransaction;

import com.uit.carrental.FragmentPages.Owner.OwnerActivityFragment;
import com.uit.carrental.FragmentPages.Owner.OwnerNotificationsFragment;
import com.uit.carrental.FragmentPages.Owner.OwnerSettingFragment;
import com.uit.carrental.FragmentPages.Owner.OwnerVehicleFragment;
import com.uit.carrental.R;
import com.uit.carrental.databinding.OwnerActivityMainBinding;

public class OwnerMainActivity extends AppCompatActivity {

    OwnerActivityMainBinding binding;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        binding = OwnerActivityMainBinding.inflate(getLayoutInflater());
        setContentView(binding.getRoot());
        if (getSupportActionBar() != null) {
            getSupportActionBar().hide();
        }
        replaceFragment(new OwnerVehicleFragment());
        binding.bottomNavigationView.setBackground(null);

        binding.bottomNavigationView.setOnItemSelectedListener(item -> {
            int itemId = item.getItemId();

            if (itemId == R.id.vehicle) {
                replaceFragment(new OwnerVehicleFragment());
            } else if (itemId == R.id.activity) {
                replaceFragment(new OwnerActivityFragment());
            } else if (itemId == R.id.notifications) {
                replaceFragment(new OwnerNotificationsFragment());
            } else if (itemId == R.id.setting) {
                replaceFragment(new OwnerSettingFragment());
            }

            return true;
        });

    }

    private void replaceFragment(Fragment fragment)
    {
        FragmentManager fragmentManager = getSupportFragmentManager();
        FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();
        fragmentTransaction.replace(R.id.frame_layout_owner, fragment);
        fragmentTransaction.commit();
    }
}
```

### src\main\java\com\uit\carrental\ActivityPages\StartAppActivity.java
```java
package com.uit.carrental.ActivityPages;

import android.content.Intent;
import android.os.Bundle;

import androidx.appcompat.app.AppCompatActivity;
import androidx.viewpager2.widget.ViewPager2;

import com.uit.carrental.Adapter.SplashPagerAdapter;
import com.uit.carrental.FragmentPages.SplashFragment;
import com.uit.carrental.R;
import com.uit.carrental.Service.UserAuthentication.LoginActivity;

public class StartAppActivity extends AppCompatActivity implements SplashFragment.OnNextButtonClickListener {

    private ViewPager2 viewPager;
    private static final int TOTAL_SPLASHES = 4;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_splash);

        viewPager = findViewById(R.id.splash_viewpager);
        SplashPagerAdapter adapter = new SplashPagerAdapter(this);
        viewPager.setAdapter(adapter);

        viewPager.setPageTransformer((page, position) -> {
            page.setAlpha(1 - Math.abs(position));
            page.setTranslationX(-position * page.getWidth());
        });
    }

    @Override
    public void onNextButtonClicked(int position) {
        if (position < TOTAL_SPLASHES - 1) {
            viewPager.setCurrentItem(position + 1, true);
        } else {
            startActivity(new Intent(this, LoginActivity.class));
            overridePendingTransition(R.anim.anim_in_right, R.anim.anim_out_left);
            finish();
        }
    }
}
```

### src\main\java\com\uit\carrental\Adapter\ActivityAdapter.java
```java
//package com.uit.carrental.Adapter;
//
//import android.content.Intent;
//import android.view.LayoutInflater;
//import android.view.View;
//import android.view.ViewGroup;
//import android.widget.TextView;
//
//import androidx.annotation.NonNull;
//import androidx.recyclerview.widget.RecyclerView;
//
//import com.google.firebase.firestore.FirebaseFirestore;
//import com.google.firebase.firestore.QueryDocumentSnapshot;
//import com.uit.carrental.FragmentPages.Customer.CustomerActivityFragment;
//import com.uit.carrental.Model.User;
//import com.uit.carrental.R;
//import com.uit.carrental.Service.Activity.CustomerActivityDetail;
//
//import java.util.ArrayList;
//
//public class ActivityAdapter extends RecyclerView.Adapter<ActivityAdapter.MyViewHolder> {
//
//    private final CustomerActivityFragment customerActivityFragment;
//    private Activity noti;
//    private final ArrayList<Activity> mNoti;
//    private final FirebaseFirestore dtb;
//    private String name, ownerId; // Thay ProvideID bằng ownerId
//
//    public ActivityAdapter(CustomerActivityFragment mContext, ArrayList<Activity> mNoti) {
//        this.customerActivityFragment = mContext;
//        this.mNoti = mNoti;
//        this.dtb = FirebaseFirestore.getInstance();
//    }
//
//    @NonNull
//    @Override
//    public MyViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
//        View v = LayoutInflater.from(customerActivityFragment.getActivity()).inflate(R.layout.item_activity, parent, false);
//        return new MyViewHolder(v);
//    }
//
//    @Override
//    public void onBindViewHolder(@NonNull MyViewHolder holder, int position) {
//        noti = mNoti.get(position);
//        ownerId = noti.getOwnerId(); // Thay getProvider_id bằng getOwnerId
//        getUser(ownerId); // Thay ProvideID bằng ownerId
//        holder.name.setText(name != null ? name : "Đang tải...");
//        holder.id.setText(noti.getNoti_id());
//
//        // Hiển thị trạng thái
//        switch (noti.getStatus()) {
//            case "Dang cho":
//                holder.status.setText("Nhà cung cấp chưa xác nhận");
//                break;
//            case "Thanh toan":
//                holder.status.setText("Đang chờ thanh toán");
//                break;
//            case "Khong xac nhan":
//                holder.status.setText("Nhà cung cấp không xác nhận");
//                break;
//            case "Da thanh toan":
//                holder.status.setText("Đã thanh toán");
//                break;
//            default:
//                holder.status.setText("Đã xác nhận");
//                break;
//        }
//
//        // Sự kiện nhấn item
//        holder.itemView.setOnClickListener(view -> {
//            Intent intent = new Intent(customerActivityFragment.getActivity(), CustomerActivityDetail.class);
//            intent.putExtra("NotiID", noti.getNoti_id());
//            customerActivityFragment.startActivity(intent);
//        });
//    }
//
//    @Override
//    public int getItemCount() {
//        return mNoti.size();
//    }
//
//    public static class MyViewHolder extends RecyclerView.ViewHolder {
//        TextView name, status, id;
//
//        public MyViewHolder(@NonNull View itemView) {
//            super(itemView);
//            name = itemView.findViewById(R.id.tv_noti_name);
//            status = itemView.findViewById(R.id.tv_Status);
//            id = itemView.findViewById(R.id.tv_noti_ID);
//        }
//    }
//
//    private void getUser(String ownerId) { // Thay ProvideID bằng ownerId
//        dtb.collection("Users")
//                .whereEqualTo("user_id", ownerId)
//                .get()
//                .addOnCompleteListener(task -> {
//                    if (task.isSuccessful()) {
//                        for (QueryDocumentSnapshot document : task.getResult()) {
//                            User user = new User();
//                            user.setUserId(document.getString("user_id"));
//                            user.setUsername(document.getString("username"));
//                            user.setEmail(document.getString("email"));
//                            user.setPhoneNumber(document.getString("phoneNumber"));
//                            name = user.getUsername();
//                            notifyDataSetChanged(); // Cập nhật giao diện khi có tên
//                        }
//                    }
//                });
//    }
//}
```

### src\main\java\com\uit\carrental\Adapter\BookingAdapter.java
```java
package com.uit.carrental.Adapter;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;
import com.google.firebase.firestore.FirebaseFirestore;
import com.uit.carrental.Model.Booking;
import com.uit.carrental.Model.Vehicle;
import com.uit.carrental.R;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class BookingAdapter extends RecyclerView.Adapter<BookingAdapter.ViewHolder> {

    private final List<Booking> bookingList;
    private final OnBookingClickListener clickListener;
    private final FirebaseFirestore db;
    private final Map<String, String> vehicleCache;

    public interface OnBookingClickListener {
        void onBookingClick(Booking booking);
    }

    public BookingAdapter(List<Booking> bookingList, OnBookingClickListener clickListener) {
        this.bookingList = bookingList;
        this.clickListener = clickListener;
        this.db = FirebaseFirestore.getInstance();
        this.vehicleCache = new HashMap<>();
    }

    @NonNull
    @Override
    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_activity, parent, false);
        return new ViewHolder(view);
    }

    @Override
    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
        Booking booking = bookingList.get(position);
        String vehicleId = booking.getVehicleId();

        // Lấy tên xe từ cache hoặc Firestore
        if (vehicleCache.containsKey(vehicleId)) {
            holder.tvVehicleName.setText(vehicleCache.get(vehicleId));
        } else {
            db.collection("Vehicles").document(vehicleId)
                    .get()
                    .addOnSuccessListener(document -> {
                        if (document.exists()) {
                            Vehicle vehicle = document.toObject(Vehicle.class);
                            String vehicleName = vehicle != null ? vehicle.getVehicleName() : "Xe #" + vehicleId;
                            vehicleCache.put(vehicleId, vehicleName);
                            holder.tvVehicleName.setText(vehicleName);
                        } else {
                            holder.tvVehicleName.setText("Xe #" + vehicleId);
                        }
                    });
        }

        // Hiển thị trạng thái
        String statusText;
        switch (booking.getStatus()) {
            case "pending": statusText = "Chưa xác nhận"; break;
            case "confirmed": statusText = "Đã xác nhận"; break;
            case "rejected": statusText = "Bị từ chối"; break;
            case "paid": statusText = "Đã thanh toán"; break;
            case "completed": statusText = "Đã hoàn thành"; break;
            case "cancelled": statusText = "Đã hủy"; break;
            default: statusText = booking.getStatus();
        }
        holder.tvStatus.setText(statusText);
        holder.tvBookingId.setText(booking.getBookingId());

        holder.itemView.setOnClickListener(v -> clickListener.onBookingClick(booking));
    }

    @Override
    public int getItemCount() {
        return bookingList.size();
    }

    static class ViewHolder extends RecyclerView.ViewHolder {
        TextView tvVehicleName, tvStatus, tvBookingId;

        ViewHolder(View itemView) {
            super(itemView);
            tvVehicleName = itemView.findViewById(R.id.tv_noti_name);
            tvStatus = itemView.findViewById(R.id.tv_Status);
            tvBookingId = itemView.findViewById(R.id.tv_noti_ID);
        }
    }
}

```

### src\main\java\com\uit\carrental\Adapter\MessageAdapter.java
```java
package com.uit.carrental.Adapter;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import com.uit.carrental.Model.Message;
import com.uit.carrental.R;
import java.util.List;

public class MessageAdapter extends RecyclerView.Adapter<MessageAdapter.MessageViewHolder> {
    private List<Message> messages;

    public MessageAdapter(List<Message> messages) {
        this.messages = messages;
    }

    @NonNull
    @Override
    public MessageViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.message_item, parent, false);
        return new MessageViewHolder(view);
    }

    @Override
    public void onBindViewHolder(@NonNull MessageViewHolder holder, int position) {
        Message message = messages.get(position);
        holder.messageText.setText(message.getContent());

        ConstraintLayout.LayoutParams params = (ConstraintLayout.LayoutParams)
                holder.messageContainer.getLayoutParams();
        if (message.isUser()) {
            params.startToEnd = ConstraintLayout.LayoutParams.UNSET;
            params.endToEnd = ConstraintLayout.LayoutParams.PARENT_ID;
            params.setMarginEnd(8);
            holder.avatar.setVisibility(View.GONE);
            holder.messageContainer.setBackgroundResource(R.drawable.message_bubble_background_user);
        } else {
            params.startToEnd = holder.avatar.getId();
            params.endToEnd = ConstraintLayout.LayoutParams.UNSET;
            params.setMarginStart(8);
            holder.avatar.setVisibility(View.VISIBLE);
            holder.messageContainer.setBackgroundResource(R.drawable.message_bubble_background);
        }
        holder.messageContainer.setLayoutParams(params);
    }

    @Override
    public int getItemCount() {
        return messages.size();
    }

    static class MessageViewHolder extends RecyclerView.ViewHolder {
        ImageView avatar;
        LinearLayout messageContainer;
        TextView messageText;

        MessageViewHolder(@NonNull View itemView) {
            super(itemView);
            avatar = itemView.findViewById(R.id.avatar);
            messageContainer = itemView.findViewById(R.id.message_container);
            messageText = itemView.findViewById(R.id.message_text);
        }
    }
}
```

### src\main\java\com\uit\carrental\Adapter\NotificationAdapter.java
```java
package com.uit.carrental.Adapter;

import android.content.Intent;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;
import com.google.firebase.firestore.FirebaseFirestore;
import com.uit.carrental.Model.Booking;
import com.uit.carrental.Model.Notification;
import com.uit.carrental.R;
import com.uit.carrental.Service.Vehicle.VehicleDetailActivity;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;

public class NotificationAdapter extends RecyclerView.Adapter<NotificationAdapter.ViewHolder> {

    private static final String TAG = "NotificationAdapter";
    private final List<Notification> notificationList = new ArrayList<>(); // Khởi tạo tại đây
    private final OnNotificationClickListener clickListener;
    private final FirebaseFirestore db;
    private final Map<String, String> userCache;

    public interface OnNotificationClickListener {
        void onNotificationClick(Notification notification);
    }

    public NotificationAdapter(List<Notification> initialList, OnNotificationClickListener clickListener) {
        this.clickListener = clickListener;
        this.db = FirebaseFirestore.getInstance();
        this.userCache = new HashMap<>();
        if (initialList != null) {
            this.notificationList.addAll(initialList);
        }
        Log.d(TAG, "Khởi tạo adapter, số thông báo ban đầu: " + notificationList.size());
    }

    @NonNull
    @Override
    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_notification, parent, false);
        Log.d(TAG, "Tạo ViewHolder");
        return new ViewHolder(view);
    }

    @Override
    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
        Notification notification = notificationList.get(position);
        Log.d(TAG, "Binding notification: " + notification.getNotificationId());

        holder.tvTitle.setText(notification.getTitle() != null ? notification.getTitle() : "");
        holder.tvMessage.setText(notification.getMessage() != null ? notification.getMessage() : "");
        Log.d(TAG, "Set title: " + notification.getTitle() + ", message: " + notification.getMessage());

        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm", Locale.getDefault());
        try {
            holder.tvTime.setText(notification.getCreatedAt() != null ?
                    sdf.format(notification.getCreatedAt().toDate()) : "Không có thời gian");
            Log.d(TAG, "Set time: " + holder.tvTime.getText());
        } catch (Exception e) {
            Log.e(TAG, "Lỗi định dạng thời gian: ", e);
            holder.tvTime.setText("Lỗi thời gian");
        }

        if (!notification.isRead()) {
            holder.tvStatus.setVisibility(View.VISIBLE);
            holder.tvStatus.setText(R.string.notifications);
            holder.tvStatus.setTextColor(holder.itemView.getContext().getResources().getColor(R.color.orange_pending));
            Log.d(TAG, "Set status: Chưa đọc");
        } else {
            holder.tvStatus.setVisibility(View.GONE);
            Log.d(TAG, "Set status: Đã đọc");
        }

        if (notification.getBookingId() != null && !notification.getBookingId().isEmpty()) {
            String bookingId = notification.getBookingId();
            if (userCache.containsKey(bookingId)) {
                holder.tvCustomerName.setText(userCache.get(bookingId));
                Log.d(TAG, "Set customerName from cache: " + userCache.get(bookingId));
            } else {
                db.collection("Bookings").document(bookingId)
                        .get()
                        .addOnSuccessListener(document -> {
                            if (document.exists()) {
                                Booking booking = document.toObject(Booking.class);
                                if (booking != null) {
                                    String customerId = booking.getCustomerId();
                                    db.collection("Users").document(customerId)
                                            .get()
                                            .addOnSuccessListener(userDoc -> {
                                                if (userDoc.exists()) {
                                                    String username = userDoc.getString("username");
                                                    userCache.put(bookingId, username != null ? username : "Unknown");
                                                    holder.tvCustomerName.setText(username != null ? username : "Unknown");
                                                    Log.d(TAG, "Set customerName from Firestore: " + username);
                                                } else {
                                                    holder.tvCustomerName.setText("Unknown");
                                                    Log.w(TAG, "User document not found: " + customerId);
                                                }
                                            })
                                            .addOnFailureListener(e -> {
                                                holder.tvCustomerName.setText("Unknown");
                                                Log.e(TAG, "Lỗi lấy user: ", e);
                                            });
                                } else {
                                    holder.tvCustomerName.setText("Unknown");
                                    Log.w(TAG, "Booking document not found: " + bookingId);
                                }
                            } else {
                                holder.tvCustomerName.setText("Unknown");
                                Log.w(TAG, "Booking document not found: " + bookingId);
                            }
                        })
                        .addOnFailureListener(e -> {
                            holder.tvCustomerName.setText("Unknown");
                            Log.e(TAG, "Lỗi lấy booking: ", e);
                        });
            }
        } else {
            holder.tvCustomerName.setVisibility(View.GONE);
            Log.d(TAG, "Ẩn customerName vì không có bookingId");
        }

        holder.itemView.setOnClickListener(v -> {
            Log.d(TAG, "Click notification: " + notification.getNotificationId());
            if (!notification.isRead()) {
                db.collection("Notifications").document(notification.getNotificationId())
                        .update("isRead", true)
                        .addOnSuccessListener(aVoid -> Log.d(TAG, "Đánh dấu thông báo đã đọc"))
                        .addOnFailureListener(e -> Log.e(TAG, "Lỗi cập nhật isRead: ", e));
                notification.setRead(true);
                notifyItemChanged(position);
            }

            if ("vehicle_verification".equals(notification.getType()) && notification.getVehicleId() != null) {
                Intent intent = new Intent(holder.itemView.getContext(), VehicleDetailActivity.class);
                intent.putExtra("vehicleId", notification.getVehicleId());
                holder.itemView.getContext().startActivity(intent);
            }

            clickListener.onNotificationClick(notification);
        });
    }

    @Override
    public int getItemCount() {
        int count = notificationList.size();
        Log.d(TAG, "Số item trong RecyclerView: " + count);
        return count;
    }

    public void updateData(List<Notification> newNotificationList) {
        Log.d(TAG, "Cập nhật dữ liệu adapter, số thông báo: " + (newNotificationList != null ? newNotificationList.size() : 0));
        notificationList.clear();
        if (newNotificationList != null) {
            notificationList.addAll(newNotificationList);
            Log.d(TAG, "Đã thêm " + newNotificationList.size() + " thông báo vào notificationList");
        }
        notifyDataSetChanged();
        Log.d(TAG, "Gọi notifyDataSetChanged, số item hiện tại: " + notificationList.size());
    }

    static class ViewHolder extends RecyclerView.ViewHolder {
        TextView tvTitle, tvCustomerName, tvMessage, tvTime, tvStatus;

        ViewHolder(View itemView) {
            super(itemView);
            tvTitle = itemView.findViewById(R.id.tv_title);
            tvCustomerName = itemView.findViewById(R.id.tv_customer_name);
            tvMessage = itemView.findViewById(R.id.tv_noti_text);
            tvTime = itemView.findViewById(R.id.tv_time_range);
            tvStatus = itemView.findViewById(R.id.tv_status);
            Log.d(TAG, "Khởi tạo ViewHolder");
        }
    }
}
```

### src\main\java\com\uit\carrental\Adapter\OwnerActivityAdapter.java
```java
package com.uit.carrental.Adapter;

import android.content.Intent;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.uit.carrental.FragmentPages.Owner.OwnerActivityFragment;
import com.uit.carrental.Model.Booking;
import com.uit.carrental.Model.User;
import com.uit.carrental.R;
import com.uit.carrental.Service.Activity.OwnerActivityDetail;
import com.google.firebase.firestore.FirebaseFirestore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class OwnerActivityAdapter extends RecyclerView.Adapter<OwnerActivityAdapter.MyViewHolder> {

    private final OwnerActivityFragment ownerActivityFragment;
    private final List<Booking> bookingList;
    private final Map<String, String> userCache; // Cache tên người dùng
    private final FirebaseFirestore db;

    public OwnerActivityAdapter(OwnerActivityFragment context, List<Booking> bookingList) {
        this.ownerActivityFragment = context;
        this.bookingList = bookingList != null ? bookingList : new ArrayList<>();
        this.userCache = new HashMap<>();
        this.db = FirebaseFirestore.getInstance();
    }

    @NonNull
    @Override
    public MyViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View v = LayoutInflater.from(ownerActivityFragment.getActivity()).inflate(R.layout.item_activity, parent, false);
        return new MyViewHolder(v);
    }

    @Override
    public void onBindViewHolder(@NonNull MyViewHolder holder, int position) {
        Booking booking = bookingList.get(position);
        String customerId = booking.getCustomerId();

        // Lấy tên người dùng từ cache hoặc Firestore
        if (userCache.containsKey(customerId)) {
            holder.name.setText(userCache.get(customerId));
        } else {
            db.collection("Users").document(customerId)
                    .get()
                    .addOnSuccessListener(document -> {
                        if (document.exists()) {
                            String username = document.getString("username");
                            userCache.put(customerId, username != null ? username : "Unknown");
                            holder.name.setText(username != null ? username : "Unknown");
                        }
                    });
        }

        holder.id.setText(booking.getBookingId());
        switch (booking.getStatus()) {
            case "pending":
                holder.status.setText("Nhà cung cấp chưa xác nhận");
                break;
            case "confirmed":
                holder.status.setText("Đã xác nhận");
                break;
            case "rejected":
                holder.status.setText("Nhà cung cấp không xác nhận");
                break;
            case "paid":
                holder.status.setText("Đã thanh toán");
                break;
            case "completed":
                holder.status.setText("Đã hoàn thành");
                break;
            default:
                holder.status.setText(booking.getStatus());
        }

        holder.itemView.setOnClickListener(v -> {
            Intent intent = new Intent(ownerActivityFragment.getActivity(), OwnerActivityDetail.class);
            intent.putExtra("NotiID", booking.getBookingId());
            ownerActivityFragment.startActivity(intent);
        });
    }

    @Override
    public int getItemCount() {
        return bookingList.size();
    }

    public void updateData(List<Booking> newBookingList) {
        bookingList.clear();
        if (newBookingList != null) {
            bookingList.addAll(newBookingList);
        }
        notifyDataSetChanged();
    }

    public static class MyViewHolder extends RecyclerView.ViewHolder {
        TextView name, status, id;

        public MyViewHolder(@NonNull View itemView) {
            super(itemView);
            name = itemView.findViewById(R.id.tv_noti_name);
            status = itemView.findViewById(R.id.tv_Status);
            id = itemView.findViewById(R.id.tv_noti_ID);
        }
    }
}

```

### src\main\java\com\uit\carrental\Adapter\OwnerNotificationAdapter.java
```java
package com.uit.carrental.Adapter;

import android.content.Intent;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.google.firebase.firestore.FirebaseFirestore;
import com.uit.carrental.FragmentPages.Owner.OwnerNotificationsFragment;
import com.uit.carrental.Model.Booking;
import com.uit.carrental.R;
import com.uit.carrental.Service.Activity.OwnerActivityDetail;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;

public class OwnerNotificationAdapter extends RecyclerView.Adapter<OwnerNotificationAdapter.MyViewHolder> {

    private static final String TAG = "OwnerNotificationAdapter";
    private final OwnerNotificationsFragment ownerNotificationsFragment;
    private final List<Booking> bookingList = new ArrayList<>();
    private final Map<String, String> userCache;
    private final FirebaseFirestore db;

    public OwnerNotificationAdapter(OwnerNotificationsFragment context, List<Booking> initialList) {
        this.ownerNotificationsFragment = context;
        if (initialList != null) {
            this.bookingList.addAll(initialList);
        }
        this.userCache = new HashMap<>();
        this.db = FirebaseFirestore.getInstance();
        Log.d(TAG, "Khởi tạo adapter, số booking ban đầu: " + bookingList.size());
    }

    @NonNull
    @Override
    public MyViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View v = LayoutInflater.from(ownerNotificationsFragment.getActivity()).inflate(R.layout.item_notification, parent, false);
        Log.d(TAG, "Tạo ViewHolder");
        return new MyViewHolder(v);
    }

    @Override
    public void onBindViewHolder(@NonNull MyViewHolder holder, int position) {
        Booking booking = bookingList.get(position);
        String customerId = booking.getCustomerId();
        Log.d(TAG, "Binding booking: " + booking.getBookingId() + ", customerId: " + customerId);

        if (userCache.containsKey(customerId)) {
            holder.customerName.setText(userCache.get(customerId));
            Log.d(TAG, "Set customerName from cache: " + userCache.get(customerId));
        } else {
            db.collection("Users").document(customerId)
                    .get()
                    .addOnSuccessListener(document -> {
                        if (document.exists()) {
                            String username = document.getString("username");
                            userCache.put(customerId, username != null ? username : "Unknown");
                            holder.customerName.setText(username != null ? username : "Unknown");
                            Log.d(TAG, "Set customerName from Firestore: " + username);
                        } else {
                            holder.customerName.setText("Unknown");
                            Log.w(TAG, "User document not found: " + customerId);
                        }
                    })
                    .addOnFailureListener(e -> {
                        holder.customerName.setText("Unknown");
                        Log.e(TAG, "Lỗi lấy user: ", e);
                    });
        }

        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm", Locale.getDefault());
        try {
            String timeRange = String.format("Từ %s đến %s",
                    sdf.format(booking.getStartTime().toDate()),
                    sdf.format(booking.getEndTime().toDate()));
            holder.timeRange.setText(timeRange);
            Log.d(TAG, "Set timeRange: " + timeRange);
        } catch (Exception e) {
            Log.e(TAG, "Lỗi định dạng thời gian: ", e);
            holder.timeRange.setText("Lỗi thời gian");
        }

        String statusText;
        switch (booking.getStatus()) {
            case "pending": statusText = "Bạn vừa nhận một yêu cầu mới"; break;
            case "confirmed": statusText = "Yêu cầu đã được xác nhận"; break;
            case "rejected": statusText = "Yêu cầu đã bị từ chối"; break;
            case "paid": statusText = "Yêu cầu đã được thanh toán"; break;
            case "completed": statusText = "Yêu cầu đã hoàn thành"; break;
            default: statusText = booking.getStatus();
        }
        holder.status.setText(statusText);
        Log.d(TAG, "Set status: " + statusText);

        holder.itemView.setOnClickListener(v -> {
            Intent intent = new Intent(ownerNotificationsFragment.getActivity(), OwnerActivityDetail.class);
            intent.putExtra("NotiID", booking.getBookingId());
            ownerNotificationsFragment.startActivity(intent);
            Log.d(TAG, "Click booking: " + booking.getBookingId());
        });
    }

    @Override
    public int getItemCount() {
        int count = bookingList.size();
        Log.d(TAG, "Số item trong RecyclerView: " + count);
        return count;
    }

    public void updateData(List<Booking> newBookingList) {
        Log.d(TAG, "Cập nhật dữ liệu adapter, số booking: " + (newBookingList != null ? newBookingList.size() : 0));
        bookingList.clear();
        if (newBookingList != null) {
            bookingList.addAll(newBookingList);
            Log.d(TAG, "Đã thêm " + newBookingList.size() + " booking vào bookingList");
        }
        notifyDataSetChanged();
        Log.d(TAG, "Gọi notifyDataSetChanged, số item hiện tại: " + bookingList.size());
    }

    public static class MyViewHolder extends RecyclerView.ViewHolder {
        TextView customerName, timeRange, status;

        public MyViewHolder(@NonNull View itemView) {
            super(itemView);
            customerName = itemView.findViewById(R.id.tv_customer_name);
            timeRange = itemView.findViewById(R.id.tv_time_range);
            status = itemView.findViewById(R.id.tv_noti_text);
            Log.d(TAG, "Khởi tạo ViewHolder");
        }
    }
}
```

### src\main\java\com\uit\carrental\Adapter\OwnerVehicleAdapter.java
```java
package com.uit.carrental.Adapter;

import android.content.Context;
import android.content.Intent;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;
import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;
import com.bumptech.glide.Glide;
import com.bumptech.glide.load.engine.DiskCacheStrategy;
import com.google.firebase.firestore.FirebaseFirestore;
import com.uit.carrental.Model.User;
import com.uit.carrental.Model.Vehicle;
import com.uit.carrental.R;
import com.uit.carrental.Service.Vehicle.UpdateVehicleActivity;
import java.util.ArrayList;

public class OwnerVehicleAdapter extends RecyclerView.Adapter<OwnerVehicleAdapter.MyViewHolder> {
    private static final String TAG = "OwnerVehicleAdapter";
    private final Context context;
    private final ArrayList<Vehicle> vehicleList;
    private final FirebaseFirestore db;

    public OwnerVehicleAdapter(Context context, ArrayList<Vehicle> vehicleList) {
        this.context = context;
        this.vehicleList = vehicleList != null ? vehicleList : new ArrayList<>();
        this.db = FirebaseFirestore.getInstance();
    }

    @NonNull
    @Override
    public MyViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.owner_vehicle_card, parent, false);
        return new MyViewHolder(view);
    }

    @Override
    public void onBindViewHolder(@NonNull MyViewHolder holder, int position) {
        Vehicle vehicle = vehicleList.get(position);
        Log.d(TAG, "Bind xe tại vị trí " + position + ": " + vehicle.toString());

        // Bind data
        holder.textViewVehicleName.setText(vehicle.getVehicleName() != null && !vehicle.getVehicleName().isEmpty() ? vehicle.getVehicleName() : "Xe mẫu");
        holder.textViewPrice.setText(vehicle.getVehiclePrice() != null && !vehicle.getVehiclePrice().isEmpty() ? vehicle.getVehiclePrice() : "500.000 VNĐ/Ngày");
        holder.textViewRating.setText(String.format("%.1f (0 Đánh giá)", vehicle.getVehicleRating()));

        // Hiển thị trạng thái xác minh
        String verificationStatus = vehicle.getVerificationStatus() != null ? vehicle.getVerificationStatus() : "pending";
        holder.verificationStatus.setText(verificationStatus.equals("verified") ? "Đã duyệt" : "Đang chờ duyệt");
        holder.verificationStatus.setTextColor(verificationStatus.equals("verified") ?
                context.getResources().getColor(R.color.green_verified) :
                context.getResources().getColor(R.color.orange_pending));

        // Load provider name
        String ownerId = vehicle.getOwnerId();
        if (ownerId != null && !ownerId.isEmpty()) {
            db.collection("Users").document(ownerId).get()
                    .addOnSuccessListener(documentSnapshot -> {
                        if (documentSnapshot.exists()) {
                            User user = documentSnapshot.toObject(User.class);
                            String username = user != null && user.getUsername() != null && !user.getUsername().isEmpty() ? user.getUsername() : "Nhà cung cấp mẫu";
                            holder.textViewProviderName.setText(username);
                            Log.d(TAG, "Provider name cho xe " + vehicle.getVehicleName() + ": " + username);
                        } else {
                            holder.textViewProviderName.setText("Nhà cung cấp mẫu");
                            Log.w(TAG, "Không tìm thấy user: " + ownerId);
                        }
                    })
                    .addOnFailureListener(e -> {
                        holder.textViewProviderName.setText("Nhà cung cấp mẫu");
                        Log.e(TAG, "Lỗi tải user: " + e.getMessage());
                    });
        } else {
            holder.textViewProviderName.setText("Nhà cung cấp mẫu");
            Log.w(TAG, "ownerId null cho xe: " + vehicle.getVehicleName());
        }

        // Load image
        if (context != null) {
            Glide.with(context)
                    .load(vehicle.getVehicleImageUrl() != null && !vehicle.getVehicleImageUrl().isEmpty() ? vehicle.getVehicleImageUrl() : R.drawable.ic_car)
                    .thumbnail(0.25f)
                    .diskCacheStrategy(DiskCacheStrategy.ALL)
                    .placeholder(R.drawable.ic_car)
                    .error(R.drawable.ic_car)
                    .into(holder.imageViewVehicle);
            Log.d(TAG, "Tải ảnh cho xe " + vehicle.getVehicleName() + ": " + vehicle.getVehicleImageUrl());
        }

        // Handle click
        holder.itemView.setOnClickListener(view -> {
            if (vehicle.getVehicleId() != null) {
                Intent intent = new Intent(context, UpdateVehicleActivity.class);
                intent.putExtra("vehicleId", vehicle.getVehicleId()); // Sửa key thành vehicleId
                context.startActivity(intent);
                Log.d(TAG, "Nhấn vào xe: " + vehicle.getVehicleId());
            } else {
                Toast.makeText(context, "Lỗi: Không tìm thấy ID xe", Toast.LENGTH_SHORT).show();
                Log.e(TAG, "vehicleId null cho xe: " + vehicle.getVehicleName());
            }
        });
    }

    @Override
    public int getItemCount() {
        Log.d(TAG, "Số item trong RecyclerView: " + vehicleList.size());
        return vehicleList.size();
    }

    public void updateData(ArrayList<Vehicle> newVehicleList) {
        Log.d(TAG, "Cập nhật dữ liệu adapter, số xe: " + (newVehicleList != null ? newVehicleList.size() : 0));
        vehicleList.clear();
        if (newVehicleList != null) {
            vehicleList.addAll(newVehicleList);
        }
        notifyDataSetChanged();
    }

    static class MyViewHolder extends RecyclerView.ViewHolder {
        TextView textViewVehicleName, textViewPrice, textViewProviderName, textViewRating, verificationStatus;
        ImageView imageViewVehicle;

        MyViewHolder(@NonNull View itemView) {
            super(itemView);
            textViewVehicleName = itemView.findViewById(R.id.vehicle_name);
            textViewPrice = itemView.findViewById(R.id.tv_vehicle_price);
            textViewProviderName = itemView.findViewById(R.id.provider_name);
            textViewRating = itemView.findViewById(R.id.vehicle_rating);
            verificationStatus = itemView.findViewById(R.id.verification_status);
            imageViewVehicle = itemView.findViewById(R.id.img_vehicle);
            Log.d(TAG, "Khởi tạo ViewHolder");
        }
    }
}

```

### src\main\java\com\uit\carrental\Adapter\SplashPagerAdapter.java
```java
package com.uit.carrental.Adapter;

import androidx.annotation.NonNull;
import androidx.fragment.app.Fragment;
import androidx.fragment.app.FragmentActivity;
import androidx.viewpager2.adapter.FragmentStateAdapter;

import com.uit.carrental.FragmentPages.SplashFragment;
import com.uit.carrental.R;

public class SplashPagerAdapter extends FragmentStateAdapter {

    private final int[] splashLayouts = {
            R.layout.sflash_1,
            R.layout.sflash_2,
            R.layout.sflash_3,
            R.layout.sflash_4
    };

    public SplashPagerAdapter(@NonNull FragmentActivity fragmentActivity) {
        super(fragmentActivity);
    }

    @NonNull
    @Override
    public Fragment createFragment(int position) {
        return SplashFragment.newInstance(splashLayouts[position], position);
    }

    @Override
    public int getItemCount() {
        return splashLayouts.length;
    }
}
```

### src\main\java\com\uit\carrental\Adapter\UserAdapter.java
```java
package com.uit.carrental.Adapter;

import android.app.AlertDialog;
import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;
import com.bumptech.glide.Glide;
import com.uit.carrental.Model.User;
import com.uit.carrental.R;
import java.util.List;

public class UserAdapter extends RecyclerView.Adapter<UserAdapter.UserViewHolder> {

    private final List<User> userList;
    private final OnUserClickListener clickListener;
    private final OnDeleteClickListener deleteListener;

    public interface OnUserClickListener {
        void onUserClick(int position);
    }

    public interface OnDeleteClickListener {
        void onDeleteClick(int position);
    }

    public UserAdapter(List<User> userList, OnUserClickListener clickListener, OnDeleteClickListener deleteListener) {
        this.userList = userList;
        this.clickListener = clickListener;
        this.deleteListener = deleteListener;
    }

    @NonNull
    @Override
    public UserViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_user, parent, false);
        return new UserViewHolder(view);
    }

    @Override
    public void onBindViewHolder(@NonNull UserViewHolder holder, int position) {
        User user = userList.get(position);

        // Bind data
        holder.textViewUsername.setText(user.getUsername() != null && !user.getUsername().isEmpty() ? user.getUsername() : "Unknown User");
        String verificationStatus = user.getVerificationStatus() != null ? user.getVerificationStatus() : "Not Set";
        String status = user.getStatus() != null ? user.getStatus() : "Not Set";
        holder.textViewDescription.setText(String.format("Role: %s | Verification: %s | Status: %s",
                user.getCurrentRole() != null ? user.getCurrentRole() : "Not Set", verificationStatus, status));

        // Load avatar
        Glide.with(holder.itemView.getContext())
                .load(user.getAvatarUrl() != null && !user.getAvatarUrl().isEmpty() ? user.getAvatarUrl() : R.drawable.ic_person)
                .placeholder(R.drawable.ic_person)
                .into(holder.imageViewAvatar);

        // Click listener for item
        holder.itemView.setOnClickListener(v -> {
            if (clickListener != null) {
                clickListener.onUserClick(position);
            }
        });

        // Click listener for delete button
        holder.deleteButton.setOnClickListener(v -> {
            if (holder.itemView.getContext() != null) {
                new AlertDialog.Builder(holder.itemView.getContext())
                        .setTitle("Xác nhận xóa")
                        .setMessage("Bạn có muốn xóa " + (user.getUsername() != null && !user.getUsername().isEmpty() ? user.getUsername() : "người dùng này") + "?")
                        .setNegativeButton("Hủy", (dialog, which) -> dialog.dismiss())
                        .setPositiveButton("Xác nhận", (dialog, which) -> {
                            if (deleteListener != null) {
                                deleteListener.onDeleteClick(position);
                            }
                        })
                        .create()
                        .show();
            }
        });
    }

    @Override
    public int getItemCount() {
        return userList != null ? userList.size() : 0;
    }

    public void updateData(List<User> newData) {
        this.userList.clear();
        if (newData != null) {
            this.userList.addAll(newData);
        }
        notifyDataSetChanged();
    }

    static class UserViewHolder extends RecyclerView.ViewHolder {
        ImageView imageViewAvatar, deleteButton;
        TextView textViewUsername, textViewDescription;

        UserViewHolder(@NonNull View itemView) {
            super(itemView);
            imageViewAvatar = itemView.findViewById(R.id.user_avatar);
            textViewUsername = itemView.findViewById(R.id.user_name);
            textViewDescription = itemView.findViewById(R.id.user_description);
            deleteButton = itemView.findViewById(R.id.btn_delete);
        }
    }
}

```

### src\main\java\com\uit\carrental\Adapter\VehicleAdapter.java
```java
package com.uit.carrental.Adapter;

import android.content.Intent;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.fragment.app.Fragment;
import androidx.recyclerview.widget.RecyclerView;
import com.bumptech.glide.Glide;
import com.bumptech.glide.load.engine.DiskCacheStrategy;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.uit.carrental.FragmentPages.Admin.AdminVehicleListFragment;
import com.uit.carrental.FragmentPages.Customer.CustomerHomeFragment;
import com.uit.carrental.FragmentPages.Owner.OwnerVehicleFragment;
import com.uit.carrental.Model.Vehicle;
import com.uit.carrental.Model.onClickInterface;
import com.uit.carrental.R;
import com.uit.carrental.Service.Vehicle.AdminVehicleDetailActivity;
import com.uit.carrental.Service.Vehicle.UpdateVehicleActivity;
import com.uit.carrental.Service.Vehicle.VehicleDetailActivity;

import java.util.ArrayList;
import java.util.List;

public class VehicleAdapter extends RecyclerView.Adapter<VehicleAdapter.ViewHolder> {

    private static final String TAG = "VehicleAdapter";
    private final Fragment fragment;
    private ArrayList<Vehicle> vehicles;
    private final onClickInterface onClickInterface;

    public VehicleAdapter(Fragment fragment, ArrayList<Vehicle> vehicles, onClickInterface onClickInterface) {
        this.fragment = fragment;
        this.vehicles = vehicles != null ? vehicles : new ArrayList<>();
        this.onClickInterface = onClickInterface;
        Log.d(TAG, "Khởi tạo adapter với " + this.vehicles.size() + " xe");
    }

    @NonNull
    @Override
    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        int layoutRes = fragment instanceof AdminVehicleListFragment ? R.layout.admin_vehicle_card : R.layout.vehicle_card;
        View view = LayoutInflater.from(parent.getContext()).inflate(layoutRes, parent, false);
        return new ViewHolder(view, fragment instanceof AdminVehicleListFragment);
    }

    @Override
    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
        if (vehicles == null || position >= vehicles.size()) {
            Log.e(TAG, "Danh sách xe rỗng hoặc vị trí không hợp lệ: " + position);
            return;
        }

        Vehicle vehicle = vehicles.get(position);
        Log.d(TAG, "Ánh xạ xe: " + vehicle.getVehicleName() + ", ID: " + vehicle.getVehicleId() +
                ", verificationStatus: " + vehicle.getVerificationStatus());

        // Ánh xạ chung
        holder.vehicleName.setText(vehicle.getVehicleName() != null ? vehicle.getVehicleName() : "Xe không tên");
        holder.vehiclePrice.setText(vehicle.getVehiclePrice() != null ? vehicle.getVehiclePrice() : "0 VNĐ");
        Float rating = vehicle.getVehicleRating();
        holder.vehicleRating.setText(String.format("%.1f (0 Đánh giá)", rating != null ? rating : 0.0f));

        // Tải ảnh
        if (fragment.getContext() != null) {
            if (vehicle.getVehicleImageUrl() != null && !vehicle.getVehicleImageUrl().isEmpty()) {
                Glide.with(fragment.getContext())
                        .load(vehicle.getVehicleImageUrl())
                        .placeholder(R.drawable.ic_car)
                        .diskCacheStrategy(DiskCacheStrategy.ALL)
                        .into(holder.vehicleImage);
            } else {
                holder.vehicleImage.setImageResource(R.drawable.ic_car);
            }
        }

        // Ánh xạ riêng cho admin
        if (holder.isAdminView) {
            holder.vehicleNumber.setText(vehicle.getVehicleNumber() != null ? vehicle.getVehicleNumber() : "Không có biển số");
            holder.vehicleBrand.setText(vehicle.getVehicleBrand() != null ? vehicle.getVehicleBrand() : "Không có thương hiệu");
            holder.vehicleAvailability.setText(getAvailabilityText(vehicle.getVehicleAvailability()));
            holder.verificationStatus.setText(getVerificationStatusText(vehicle.getVerificationStatus()));
            holder.verificationStatus.setTextColor(fragment.getResources().getColor(
                    vehicle.getVerificationStatus() != null && vehicle.getVerificationStatus().equals("verified") ?
                            R.color.green_verified : R.color.orange_pending));
        }

        // Xử lý nhấn xe
        holder.itemView.setOnClickListener(v -> {
            if (fragment.getContext() == null || vehicle.getVehicleId() == null) {
                Log.e(TAG, "Context or vehicleId is null");
                if (fragment.getContext() != null) {
                    Toast.makeText(fragment.getContext(), "Lỗi: Không thể mở chi tiết xe", Toast.LENGTH_SHORT).show();
                }
                return;
            }

            Intent intent;
            if (fragment instanceof AdminVehicleListFragment) {
                intent = new Intent(fragment.getContext(), AdminVehicleDetailActivity.class);
            } else if (fragment instanceof OwnerVehicleFragment) {
                FirebaseUser currentUser = FirebaseAuth.getInstance().getCurrentUser();
                if (currentUser != null && vehicle.getOwnerId() != null && vehicle.getOwnerId().equals(currentUser.getUid())) {
                    intent = new Intent(fragment.getContext(), UpdateVehicleActivity.class);
                } else {
                    intent = new Intent(fragment.getContext(), VehicleDetailActivity.class);
                }
            } else if (fragment instanceof CustomerHomeFragment) {
                intent = new Intent(fragment.getContext(), VehicleDetailActivity.class);
            } else {
                intent = new Intent(fragment.getContext(), VehicleDetailActivity.class);
            }
            intent.putExtra("vehicleId", vehicle.getVehicleId());
            fragment.startActivity(intent);
            onClickInterface.setClick(position);
        });
    }

    private String getAvailabilityText(String availability) {
        if (availability == null) return "Không xác định";
        switch (availability) {
            case "renting": return "Đang cho thuê";
            case "available": return "Có sẵn";
            case "maintenance": return "Đang bảo trì";
            case "pending": return "Đang chờ duyệt";
            default: return "Không xác định";
        }
    }

    private String getVerificationStatusText(String verificationStatus) {
        if (verificationStatus == null) return "Không xác định";
        switch (verificationStatus) {
            case "verified": return "Đã duyệt";
            case "pending": return "Chưa duyệt";
            default: return "Không xác định";
        }
    }

    @Override
    public int getItemCount() {
        int count = vehicles != null ? vehicles.size() : 0;
        Log.d(TAG, "getItemCount: " + count);
        return count;
    }

    public void updateData(List<Vehicle> newVehicleList) {
        vehicles.clear();
        if (newVehicleList != null) {
            vehicles.addAll(newVehicleList);
        }
        notifyDataSetChanged();
        Log.d(TAG, "Cập nhật dữ liệu adapter, số xe: " + vehicles.size());
    }

    static class ViewHolder extends RecyclerView.ViewHolder {
        ImageView vehicleImage;
        TextView vehicleName, vehicleNumber, vehiclePrice, vehicleBrand, vehicleAvailability, verificationStatus, vehicleRating;
        boolean isAdminView;

        ViewHolder(View itemView, boolean isAdminView) {
            super(itemView);
            this.isAdminView = isAdminView;
            vehicleImage = itemView.findViewById(isAdminView ? R.id.vehicle_image : R.id.img_vehicle);
            vehicleName = itemView.findViewById(R.id.vehicle_name);
            vehiclePrice = itemView.findViewById(isAdminView ? R.id.vehicle_price : R.id.tv_vehicle_price);
            vehicleRating = itemView.findViewById(R.id.vehicle_rating);
            if (isAdminView) {
                vehicleNumber = itemView.findViewById(R.id.vehicle_number);
                vehicleBrand = itemView.findViewById(R.id.vehicle_brand);
                vehicleAvailability = itemView.findViewById(R.id.vehicle_availability);
                verificationStatus = itemView.findViewById(R.id.verification_status);
            }
        }
    }
}
```

### src\main\java\com\uit\carrental\Adapter\ViewPagerAdapter.java
```java
package com.uit.carrental.Adapter;

import androidx.annotation.NonNull;
import androidx.fragment.app.Fragment;
import androidx.fragment.app.FragmentActivity;
import androidx.viewpager2.adapter.FragmentStateAdapter;
import com.uit.carrental.FragmentPages.Customer.ChatFragment;
import com.uit.carrental.FragmentPages.Customer.CustomerHomeFragment;

public class ViewPagerAdapter extends FragmentStateAdapter {
    public ViewPagerAdapter(@NonNull FragmentActivity fragmentActivity) {
        super(fragmentActivity);
    }

    @NonNull
    @Override
    public Fragment createFragment(int position) {
        switch (position) {
            case 0:
                return new CustomerHomeFragment();
            case 1:
                return new ChatFragment();
            default:
                return new CustomerHomeFragment();
        }
    }

    @Override
    public int getItemCount() {
        return 2; // Two tabs: Home and Chat
    }
}
```

### src\main\java\com\uit\carrental\FragmentPages\SplashFragment.java
```java
package com.uit.carrental.FragmentPages;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;

import com.uit.carrental.R;

public class SplashFragment extends Fragment {

    private static final String ARG_LAYOUT = "layout";
    private static final String ARG_POSITION = "position";
    private OnNextButtonClickListener listener;

    public interface OnNextButtonClickListener {
        void onNextButtonClicked(int position);
    }

    public static SplashFragment newInstance(int layoutResId, int position) {
        SplashFragment fragment = new SplashFragment();
        Bundle args = new Bundle();
        args.putInt(ARG_LAYOUT, layoutResId);
        args.putInt(ARG_POSITION, position);
        fragment.setArguments(args);
        return fragment;
    }

    @Override
    public void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        if (getActivity() instanceof OnNextButtonClickListener) {
            listener = (OnNextButtonClickListener) getActivity();
        }
    }

    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        int layoutResId = getArguments() != null ? getArguments().getInt(ARG_LAYOUT) : R.layout.sflash_1;
        View view = inflater.inflate(layoutResId, container, false);

        Button nextButton = view.findViewById(R.id.next_button);
        int position = getArguments() != null ? getArguments().getInt(ARG_POSITION) : 0;
        nextButton.setOnClickListener(v -> {
            if (listener != null) {
                listener.onNextButtonClicked(position);
            }
        });

        return view;
    }
}
```

### src\main\java\com\uit\carrental\FragmentPages\Admin\AdminSettingsFragment.java
```java
package com.uit.carrental.FragmentPages.Admin;

import android.content.Intent;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;
import com.bumptech.glide.Glide;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.firestore.FirebaseFirestore;
import com.uit.carrental.R;
import com.uit.carrental.Service.UserAuthentication.LoginActivity;

public class AdminSettingsFragment extends Fragment {

    private ImageView imageViewAvatar, imageViewEdit;
    private TextView textViewName, textViewEdit;
    private View layoutAdminAccount, layoutCommission, layoutNotifications, layoutAdminHistory, layoutSignOut;
    private FirebaseAuth auth;
    private FirebaseFirestore db;

    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.fragment_admin_settings, container, false);

        // Initialize Firebase
        auth = FirebaseAuth.getInstance();
        db = FirebaseFirestore.getInstance();

        // Initialize views
        imageViewAvatar = view.findViewById(R.id.rqqkbht2nw9);
        imageViewEdit = view.findViewById(R.id.ryhyrsup3suq);
        textViewName = view.findViewById(R.id.rzxbt2b9du3b);
        textViewEdit = view.findViewById(R.id.rwemqtod737b);
        layoutAdminAccount = view.findViewById(R.id.layout_admin_account);
        layoutCommission = view.findViewById(R.id.layout_commission);
        layoutNotifications = view.findViewById(R.id.layout_notifications);
        layoutAdminHistory = view.findViewById(R.id.layout_admin_history);
        layoutSignOut = view.findViewById(R.id.r6uqs59f1co);

        // Set text for item_setting_row
        setupSettingRow(layoutAdminAccount, "Quản lý tài khoản quản trị viên");
        setupSettingRow(layoutCommission, "Cấu hình hoa hồng sàn");
        setupSettingRow(layoutNotifications, "Cấu hình hệ thống thông báo");
        setupSettingRow(layoutAdminHistory, "Lịch sử thao tác admin");

        // Load admin info
        loadAdminInfo();

        // Setup click listeners
        textViewEdit.setOnClickListener(v -> {
            Toast.makeText(getContext(), "Chỉnh sửa thông tin admin", Toast.LENGTH_SHORT).show();
        });

        layoutAdminAccount.setOnClickListener(v -> {
            Toast.makeText(getContext(), "Quản lý tài khoản quản trị viên", Toast.LENGTH_SHORT).show();
        });

        layoutCommission.setOnClickListener(v -> {
            Toast.makeText(getContext(), "Cấu hình hoa hồng sàn", Toast.LENGTH_SHORT).show();
        });

        layoutNotifications.setOnClickListener(v -> {
            Toast.makeText(getContext(), "Cấu hình hệ thống thông báo", Toast.LENGTH_SHORT).show();
        });

        layoutAdminHistory.setOnClickListener(v -> {
            Toast.makeText(getContext(), "Lịch sử thao tác admin", Toast.LENGTH_SHORT).show();
        });

        layoutSignOut.setOnClickListener(v -> signOut());

        return view;
    }

    private void setupSettingRow(View layout, String text) {
        TextView textView = layout.findViewById(R.id.setting_text);
        if (textView != null) {
            textView.setText(text);
        }
    }

    private void loadAdminInfo() {
        if (auth.getCurrentUser() != null) {
            String userId = auth.getCurrentUser().getUid();
            db.collection("Users").document(userId).get()
                    .addOnSuccessListener(documentSnapshot -> {
                        if (documentSnapshot.exists()) {
                            String username = documentSnapshot.getString("username");
                            String avatarUrl = documentSnapshot.getString("avatarUrl");
                            textViewName.setText(username != null ? username : "Admin");
                            if (avatarUrl != null && !avatarUrl.isEmpty() && getContext() != null) {
                                Glide.with(getContext()).load(avatarUrl).into(imageViewAvatar);
                            }
                        } else {
                            loadMockAdminInfo();
                        }
                    })
                    .addOnFailureListener(e -> loadMockAdminInfo());
        } else {
            loadMockAdminInfo();
        }
    }

    private void loadMockAdminInfo() {
        textViewName.setText("Chị em chúng mình");
        if (getContext() != null) {
            Glide.with(getContext()).load(R.drawable.ic_person).into(imageViewAvatar);
        }
    }

    private void signOut() {
        auth.signOut();
        if (getActivity() != null) {
            startActivity(new Intent(getActivity(), LoginActivity.class));
            getActivity().finish();
        }
    }
}

```

### src\main\java\com\uit\carrental\FragmentPages\Admin\AdminStatisticsFragment.java
```java
package com.uit.carrental.FragmentPages.Admin;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.os.Bundle;
import android.util.AttributeSet;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;
import com.bumptech.glide.Glide;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.firestore.Query;
import com.google.firebase.firestore.QueryDocumentSnapshot;
import com.uit.carrental.Model.Vehicle;
import com.uit.carrental.R;
import java.util.ArrayList;
import java.util.List;

public class AdminStatisticsFragment extends Fragment {

    private TextView textViewTotalUsers, textViewTotalOwners, textViewTotalRevenue, textViewMonthlyRevenue;
    private LinearLayout layoutUserStats;
    private RelativeLayout layoutRevenueStats; // Sửa từ LinearLayout thành RelativeLayout
    private RecyclerView recyclerViewTopVehicles;
    private TopVehicleAdapter topVehicleAdapter;
    private FirebaseFirestore db;
    private List<VehicleStat> topVehicles;

    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.fragment_admin_statistics, container, false);

        // Initialize Firebase
        db = FirebaseFirestore.getInstance();

        // Initialize views
        textViewTotalUsers = view.findViewById(R.id.rp42wc0fjdv);
        textViewTotalOwners = view.findViewById(R.id.rtcscqww51js);
        textViewTotalRevenue = view.findViewById(R.id.r26rof30hetx);
        textViewMonthlyRevenue = view.findViewById(R.id.rk10ooehcyo);
        layoutUserStats = view.findViewById(R.id.r4bw82dxnrcg);
        layoutRevenueStats = view.findViewById(R.id.r15sr6ipgnjs_rl); // Sửa ánh xạ
        recyclerViewTopVehicles = view.findViewById(R.id.rutuu0f5fk3);

        // Setup RecyclerView
        recyclerViewTopVehicles.setLayoutManager(new LinearLayoutManager(getContext()));
        topVehicles = new ArrayList<>();
        topVehicleAdapter = new TopVehicleAdapter(topVehicles);
        recyclerViewTopVehicles.setAdapter(topVehicleAdapter);

        // Load static images
        loadStaticImages(view);

        // Load statistics
        loadStatistics();

        // Setup click listeners
        layoutUserStats.setOnClickListener(v -> {
            Toast.makeText(getContext(), "Xem chi tiết thống kê người dùng", Toast.LENGTH_SHORT).show();
        });
        layoutRevenueStats.setOnClickListener(v -> {
            Toast.makeText(getContext(), "Xem chi tiết thống kê doanh thu", Toast.LENGTH_SHORT).show();
        });

        return view;
    }

    private void loadStaticImages(View view) {
        Context context = getContext();
        if (context != null) {
            Glide.with(context)
                    .load("https://storage.googleapis.com/tagjs-prod.appspot.com/v1/3ysO8Aie7W/x074yc50_expires_30_days.png")
                    .into((ImageView) view.findViewById(R.id.r3qtlrf08vac));
            Glide.with(context)
                    .load("https://storage.googleapis.com/tagjs-prod.appspot.com/v1/3ysO8Aie7W/l5omzz94_expires_30_days.png")
                    .into((ImageView) view.findViewById(R.id.rerhjwf5h2qm));
            Glide.with(context)
                    .load("https://storage.googleapis.com/tagjs-prod.appspot.com/v1/3ysO8Aie7W/f1rhppxs_expires_30_days.png")
                    .into((ImageView) view.findViewById(R.id.r15sr6ipgnjs));
        }
    }

    private void loadStatistics() {
        // Tổng số người dùng
        db.collection("Users").get().addOnSuccessListener(querySnapshot -> {
            textViewTotalUsers.setText(String.format("%,d", querySnapshot.size()));
        }).addOnFailureListener(e -> loadMockData());

        // Tổng số chủ xe
        db.collection("Users")
                .whereEqualTo("roles.owner", true)
                .get()
                .addOnSuccessListener(querySnapshot -> {
                    textViewTotalOwners.setText(String.format("%,d", querySnapshot.size()));
                });

        // Doanh thu tổng
        db.collection("Orders").get().addOnSuccessListener(querySnapshot -> {
            long totalRevenue = 0;
            for (QueryDocumentSnapshot document : querySnapshot) {
                Long revenue = document.getLong("totalAmount");
                if (revenue != null) totalRevenue += revenue;
            }
            textViewTotalRevenue.setText(String.format("%,dM", totalRevenue / 1_000_000));
        });

        // Doanh thu tháng này
        long oneMonthAgo = System.currentTimeMillis() - 30L * 24 * 60 * 60 * 1000;
        db.collection("Orders")
                .whereGreaterThan("timestamp", oneMonthAgo)
                .get()
                .addOnSuccessListener(querySnapshot -> {
                    long monthlyRevenue = 0;
                    for (QueryDocumentSnapshot document : querySnapshot) {
                        Long revenue = document.getLong("totalAmount");
                        if (revenue != null) monthlyRevenue += revenue;
                    }
                    textViewMonthlyRevenue.setText(String.format("%,d", monthlyRevenue));
                });

        // Top 5 xe được thuê
        db.collection("Orders")
                .whereGreaterThan("timestamp", oneMonthAgo)
                .orderBy("vehicleId", Query.Direction.DESCENDING)
                .limit(5)
                .get()
                .addOnSuccessListener(querySnapshot -> {
                    topVehicles.clear();
                    for (QueryDocumentSnapshot document : querySnapshot) {
                        String vehicleId = document.getString("vehicleId");
                        long totalOrders = document.getLong("totalOrders") != null ? document.getLong("totalOrders") : 1;
                        long revenue = document.getLong("totalAmount") != null ? document.getLong("totalAmount") : 0;
                        db.collection("Vehicles").document(vehicleId).get().addOnSuccessListener(vehicleDoc -> {
                            if (vehicleDoc.exists()) {
                                Vehicle vehicle = vehicleDoc.toObject(Vehicle.class);
                                if (vehicle != null) {
                                    topVehicles.add(new VehicleStat(
                                            vehicle.getVehicleName(),
                                            vehicle.getVehicleNumber(),
                                            totalOrders,
                                            revenue
                                    ));
                                    topVehicleAdapter.notifyDataSetChanged();
                                }
                            }
                        });
                    }
                });
    }

    private void loadMockData() {
        textViewTotalUsers.setText("25,000");
        textViewTotalOwners.setText("1,000");
        textViewTotalRevenue.setText("900M");
        textViewMonthlyRevenue.setText("90,000,000");
        topVehicles.clear();
        for (int i = 1; i <= 5; i++) {
            topVehicles.add(new VehicleStat(
                    "Vinfast Lux A2.0 " + i,
                    "CS254" + i,
                    187L,
                    8_522_000L
            ));
        }
        topVehicleAdapter.notifyDataSetChanged();
    }

    private static class TopVehicleAdapter extends RecyclerView.Adapter<TopVehicleAdapter.ViewHolder> {
        private final List<VehicleStat> vehicles;

        TopVehicleAdapter(List<VehicleStat> vehicles) {
            this.vehicles = vehicles;
        }

        @NonNull
        @Override
        public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
            View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.vehicle_stat_item, parent, false);
            return new ViewHolder(view);
        }

        @Override
        public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
            VehicleStat stat = vehicles.get(position);
            holder.textViewName.setText(stat.name);
            holder.textViewNumber.setText(stat.vehicleNumber);
            holder.textViewTotalOrders.setText(String.valueOf(stat.totalOrders));
            holder.textViewRevenue.setText(String.format("%,d", stat.revenue));
            holder.itemView.setBackgroundColor(position % 2 == 0 ? Color.parseColor("#C9F3FF") : Color.WHITE);
        }

        @Override
        public int getItemCount() {
            return vehicles.size();
        }

        static class ViewHolder extends RecyclerView.ViewHolder {
            TextView textViewName, textViewNumber, textViewTotalOrders, textViewRevenue;

            ViewHolder(View itemView) {
                super(itemView);
                textViewName = itemView.findViewById(R.id.vehicle_name);
                textViewNumber = itemView.findViewById(R.id.vehicle_number);
                textViewTotalOrders = itemView.findViewById(R.id.total_orders);
                textViewRevenue = itemView.findViewById(R.id.revenue);
            }
        }
    }

    private static class VehicleStat {
        String name;
        String vehicleNumber;
        long totalOrders;
        long revenue;

        VehicleStat(String name, String vehicleNumber, long totalOrders, long revenue) {
            this.name = name;
            this.vehicleNumber = vehicleNumber;
            this.totalOrders = totalOrders;
            this.revenue = revenue;
        }
    }

    public static class SimpleBarChart extends View {
        private final Paint paint;
        private float[] values = {800, 2000, 600, 1200, 400, 3000, 100};

        public SimpleBarChart(Context context) {
            super(context);
            paint = new Paint();
            paint.setAntiAlias(true);
        }

        public SimpleBarChart(Context context, @Nullable AttributeSet attrs) {
            super(context, attrs);
            paint = new Paint();
            paint.setAntiAlias(true);
        }

        public SimpleBarChart(Context context, @Nullable AttributeSet attrs, int defStyleAttr) {
            super(context, attrs, defStyleAttr);
            paint = new Paint();
            paint.setAntiAlias(true);
        }

        public void setValues(float[] newValues) {
            this.values = newValues;
            invalidate();
        }

        @Override
        protected void onDraw(Canvas canvas) {
            super.onDraw(canvas);
            float width = getWidth();
            float height = getHeight();
            float barWidth = width / 10f;
            float maxHeight = height * 0.8f;

            int[] colors = {Color.parseColor("#3DD34C"), Color.parseColor("#6D62F7")};

            for (int i = 0; i < values.length; i++) {
                paint.setColor(colors[i % 2]);
                float left = i * barWidth * 1.2f + barWidth * 0.1f;
                float top = height - (values[i] / 3000 * maxHeight);
                float right = left + barWidth;
                float bottom = height;
                canvas.drawRect(left, top, right, bottom, paint);
            }
        }
    }
}

```

### src\main\java\com\uit\carrental\FragmentPages\Admin\AdminUserListFragment.java
```java
package com.uit.carrental.FragmentPages.Admin;

import android.app.AlertDialog;
import android.content.Intent;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;
import androidx.fragment.app.FragmentTransaction;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.firestore.DocumentSnapshot;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.firestore.ListenerRegistration;
import com.uit.carrental.Adapter.UserAdapter;
import com.uit.carrental.Model.User;
import com.uit.carrental.R;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

public class AdminUserListFragment extends Fragment {

    private RecyclerView recyclerViewUsers;
    private TextView textViewUserCount, textViewUserStats;
    private LinearLayout buttonSearch, buttonPage1, buttonPage2, buttonPage3;
    private ImageView imageViewFilter, imageViewSearch, imageViewPrevPage, imageViewNextPage;
    private EditText editTextSearch;
    private UserAdapter userAdapter;
    private List<User> userList; // Danh sách tất cả người dùng từ Firestore
    private List<User> filteredUserList; // Danh sách sau khi lọc và tìm kiếm
    private FirebaseFirestore db;
    private FirebaseAuth auth;
    private int currentPage = 1;
    private int totalPages = 1;
    private static final int ITEMS_PER_PAGE = 5;
    private String currentQuery = "";
    private String currentVerificationStatus;
    private ListenerRegistration usersListener;

    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.fragment_admin_user_list, container, false);

        // Initialize Firebase
        db = FirebaseFirestore.getInstance();
        auth = FirebaseAuth.getInstance();

        // Initialize views
        recyclerViewUsers = view.findViewById(R.id.user_list);
        textViewUserCount = view.findViewById(R.id.tv_user_count);
        textViewUserStats = view.findViewById(R.id.btn_user_stats);
        buttonSearch = view.findViewById(R.id.search_container);
        imageViewFilter = view.findViewById(R.id.filter_button);
        imageViewSearch = view.findViewById(R.id.search_button);
        editTextSearch = view.findViewById(R.id.search_input);
        buttonPage1 = view.findViewById(R.id.page_1_button);
        buttonPage2 = view.findViewById(R.id.page_2_button);
        buttonPage3 = view.findViewById(R.id.page_3_button);
        imageViewPrevPage = view.findViewById(R.id.prev_page_button);
        imageViewNextPage = view.findViewById(R.id.next_page_button);

        // Setup RecyclerView
        recyclerViewUsers.setLayoutManager(new LinearLayoutManager(getContext()));
        userList = new ArrayList<>();
        filteredUserList = new ArrayList<>();
        userAdapter = new UserAdapter(filteredUserList, position -> {
            UserStatsFragment fragment = new UserStatsFragment();
            Bundle args = new Bundle();
            args.putString("userId", filteredUserList.get(position).getUserId());
            fragment.setArguments(args);
            FragmentTransaction transaction = getParentFragmentManager().beginTransaction();
            transaction.replace(R.id.frame_layout_admin, fragment);
            transaction.addToBackStack(null);
            transaction.commit();
        }, position -> {
            User user = filteredUserList.get(position);
            if (user.getUserId() != null) {
                deleteUser(user.getUserId(), position);
            } else {
                Toast.makeText(getContext(), "Không tìm thấy ID người dùng", Toast.LENGTH_SHORT).show();
            }
        });
        recyclerViewUsers.setAdapter(userAdapter);

        // Check admin role
        if (auth.getCurrentUser() != null) {
            checkAdminRole(auth.getCurrentUser().getUid());
        } else {
            Toast.makeText(getContext(), "Vui lòng đăng nhập", Toast.LENGTH_SHORT).show();
            requireActivity().finish();
        }

        // Setup search
        setupSearch();

        // Setup filter
        setupFilter();

        // Setup pagination
        setupPagination();

        // Setup user stats button
        textViewUserStats.setOnClickListener(v -> {
            Intent intent = new Intent(getContext(), UserStatsActivity.class);
            startActivity(intent);
        });

        return view;
    }

    private void checkAdminRole(String userId) {
        db.collection("Users").document(userId)
                .get()
                .addOnSuccessListener(documentSnapshot -> {
                    if (documentSnapshot.exists()) {
                        User user = documentSnapshot.toObject(User.class);
                        if (user == null || !user.hasRole("admin")) {
                            Toast.makeText(getContext(), "Bạn không có quyền admin", Toast.LENGTH_SHORT).show();
                            requireActivity().finish();
                        } else {
                            loadUsersRealTime();
                        }
                    } else {
                        Toast.makeText(getContext(), "Không tìm thấy thông tin người dùng", Toast.LENGTH_SHORT).show();
                        requireActivity().finish();
                    }
                })
                .addOnFailureListener(e -> {
                    Toast.makeText(getContext(), "Lỗi khi kiểm tra vai trò: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                    requireActivity().finish();
                });
    }

    private void setupSearch() {
        buttonSearch.setOnClickListener(v -> updateFilteredList());
        imageViewSearch.setOnClickListener(v -> updateFilteredList());

        editTextSearch.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {}

            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {}

            @Override
            public void afterTextChanged(Editable s) {
                currentQuery = s.toString().trim().toLowerCase();
                currentPage = 1;
                updateFilteredList();
            }
        });
    }

    private void setupFilter() {
        imageViewFilter.setOnClickListener(v -> {
            new AlertDialog.Builder(getContext())
                    .setTitle("Lọc người dùng")
                    .setItems(new String[]{"Đã xác minh", "Chờ xác minh", "Tất cả"}, (dialog, which) -> {
                        currentVerificationStatus = switch (which) {
                            case 0 -> "verified";
                            case 1 -> "pending";
                            default -> null;
                        };
                        currentPage = 1;
                        updateFilteredList();
                    })
                    .setNegativeButton("Hủy", null)
                    .show();
        });
    }

    private void setupPagination() {
        buttonPage1.setOnClickListener(v -> setPage(1));
        buttonPage2.setOnClickListener(v -> setPage(2));
        buttonPage3.setOnClickListener(v -> setPage(3));
        imageViewPrevPage.setOnClickListener(v -> setPage(currentPage - 1));
        imageViewNextPage.setOnClickListener(v -> setPage(currentPage + 1));
        updatePageButtons();
    }

    private void setPage(int page) {
        if (page < 1 || page > totalPages) return;
        currentPage = page;
        updateRecyclerView();
    }

    private void updatePageButtons() {
        buttonPage1.setBackgroundResource(currentPage == 1 ? R.drawable.cr15b003087 : R.drawable.s003087sw1cr15bffffff);
        buttonPage2.setBackgroundResource(currentPage == 2 ? R.drawable.cr15b003087 : R.drawable.s003087sw1cr15bffffff);
        buttonPage3.setBackgroundResource(currentPage == 3 ? R.drawable.cr15b003087 : R.drawable.s003087sw1cr15bffffff);
        imageViewPrevPage.setEnabled(currentPage > 1);
        imageViewNextPage.setEnabled(currentPage < totalPages);
        buttonPage1.setVisibility(totalPages >= 1 ? View.VISIBLE : View.GONE);
        buttonPage2.setVisibility(totalPages >= 2 ? View.VISIBLE : View.GONE);
        buttonPage3.setVisibility(totalPages >= 3 ? View.VISIBLE : View.GONE);
    }

    private void loadUsersRealTime() {
        // Lắng nghe thay đổi thời gian thực trên collection Users
        usersListener = db.collection("Users")
                .addSnapshotListener((querySnapshot, error) -> {
                    if (error != null) {
                        Toast.makeText(getContext(), "Lỗi tải dữ liệu: " + error.getMessage(), Toast.LENGTH_SHORT).show();
                        loadMockData();
                        return;
                    }

                    if (querySnapshot != null) {
                        userList.clear();
                        for (DocumentSnapshot document : querySnapshot.getDocuments()) {
                            User user = document.toObject(User.class);
                            if (user != null && user.getUserId() != null) {
                                userList.add(user);
                            }
                        }
                        updateFilteredList();
                    }
                });
    }

    private void updateFilteredList() {
        filteredUserList.clear();

        // Lọc và tìm kiếm client-side
        for (User user : userList) {
            boolean matchesSearch = currentQuery.isEmpty() ||
                    (user.getUsername() != null && user.getUsername().toLowerCase().contains(currentQuery)) ||
                    (user.getEmail() != null && user.getEmail().toLowerCase().contains(currentQuery));
            boolean matchesFilter = currentVerificationStatus == null ||
                    (user.getVerificationStatus() != null && user.getVerificationStatus().equalsIgnoreCase(currentVerificationStatus));

            if (matchesSearch && matchesFilter) {
                filteredUserList.add(user);
            }
        }

        // Sắp xếp theo username client-side
        filteredUserList.sort((u1, u2) -> {
            String username1 = u1.getUsername() != null ? u1.getUsername().toLowerCase() : "";
            String username2 = u2.getUsername() != null ? u2.getUsername().toLowerCase() : "";
            return username1.compareTo(username2);
        });

        // Cập nhật tổng số trang
        totalPages = (int) Math.ceil((double) filteredUserList.size() / ITEMS_PER_PAGE);
        textViewUserCount.setText("Tổng số người dùng: " + filteredUserList.size());
        updatePageButtons();
        updateRecyclerView();
    }

    private void loadMockData() {
        userList.clear();
        filteredUserList.clear();
        String[] verificationStatuses = {"verified", "pending"};
        for (int i = 1; i <= 15; i++) {
            User mockUser = new User();
            mockUser.setUserId("mock_user_" + i);
            mockUser.setUsername("Người dùng " + i);
            mockUser.setEmail("user" + i + "@example.com");
            mockUser.setVerificationStatus(verificationStatuses[i % 2]);
            mockUser.setRoles(Map.of("customer", true));
            userList.add(mockUser);
        }
        updateFilteredList();
    }

    private void updateRecyclerView() {
        int start = (currentPage - 1) * ITEMS_PER_PAGE;
        int end = Math.min(start + ITEMS_PER_PAGE, filteredUserList.size());
        List<User> paginatedList = new ArrayList<>();
        if (start < filteredUserList.size()) {
            paginatedList.addAll(filteredUserList.subList(start, end));
        }
        userAdapter.updateData(paginatedList);
        recyclerViewUsers.scrollToPosition(0); // Cuộn lên đầu khi cập nhật
    }

    private void deleteUser(String userId, int position) {
        db.collection("Users").document(userId)
                .delete()
                .addOnSuccessListener(aVoid -> {
                    // Không cần xóa thủ công vì listener sẽ tự động cập nhật userList
                    Toast.makeText(getContext(), "Đã xóa người dùng", Toast.LENGTH_SHORT).show();
                })
                .addOnFailureListener(e -> {
                    Toast.makeText(getContext(), "Lỗi xóa người dùng: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                });
    }

    @Override
    public void onDestroyView() {
        super.onDestroyView();
        // Hủy listener để tránh rò rỉ bộ nhớ
        if (usersListener != null) {
            usersListener.remove();
        }
    }
}

```

### src\main\java\com\uit\carrental\FragmentPages\Admin\AdminVehicleListFragment.java
```java
package com.uit.carrental.FragmentPages.Admin;

import android.app.AlertDialog;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;
import androidx.lifecycle.LiveData;
import androidx.lifecycle.MutableLiveData;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;
import com.google.android.material.slider.RangeSlider;
import com.google.firebase.firestore.DocumentSnapshot;
import com.google.firebase.firestore.FirebaseFirestore;
import com.uit.carrental.Adapter.VehicleAdapter;
import com.uit.carrental.Model.Vehicle;
import com.uit.carrental.R;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class AdminVehicleListFragment extends Fragment {

    private static final String TAG = "AdminVehicleList";
    private RecyclerView recyclerViewVehicles;
    private TextView textViewVehicleCount;
    private LinearLayout buttonSearch;
    private ImageView imageViewFilter, imageView_search;
    private EditText editTextSearch;
    private VehicleAdapter vehicleAdapter;
    private List<Vehicle> vehicleList;
    private MutableLiveData<List<Vehicle>> filteredVehicleList;
    private FirebaseFirestore dbVehicle;
    private MutableLiveData<String> currentQuery;
    private String currentBrand = null;
    private String currentStatus = null;
    private String currentVerificationStatus = null;
    private Float currentMinRating = 0.0f;
    private Float currentMaxRating = 5.0f;

    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.fragment_admin_vehicle_list, container, false);

        // Initialize Firebase
        dbVehicle = FirebaseFirestore.getInstance();

        // Initialize LiveData
        vehicleList = new ArrayList<>();
        filteredVehicleList = new MutableLiveData<>(new ArrayList<>());
        currentQuery = new MutableLiveData<>("");

        // Initialize views
        recyclerViewVehicles = view.findViewById(R.id.recycler_view_vehicles);
        textViewVehicleCount = view.findViewById(R.id.tv_vehicle_count);
        buttonSearch = view.findViewById(R.id.rmhryoy6hglh);
        imageViewFilter = view.findViewById(R.id.filter_button);
        imageView_search = view.findViewById(R.id.search_button);
        editTextSearch = view.findViewById(R.id.search_input);

        // Setup RecyclerView
        recyclerViewVehicles.setLayoutManager(new LinearLayoutManager(getContext()));
        vehicleAdapter = new VehicleAdapter(this, new ArrayList<>(), position -> {});
        recyclerViewVehicles.setAdapter(vehicleAdapter);

        // Observe filtered list
        filteredVehicleList.observe(getViewLifecycleOwner(), vehicles -> {
            if (vehicles == null || vehicles.isEmpty()) {
                Log.d(TAG, "Danh sách xe rỗng sau khi lọc");
                vehicleAdapter.updateData(new ArrayList<>());
                textViewVehicleCount.setText(getString(R.string.total_vehicles, 0));

            } else {
                vehicleAdapter.updateData(new ArrayList<>(vehicles));
                textViewVehicleCount.setText(getString(R.string.total_vehicles, vehicles.size()));
            }
            Log.d(TAG, "Cập nhật RecyclerView với " + (vehicles != null ? vehicles.size() : 0) + " xe");
        });

        // Setup search
        setupSearch();

        // Setup filter
        setupFilter();

        // Load vehicles
        loadVehicles();

        return view;
    }

    private void setupSearch() {
        buttonSearch.setOnClickListener(v -> performSearch());
        imageView_search.setOnClickListener(v -> performSearch());

        editTextSearch.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {}

            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {}

            @Override
            public void afterTextChanged(Editable s) {
                currentQuery.setValue(s.toString().trim().toLowerCase());
            }
        });

        currentQuery.observe(getViewLifecycleOwner(), query -> {
            if (!vehicleList.isEmpty()) {
                applyFilter();
            }
        });
    }

    private void setupFilter() {
        imageViewFilter.setOnClickListener(v -> showFilterDialog());
    }

    private void loadVehicles() {
        dbVehicle.collection("Vehicles")
                .get()
                .addOnSuccessListener(querySnapshot -> {
                    vehicleList.clear();
                    for (DocumentSnapshot document : querySnapshot) {
                        try {
                            Vehicle vehicle = document.toObject(Vehicle.class);
                            if (vehicle != null && vehicle.getVehicleId() != null) {
                                vehicleList.add(vehicle);

                            }
                        } catch (Exception e) {
                            Log.e(TAG, "Lỗi ánh xạ tài liệu: " + document.getId(), e);
                        }
                    }
                    applyFilter();
                    Log.d(TAG, "Tải " + vehicleList.size() + " xe từ Firestore");
                })
                .addOnFailureListener(e -> {
                    Log.e(TAG, "Lỗi tải dữ liệu: " + e.getMessage());
                    Toast.makeText(getContext(), "Lỗi tải dữ liệu: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                    loadMockData();
                });
    }

    private void loadMockData() {
        vehicleList.clear();
        String[] brands = {"Vinfast", "Honda", "Mercedes", "BMW", "Ford", "Toyota"};
        String[] statuses = {"renting", "available", "maintenance", "pending"};
        String[] verificationStatuses = {"verified", "pending"};
        for (int i = 1; i <= 15; i++) {
            Vehicle mockVehicle = new Vehicle();
            mockVehicle.setVehicleId("mock_vehicle_" + i);
            mockVehicle.setVehicleName("Xe mẫu " + i);
            mockVehicle.setVehiclePrice("500.000 VNĐ/Ngày");
            mockVehicle.setVehicleImageUrl("https://example.com/car.jpg");
            mockVehicle.setOwnerId("mock_user_" + i);
            mockVehicle.setVehicleNumber("ABC" + (1000 + i));
            mockVehicle.setVehicleAvailability(statuses[i % 4]);
            mockVehicle.setVehicleBrand(brands[i % 6]);
            mockVehicle.setVehicleRating((float) (3 + (i % 3)));
            mockVehicle.setVerificationStatus(verificationStatuses[i % 2]);

            vehicleList.add(mockVehicle);
        }
        applyFilter();
        Log.d(TAG, "Tải dữ liệu giả: " + vehicleList.size() + " xe");
    }

    private void performSearch() {
        currentQuery.setValue(editTextSearch.getText().toString().trim().toLowerCase());
    }

    private void showFilterDialog() {
        AlertDialog.Builder builder = new AlertDialog.Builder(requireContext());
        View dialogView = LayoutInflater.from(requireContext()).inflate(R.layout.dialog_vehicle_filter, null);
        builder.setView(dialogView);

        // Initialize dialog views
        Spinner spinnerBrand = dialogView.findViewById(R.id.spinner_brand);
        Spinner spinnerAvailability = dialogView.findViewById(R.id.spinner_availability);
        Spinner spinnerVerification = dialogView.findViewById(R.id.spinner_verification);
        TextView tvFuelTypeLabel = dialogView.findViewById(R.id.tv_fuel_type_label);
        Spinner spinnerFuelType = dialogView.findViewById(R.id.spinner_fuel_type);
        TextView tvPriceLabel = dialogView.findViewById(R.id.tv_price_label);
        RangeSlider sliderPrice = dialogView.findViewById(R.id.slider_price);
        RangeSlider sliderRating = dialogView.findViewById(R.id.slider_rating);
        Button btnApply = dialogView.findViewById(R.id.btn_apply_filter);
        Button btnClear = dialogView.findViewById(R.id.btn_clear_filter);
        Button btnCancel = dialogView.findViewById(R.id.btn_cancel);

        // Hide Customer-specific fields
        tvFuelTypeLabel.setVisibility(View.GONE);
        spinnerFuelType.setVisibility(View.GONE);
        tvPriceLabel.setVisibility(View.GONE);
        sliderPrice.setVisibility(View.GONE);

        // Setup spinners
        List<String> brands = new ArrayList<>(Arrays.asList(getString(R.string.all_brands), "Vinfast", "Honda", "Mercedes", "BMW", "Ford", "Toyota"));
        List<String> availabilities = new ArrayList<>(Arrays.asList(getString(R.string.all_availability), "renting", "available", "maintenance", "pending"));
        List<String> verifications = new ArrayList<>(Arrays.asList(getString(R.string.all_verification), "verified", "pending"));
        ArrayAdapter<String> brandAdapter = new ArrayAdapter<>(requireContext(), android.R.layout.simple_spinner_item, brands);
        ArrayAdapter<String> availabilityAdapter = new ArrayAdapter<>(requireContext(), android.R.layout.simple_spinner_item, availabilities);
        ArrayAdapter<String> verificationAdapter = new ArrayAdapter<>(requireContext(), android.R.layout.simple_spinner_item, verifications);
        brandAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        availabilityAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        verificationAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        spinnerBrand.setAdapter(brandAdapter);
        spinnerAvailability.setAdapter(availabilityAdapter);
        spinnerVerification.setAdapter(verificationAdapter);

        // Set default filter values
        spinnerBrand.setSelection(currentBrand != null ? brands.indexOf(currentBrand) : 0);
        spinnerAvailability.setSelection(currentStatus != null ? availabilities.indexOf(currentStatus) : 0);
        spinnerVerification.setSelection(currentVerificationStatus != null ? verifications.indexOf(currentVerificationStatus) : 0);
        sliderRating.setValues(
                currentMinRating != null ? currentMinRating : 0.0f,
                currentMaxRating != null ? currentMaxRating : 5.0f
        );

        AlertDialog dialog = builder.create();

        btnApply.setOnClickListener(v -> {
            currentBrand = spinnerBrand.getSelectedItem().toString().equals(getString(R.string.all_brands)) ? null : spinnerBrand.getSelectedItem().toString();
            currentStatus = spinnerAvailability.getSelectedItem().toString().equals(getString(R.string.all_availability)) ? null : spinnerAvailability.getSelectedItem().toString();
            currentVerificationStatus = spinnerVerification.getSelectedItem().toString().equals(getString(R.string.all_verification)) ? null : spinnerVerification.getSelectedItem().toString();
            List<Float> ratingValues = sliderRating.getValues();
            currentMinRating = ratingValues.isEmpty() ? 0.0f : ratingValues.get(0);
            currentMaxRating = ratingValues.size() < 2 ? 5.0f : ratingValues.get(1);
            applyFilter();
            dialog.dismiss();
        });

        btnClear.setOnClickListener(v -> {
            currentBrand = null;
            currentStatus = null;
            currentVerificationStatus = null;
            currentMinRating = 0.0f;
            currentMaxRating = 5.0f;
            spinnerBrand.setSelection(0);
            spinnerAvailability.setSelection(0);
            spinnerVerification.setSelection(0);
            sliderRating.setValues(0.0f, 5.0f);
            applyFilter();
            dialog.dismiss();
        });

        btnCancel.setOnClickListener(v -> dialog.dismiss());

        dialog.show();
    }

    private void applyFilter() {
        String query = currentQuery.getValue() != null ? currentQuery.getValue() : "";
        List<String> keywords = Arrays.asList(query.split("\\s+"));
        List<Vehicle> filteredList = new ArrayList<>();

        for (Vehicle vehicle : vehicleList) {
            boolean matches = true;

            // Tìm kiếm theo từ khóa
            if (!query.isEmpty()) {
                boolean queryMatch = false;
                String name = vehicle.getVehicleName() != null ? vehicle.getVehicleName().toLowerCase() : "";
                String number = vehicle.getVehicleNumber() != null ? vehicle.getVehicleNumber().toLowerCase() : "";
                for (String keyword : keywords) {
                    if (!keyword.isEmpty()) {
                        queryMatch |= name.contains(keyword) || number.contains(keyword);
                    }
                }
                matches &= queryMatch;
            }

            // Lọc theo thương hiệu
            if (currentBrand != null) {
                matches &= vehicle.getVehicleBrand() != null && vehicle.getVehicleBrand().equalsIgnoreCase(currentBrand);
            }

            // Lọc theo trạng thái sẵn sàng
            if (currentStatus != null) {
                matches &= vehicle.getVehicleAvailability() != null && vehicle.getVehicleAvailability().equalsIgnoreCase(currentStatus);
            }

            // Lọc theo trạng thái xác minh
            if (currentVerificationStatus != null) {
                matches &= vehicle.getVerificationStatus() != null && vehicle.getVerificationStatus().equalsIgnoreCase(currentVerificationStatus);
            }

            // Lọc theo điểm đánh giá
            Float rating = vehicle.getVehicleRating();
            float finalRating = rating != null ? rating : 0.0f;
            matches &= finalRating >= currentMinRating && finalRating <= currentMaxRating;

            if (matches) {
                filteredList.add(vehicle);
            }
        }

        filteredVehicleList.setValue(filteredList);
        Log.d(TAG, "Áp dụng bộ lọc, kết quả: " + filteredList.size() + " xe");
    }
}
```

### src\main\java\com\uit\carrental\FragmentPages\Admin\RequestSupplementDialogFragment.java
```java
package com.uit.carrental.FragmentPages.Admin;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.DialogFragment;
import com.uit.carrental.R;

public class RequestSupplementDialogFragment extends DialogFragment {

    private static final String ARG_RECIPIENT_ID = "recipient_id";
    private static final String ARG_VEHICLE_ID = "vehicle_id";
    private static final String ARG_TYPE = "type";

    private String recipientId;
    private String vehicleId;
    private String type;
    private OnSubmitListener onSubmitListener;

    public interface OnSubmitListener {
        void onSubmit(String message);
    }

    public static RequestSupplementDialogFragment newInstance(String recipientId, String vehicleId, String type) {
        RequestSupplementDialogFragment fragment = new RequestSupplementDialogFragment();
        Bundle args = new Bundle();
        args.putString(ARG_RECIPIENT_ID, recipientId);
        args.putString(ARG_VEHICLE_ID, vehicleId);
        args.putString(ARG_TYPE, type);
        fragment.setArguments(args);
        return fragment;
    }

    @Override
    public void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        if (getArguments() != null) {
            recipientId = getArguments().getString(ARG_RECIPIENT_ID);
            vehicleId = getArguments().getString(ARG_VEHICLE_ID);
            type = getArguments().getString(ARG_TYPE);
        }
    }

    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.dialog_request_supplement, container, false);

        TextView tvTitle = view.findViewById(R.id.rk1bxbo5ts2e);
        EditText etMessage = view.findViewById(R.id.ro1uxzv0nk4);
        LinearLayout btnSubmit = view.findViewById(R.id.r7nlv9onk9j3);
        ImageView btnClose = view.findViewById(R.id.close_cicle);

        tvTitle.setText(type.equals("violation_warning") ? "Cảnh báo vi phạm" : "Yêu cầu bổ sung");
        etMessage.setHint(type.equals("violation_warning") ? "Nhập lý do vi phạm..." : "Nhập yêu cầu bổ sung...");

        btnSubmit.setOnClickListener(v -> {
            String message = etMessage.getText().toString().trim();
            if (!message.isEmpty() && onSubmitListener != null) {
                onSubmitListener.onSubmit(message);
                dismiss();
            }
        });

        btnClose.setOnClickListener(v -> dismiss());

        return view;
    }

    public void setOnSubmitListener(OnSubmitListener listener) {
        this.onSubmitListener = listener;
    }
}
```

### src\main\java\com\uit\carrental\FragmentPages\Admin\SimpleBarChart.java
```java
package com.uit.carrental.FragmentPages.Admin;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.util.AttributeSet;
import android.view.View;
import androidx.annotation.Nullable;

public class SimpleBarChart extends View {
    private final Paint paint;
    private float[] values = {800, 2000, 600, 1200, 400, 3000, 100};

    public SimpleBarChart(Context context) {
        super(context);
        paint = new Paint();
        paint.setAntiAlias(true);
    }

    public SimpleBarChart(Context context, @Nullable AttributeSet attrs) {
        super(context, attrs);
        paint = new Paint();
        paint.setAntiAlias(true);
    }

    public SimpleBarChart(Context context, @Nullable AttributeSet attrs, int defStyleAttr) {
        super(context, attrs, defStyleAttr);
        paint = new Paint();
        paint.setAntiAlias(true);
    }

    public void setValues(float[] newValues) {
        this.values = newValues;
        invalidate();
    }

    @Override
    protected void onDraw(Canvas canvas) {
        super.onDraw(canvas);
        float width = getWidth();
        float height = getHeight();
        float barWidth = width / 10f;
        float maxHeight = height * 0.8f;

        int[] colors = {Color.parseColor("#3DD34C"), Color.parseColor("#6D62F7")};

        for (int i = 0; i < values.length; i++) {
            paint.setColor(colors[i % 2]);
            float left = i * barWidth * 1.2f + barWidth * 0.1f;
            float top = height - (values[i] / 3000 * maxHeight);
            float right = left + barWidth;
            float bottom = height;
            canvas.drawRect(left, top, right, bottom, paint);
        }
    }
}
```

### src\main\java\com\uit\carrental\FragmentPages\Admin\UserStatsActivity.java
```java
package com.uit.carrental.FragmentPages.Admin;

import android.os.Bundle;
import android.view.View;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.appcompat.app.AppCompatActivity;
import com.bumptech.glide.Glide;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.firestore.Query;
import com.uit.carrental.R;

public class UserStatsActivity extends AppCompatActivity {

    private FirebaseFirestore db;
    private TextView totalUsersText, verifiedUsersText, blockedUsersText;
    private TextView roleFilterText, weekFilterText, monthFilterText;
    private String currentRoleFilter = "all"; // Mặc định: Tất cả
    private String currentTimeFilter = "week"; // Mặc định: Tuần này

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_user_stats);

        // Initialize Firebase
        db = FirebaseFirestore.getInstance();

        // Initialize views
        totalUsersText = findViewById(R.id.rbnyyf0spm7); // Tổng người dùng
        verifiedUsersText = findViewById(R.id.rhnirr1sgd5v); // Đã xác minh
        blockedUsersText = findViewById(R.id.r16az2h4g5wq); // Bị khóa
        roleFilterText = findViewById(R.id.r2wdtx5r7t1z); // Lọc vai trò
        weekFilterText = findViewById(R.id.ri2lrieii73); // Tuần này
        monthFilterText = findViewById(R.id.rqf6h1ypj6yc); // Tháng này

        // Load images with Glide
        Glide.with(this)
                .load("https://storage.googleapis.com/tagjs-prod.appspot.com/v1/3ysO8Aie7W/6u69svtl_expires_30_days.png")
                .into((ImageView) findViewById(R.id.r44o74nwoz3c));
        Glide.with(this)
                .load("https://storage.googleapis.com/tagjs-prod.appspot.com/v1/3ysO8Aie7W/x890qmzm_expires_30_days.png")
                .into((ImageView) findViewById(R.id.r7pj51g0csi3));
        Glide.with(this)
                .load("https://storage.googleapis.com/tagjs-prod.appspot.com/v1/3ysO8Aie7W/01lxgpk7_expires_30_days.png")
                .into((ImageView) findViewById(R.id.rtpvn3lra5m));

        // Setup click listeners for filters
        findViewById(R.id.rgcqxgwhq1ni).setOnClickListener(v -> {
            toggleRoleFilter();
            loadUserStats();
        });

        findViewById(R.id.rnlm6qxgv01).setOnClickListener(v -> {
            currentTimeFilter = "week";
            updateTimeFilterUI();
            loadUserStats();
        });

        findViewById(R.id.ranjw4ubsk1p).setOnClickListener(v -> {
            currentTimeFilter = "month";
            updateTimeFilterUI();
            loadUserStats();
        });

        // Load initial stats
        loadUserStats();
    }

    private void toggleRoleFilter() {
        switch (currentRoleFilter) {
            case "all":
                currentRoleFilter = "admin";
                roleFilterText.setText("Admin");
                break;
            case "admin":
                currentRoleFilter = "owner";
                roleFilterText.setText("Chủ xe");
                break;
            case "owner":
                currentRoleFilter = "renter";
                roleFilterText.setText("Người thuê");
                break;
            case "renter":
                currentRoleFilter = "all";
                roleFilterText.setText("Tất cả");
                break;
        }
    }

    private void updateTimeFilterUI() {
        if (currentTimeFilter.equals("week")) {
            weekFilterText.setBackgroundResource(R.drawable.cr8b0b54da5e);
            monthFilterText.setBackgroundResource(R.drawable.cr8b00308726);
        } else {
            weekFilterText.setBackgroundResource(R.drawable.cr8b00308726);
            monthFilterText.setBackgroundResource(R.drawable.cr8b0b54da5e);
        }
    }

    private void loadUserStats() {
        long timeThreshold = currentTimeFilter.equals("week")
                ? System.currentTimeMillis() - 7L * 24 * 60 * 60 * 1000
                : System.currentTimeMillis() - 30L * 24 * 60 * 60 * 1000;

        // Tổng người dùng
        Query totalQuery = db.collection("Users");
        if (!currentRoleFilter.equals("all")) {
            totalQuery = totalQuery.whereEqualTo("roles." + currentRoleFilter, true);
        }
        totalQuery.whereGreaterThan("createdAt", timeThreshold)
                .get()
                .addOnSuccessListener(querySnapshot -> {
                    totalUsersText.setText(String.format("%,d", querySnapshot.size()));
                })
                .addOnFailureListener(e -> {
                    totalUsersText.setText("0");
                });

        // Người dùng đã xác minh
        Query verifiedQuery = db.collection("Users")
                .whereEqualTo("verificationStatus", "verified");
        if (!currentRoleFilter.equals("all")) {
            verifiedQuery = verifiedQuery.whereEqualTo("roles." + currentRoleFilter, true);
        }
        verifiedQuery.whereGreaterThan("createdAt", timeThreshold)
                .get()
                .addOnSuccessListener(querySnapshot -> {
                    verifiedUsersText.setText(String.format("%,d", querySnapshot.size()));
                })
                .addOnFailureListener(e -> {
                    verifiedUsersText.setText("0");
                });

        // Người dùng bị khóa
        Query blockedQuery = db.collection("Users")
                .whereEqualTo("verificationStatus", "blocked");
        if (!currentRoleFilter.equals("all")) {
            blockedQuery = blockedQuery.whereEqualTo("roles." + currentRoleFilter, true);
        }
        blockedQuery.whereGreaterThan("createdAt", timeThreshold)
                .get()
                .addOnSuccessListener(querySnapshot -> {
                    blockedUsersText.setText(String.format("%,d", querySnapshot.size()));
                })
                .addOnFailureListener(e -> {
                    blockedUsersText.setText("0");
                });
    }
}

```

### src\main\java\com\uit\carrental\FragmentPages\Admin\UserStatsFragment.java
```java
package com.uit.carrental.FragmentPages.Admin;

import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.fragment.app.Fragment;
import com.bumptech.glide.Glide;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.Timestamp;
import com.uit.carrental.Model.User;
import com.uit.carrental.R;
import java.util.HashMap;
import java.util.Map;

public class UserStatsFragment extends Fragment {

    private static final String TAG = "UserStatsFragment";
    private FirebaseFirestore db;
    private String userId;
    private User user;
    private TextView tvUsername, tvUserInfo, tvCccdFrontLabel, tvCccdBackLabel, tvLicenseLabel;
    private ImageView imgCccdFront, imgCccdBack, imgLicense, imgAvatar, imgBack; // Thêm imgBack
    private LinearLayout btnApprove, btnReject, btnRequestSupplement;

    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.fragment_user_stats, container, false);

        db = FirebaseFirestore.getInstance();
        userId = getArguments() != null ? getArguments().getString("userId") : null;
        if (userId == null) {
            Log.e(TAG, "Không tìm thấy userId");
            return view;
        }

        initViews(view);
        loadUserData();
        setupButtons();
        return view;
    }

    private void initViews(View view) {
        tvUsername = view.findViewById(R.id.rxntl0e8qr7m);
        tvUserInfo = view.findViewById(R.id.rhj4q0f9p29s);
        tvCccdFrontLabel = view.findViewById(R.id.rxem3gpl3efc);
        tvCccdBackLabel = view.findViewById(R.id.rf9ah2n56ocp);
        tvLicenseLabel = view.findViewById(R.id.resyxc24w8x);
        imgAvatar = view.findViewById(R.id.rjorhrg7xhw);
        imgCccdFront = view.findViewById(R.id.r6ijhjkh2w4x);
        imgCccdBack = view.findViewById(R.id.ri7x9glaq17);
        imgLicense = view.findViewById(R.id.rnou1o5qbz7l);
        btnApprove = view.findViewById(R.id.rygcfobvaozi);
        btnReject = view.findViewById(R.id.rgfc3wpe0gx);
        btnRequestSupplement = view.findViewById(R.id.ry07qbxzq9t);
        imgBack = view.findViewById(R.id.rj72dc7rtuc); // Khởi tạo nút back

        // Thêm sự kiện nhấn cho nút back
        imgBack.setOnClickListener(v -> {
            Log.d(TAG, "Nút back được nhấn");
            getParentFragmentManager().popBackStack(); // Quay lại AdminUserListFragment
        });
    }

    private void loadUserData() {
        db.collection("Users").document(userId)
                .get()
                .addOnSuccessListener(document -> {
                    if (document.exists()) {
                        user = document.toObject(User.class);
                        if (user != null) {
                            tvUsername.setText(user.getUsername() != null ? user.getUsername() : "Không xác định");
                            tvUserInfo.setText(String.format("Email: %s\nSĐT: %s",
                                    user.getEmail() != null ? user.getEmail() : "N/A",
                                    user.getPhoneNumber() != null ? user.getPhoneNumber() : "N/A"));
                            Glide.with(this)
                                    .load(user.getAvatarUrl() != null ? user.getAvatarUrl() : R.drawable.ic_person)
                                    .into(imgAvatar);
                            Glide.with(this)
                                    .load(user.getCiCardFront() != null ? user.getCiCardFront() : R.drawable.ic_car)
                                    .into(imgCccdFront);
                            Glide.with(this)
                                    .load(user.getCiCardBehind() != null ? user.getCiCardBehind() : R.drawable.ic_car)
                                    .into(imgCccdBack);
                            Glide.with(this)
                                    .load(user.getLicenseUrl() != null ? user.getLicenseUrl() : R.drawable.ic_car)
                                    .into(imgLicense);
                            // Kiểm tra trạng thái xác minh để ẩn nút Duyệt nếu đã duyệt
                            if ("verified".equals(user.getVerificationStatus())) {
                                btnApprove.setVisibility(View.GONE);
                            }
                        }
                    }
                })
                .addOnFailureListener(e -> Log.e(TAG, "Lỗi tải dữ liệu user: " + e.getMessage()));
    }

    private void setupButtons() {
        btnApprove.setOnClickListener(v -> approveUser());
        btnReject.setOnClickListener(v -> rejectUser());
        btnRequestSupplement.setOnClickListener(v -> showSupplementDialog());
    }

    private void approveUser() {
        Map<String, Object> updates = new HashMap<>();
        updates.put("verificationStatus", "verified");
        db.collection("Users").document(userId)
                .update(updates)
                .addOnSuccessListener(aVoid -> {
                    sendNotification(userId, "Tài khoản đã được duyệt",
                            "Tài khoản của bạn đã được duyệt thành công.", "user_verification", null, "customer");
                    btnApprove.setVisibility(View.GONE); // Ẩn nút Duyệt sau khi duyệt thành công
                    Log.d(TAG, "Đã duyệt tài khoản và ẩn nút Duyệt");
                })
                .addOnFailureListener(e -> Log.e(TAG, "Lỗi duyệt user: " + e.getMessage()));
    }

    private void rejectUser() {
        Map<String, Object> updates = new HashMap<>();
        updates.put("verificationStatus", "rejected");
        db.collection("Users").document(userId)
                .update(updates)
                .addOnSuccessListener(aVoid -> {
                    sendNotification(userId, "Tài khoản bị từ chối",
                            "Tài khoản của bạn đã bị từ chối.", "user_verification", null, "customer");
                    getActivity().finish(); // Giữ nguyên logic gốc
                })
                .addOnFailureListener(e -> Log.e(TAG, "Lỗi từ chối user: " + e.getMessage()));
    }

    private void showSupplementDialog() {
        RequestSupplementDialogFragment dialog = RequestSupplementDialogFragment.newInstance(userId, null, "supplement_request_user");
        dialog.setOnSubmitListener(message -> {
            Map<String, Object> updates = new HashMap<>();
            updates.put("verificationStatus", "rejected");
            db.collection("Users").document(userId)
                    .update(updates)
                    .addOnSuccessListener(aVoid -> {
                        sendNotification(userId, "Yêu cầu bổ sung thông tin",
                                "Tài khoản của bạn cần bổ sung: " + message, "supplement_request_user", null, "customer");
                        getActivity().finish(); // Giữ nguyên logic gốc
                    })
                    .addOnFailureListener(e -> Log.e(TAG, "Lỗi gửi yêu cầu bổ sung: " + e.getMessage()));
        });
        dialog.show(getParentFragmentManager(), "RequestSupplementDialog");
    }

    private void sendNotification(String userId, String title, String message, String type, String vehicleId, String role) {
        Map<String, Object> notification = new HashMap<>();
        notification.put("userId", userId);
        notification.put("title", title);
        notification.put("message", message);
        notification.put("type", type);
        notification.put("vehicleId", vehicleId != null ? vehicleId : "");
        notification.put("createdAt", Timestamp.now());
        notification.put("isRead", false);
        notification.put("role", role); // Thêm trường role

        db.collection("Notifications")
                .add(notification)
                .addOnSuccessListener(documentReference -> {
                    String notificationId = documentReference.getId();
                    db.collection("Notifications").document(notificationId)
                            .update("notificationId", notificationId)
                            .addOnSuccessListener(aVoid -> Log.d(TAG, "Gửi thông báo thành công, ID: " + notificationId))
                            .addOnFailureListener(e -> Log.e(TAG, "Lỗi cập nhật notificationId: " + e.getMessage()));
                })
                .addOnFailureListener(e -> Log.e(TAG, "Lỗi gửi thông báo: " + e.getMessage()));
    }
}

```

### src\main\java\com\uit\carrental\FragmentPages\Admin\VehicleFilterFragment.java
```java
package com.uit.carrental.FragmentPages.Admin;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;
import com.bumptech.glide.Glide;
import com.google.android.material.imageview.ShapeableImageView;
import com.uit.carrental.R;

public class VehicleFilterFragment extends Fragment {

    private LinearLayout buttonVinfast, buttonHonda, buttonMercedes, buttonBMW, buttonFord, buttonToyota;
    private LinearLayout buttonRenting, buttonAvailable, buttonMaintenance, buttonPending;
    private LinearLayout buttonVerified, buttonUnverified;
    private LinearLayout buttonRating5, buttonRating5to4, buttonRating4, buttonRating3, buttonRating2to1;
    private LinearLayout buttonReset, buttonConfirm;
    private ImageView buttonClose;
    private String selectedBrand;
    private String selectedStatus;
    private String selectedVerificationStatus;
    private Float selectedMinRating, selectedMaxRating;
    private FilterCallback callback;

    public interface FilterCallback {
        void onFilterApplied(String brand, String status, String verificationStatus, Float minRating, Float maxRating);
    }

    public static VehicleFilterFragment newInstance(FilterCallback callback) {
        VehicleFilterFragment fragment = new VehicleFilterFragment();
        fragment.callback = callback;
        return fragment;
    }

    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.fragment_vehicle_filter, container, false);

        initViews(view);
        loadStaticImages(view);
        setupFilterButtons(view);

        buttonReset.setOnClickListener(v -> resetFilters());
        buttonConfirm.setOnClickListener(v -> applyFilters());
        buttonClose.setOnClickListener(v -> closeFragment());

        return view;
    }

    private void initViews(View view) {
        buttonVinfast = view.findViewById(R.id.re5bkjyzw71a);
        buttonHonda = view.findViewById(R.id.r29lmqq8qqka);
        buttonMercedes = view.findViewById(R.id.r5wpc3jutt9d);
        buttonBMW = view.findViewById(R.id.r047t6es9ecg6);
        buttonFord = view.findViewById(R.id.rwviyruuyw0d);
        buttonToyota = view.findViewById(R.id.r2lvmia82fj5);
        buttonRenting = view.findViewById(R.id.rv2rbtkh118);
        buttonAvailable = view.findViewById(R.id.rzvu0zdr3b79);
        buttonMaintenance = view.findViewById(R.id.rpdbvxqwor8);
        buttonPending = view.findViewById(R.id.r14thtgj04tg);
        buttonVerified = view.findViewById(R.id.r_verified);
        buttonUnverified = view.findViewById(R.id.r_unverified);
        buttonRating5 = view.findViewById(R.id.rozw79prjrbs);
        buttonRating5to4 = view.findViewById(R.id.rx3ytiykf6v);
        buttonRating4 = view.findViewById(R.id.rsooed0x193);
        buttonRating3 = view.findViewById(R.id.rusqd789cwjj);
        buttonRating2to1 = view.findViewById(R.id.ru6lopcq6jh);
        buttonConfirm = view.findViewById(R.id.rt94tooyri0r);
        buttonReset = view.findViewById(R.id.rvai73xq5syc);
        buttonClose = view.findViewById(R.id.rz3n8dabzscm);
    }

    private void loadStaticImages(View view) {
        if (getContext() != null) {
            Glide.with(getContext())
                    .load("https://storage.googleapis.com/tagjs-prod.appspot.com/v1/3ysO8Aie7W/7l1ioa0k_expires_30_days.png")
                    .into((ImageView) view.findViewById(R.id.rz3n8dabzscm));
            Glide.with(getContext())
                    .load("https://storage.googleapis.com/tagjs-prod.appspot.com/v1/3ysO8Aie7W/inzw1wo3_expires_30_days.png")
                    .into((ShapeableImageView) view.findViewById(R.id.r4y8nv6c7mpc));
            Glide.with(getContext())
                    .load("https://storage.googleapis.com/tagjs-prod.appspot.com/v1/3ysO8Aie7W/asva4ip1_expires_30_days.png")
                    .into((ShapeableImageView) view.findViewById(R.id.rb6215hqc4bl));
            Glide.with(getContext())
                    .load("https://storage.googleapis.com/tagjs-prod.appspot.com/v1/3ysO8Aie7W/zlhcok6g_expires_30_days.png")
                    .into((ShapeableImageView) view.findViewById(R.id.rtnetjohacza));
            Glide.with(getContext())
                    .load("https://storage.googleapis.com/tagjs-prod.appspot.com/v1/3ysO8Aie7W/s5ugz48w_expires_30_days.png")
                    .into((ShapeableImageView) view.findViewById(R.id.rw0l5x2vl8bi));
            Glide.with(getContext())
                    .load("https://storage.googleapis.com/tagjs-prod.appspot.com/v1/3ysO8Aie7W/m0hnc1ol_expires_30_days.png")
                    .into((ShapeableImageView) view.findViewById(R.id.rwwi7sxl6nz));
            Glide.with(getContext())
                    .load("https://storage.googleapis.com/tagjs-prod.appspot.com/v1/3ysO8Aie7W/hvjc3cad_expires_30_days.png")
                    .into((ShapeableImageView) view.findViewById(R.id.rayfaxchsqb8));
            Glide.with(getContext())
                    .load("https://storage.googleapis.com/tagjs-prod.appspot.com/v1/3ysO8Aie7W/13zcccmz_expires_30_days.png")
                    .into((ShapeableImageView) view.findViewById(R.id.r46s7tlb9ka4));
        }
    }

    private void setupFilterButtons(View view) {
        // Loại xe
        View.OnClickListener brandClickListener = v -> {
            int id = v.getId();
            if (id == R.id.re5bkjyzw71a) {
                selectedBrand = "Vinfast";
            } else if (id == R.id.r29lmqq8qqka) {
                selectedBrand = "Honda";
            } else if (id == R.id.r5wpc3jutt9d) {
                selectedBrand = "Mercedes";
            } else if (id == R.id.r047t6es9ecg6) {
                selectedBrand = "BMW";
            } else if (id == R.id.rwviyruuyw0d) {
                selectedBrand = "Ford";
            } else if (id == R.id.r2lvmia82fj5) {
                selectedBrand = "Toyota";
            } else {
                selectedBrand = null;
            }
            updateBrandButtonUI(id);
        };
        buttonVinfast.setOnClickListener(brandClickListener);
        buttonHonda.setOnClickListener(brandClickListener);
        buttonMercedes.setOnClickListener(brandClickListener);
        buttonBMW.setOnClickListener(brandClickListener);
        buttonFord.setOnClickListener(brandClickListener);
        buttonToyota.setOnClickListener(brandClickListener);

        // Trạng thái
        View.OnClickListener statusClickListener = v -> {
            int id = v.getId();
            if (id == R.id.rv2rbtkh118) {
                selectedStatus = "renting";
            } else if (id == R.id.rzvu0zdr3b79) {
                selectedStatus = "available";
            } else if (id == R.id.rpdbvxqwor8) {
                selectedStatus = "maintenance";
            } else if (id == R.id.r14thtgj04tg) {
                selectedStatus = "pending";
            } else {
                selectedStatus = null;
            }
            updateStatusButtonUI(id);
        };
        buttonRenting.setOnClickListener(statusClickListener);
        buttonAvailable.setOnClickListener(statusClickListener);
        buttonMaintenance.setOnClickListener(statusClickListener);
        buttonPending.setOnClickListener(statusClickListener);

        // Trạng thái duyệt
        View.OnClickListener verificationStatusClickListener = v -> {
            int id = v.getId();
            if (id == R.id.r_verified) {
                selectedVerificationStatus = "verified";
            } else if (id == R.id.r_unverified) {
                selectedVerificationStatus = "pending";
            } else {
                selectedVerificationStatus = null;
            }
            updateVerificationStatusButtonUI(id);
        };
        buttonVerified.setOnClickListener(verificationStatusClickListener);
        buttonUnverified.setOnClickListener(verificationStatusClickListener);

        // Đánh giá
        View.OnClickListener ratingClickListener = v -> {
            int id = v.getId();
            if (id == R.id.rozw79prjrbs) {
                selectedMinRating = 5.0f;
                selectedMaxRating = 5.0f;
            } else if (id == R.id.rx3ytiykf6v) {
                selectedMinRating = 4.0f;
                selectedMaxRating = 5.0f;
            } else if (id == R.id.rsooed0x193) {
                selectedMinRating = 4.0f;
                selectedMaxRating = 4.0f;
            } else if (id == R.id.rusqd789cwjj) {
                selectedMinRating = 3.0f;
                selectedMaxRating = 3.0f;
            } else if (id == R.id.ru6lopcq6jh) {
                selectedMinRating = 1.0f;
                selectedMaxRating = 2.0f;
            } else {
                selectedMinRating = null;
                selectedMaxRating = null;
            }
            updateRatingButtonUI(id);
        };
        buttonRating5.setOnClickListener(ratingClickListener);
        buttonRating5to4.setOnClickListener(ratingClickListener);
        buttonRating4.setOnClickListener(ratingClickListener);
        buttonRating3.setOnClickListener(ratingClickListener);
        buttonRating2to1.setOnClickListener(ratingClickListener);
    }

    private void updateBrandButtonUI(int selectedId) {
        int selectedBg = R.drawable.s003087sw1cr100b0030871f;
        int defaultBg = R.drawable.s4d3a4dsw1cr100;
        buttonVinfast.setBackgroundResource(selectedId == R.id.re5bkjyzw71a ? selectedBg : defaultBg);
        buttonHonda.setBackgroundResource(selectedId == R.id.r29lmqq8qqka ? selectedBg : defaultBg);
        buttonMercedes.setBackgroundResource(selectedId == R.id.r5wpc3jutt9d ? selectedBg : defaultBg);
        buttonBMW.setBackgroundResource(selectedId == R.id.r047t6es9ecg6 ? selectedBg : defaultBg);
        buttonFord.setBackgroundResource(selectedId == R.id.rwviyruuyw0d ? selectedBg : defaultBg);
        buttonToyota.setBackgroundResource(selectedId == R.id.r2lvmia82fj5 ? selectedBg : defaultBg);
    }

    private void updateStatusButtonUI(int selectedId) {
        buttonRenting.setBackgroundResource(selectedId == R.id.rv2rbtkh118 ? R.drawable.s003087sw1cr100b0030871f : R.drawable.s4d3a4dsw1cr100);
        buttonAvailable.setBackgroundResource(selectedId == R.id.rzvu0zdr3b79 ? R.drawable.s003087sw1cr100b0030871f : R.drawable.s4d3a4dsw1cr100);
        buttonMaintenance.setBackgroundResource(selectedId == R.id.rpdbvxqwor8 ? R.drawable.sb60101sw1cr100bb6050233 : R.drawable.s4d3a4dsw1cr100);
        buttonPending.setBackgroundResource(selectedId == R.id.r14thtgj04tg ? R.drawable.sb66e01sw1cr100bb64d0233 : R.drawable.s4d3a4dsw1cr100);
    }

    private void updateVerificationStatusButtonUI(int selectedId) {
        int selectedBg = R.drawable.s003087sw1cr100b0030871f;
        int defaultBg = R.drawable.s4d3a4dsw1cr100;
        buttonVerified.setBackgroundResource(selectedId == R.id.r_verified ? selectedBg : defaultBg);
        buttonUnverified.setBackgroundResource(selectedId == R.id.r_unverified ? selectedBg : defaultBg);
    }

    private void updateRatingButtonUI(int selectedId) {
        int defaultBg = R.drawable.s4d3a4dsw1cr100;
        buttonRating5.setBackgroundResource(selectedId == R.id.rozw79prjrbs ? R.drawable.s4d3a4dsw1cr100bffbc7d33 : defaultBg);
        buttonRating5to4.setBackgroundResource(selectedId == R.id.rx3ytiykf6v ? R.drawable.s4d3a4dsw1cr100bffbc7d33 : defaultBg);
        buttonRating4.setBackgroundResource(selectedId == R.id.rsooed0x193 ? R.drawable.s4d3a4dsw1cr100bffbc7d33 : defaultBg);
        buttonRating3.setBackgroundResource(selectedId == R.id.rusqd789cwjj ? R.drawable.s4d3a4dsw1cr100bffbc7d33 : defaultBg);
        buttonRating2to1.setBackgroundResource(selectedId == R.id.ru6lopcq6jh ? R.drawable.s4d3a4dsw1cr100bffbc7d33 : defaultBg);
    }

    private void resetFilters() {
        selectedBrand = null;
        selectedStatus = null;
        selectedVerificationStatus = null;
        selectedMinRating = null;
        selectedMaxRating = null;
        updateBrandButtonUI(0);
        updateStatusButtonUI(0);
        updateVerificationStatusButtonUI(0);
        updateRatingButtonUI(0);
    }

    private void applyFilters() {
        if (callback != null) {
            callback.onFilterApplied(selectedBrand, selectedStatus, selectedVerificationStatus, selectedMinRating, selectedMaxRating);
        }
        if (getParentFragmentManager() != null) {
            getParentFragmentManager().popBackStack();
        }
    }

    private void closeFragment() {
        if (getParentFragmentManager() != null) {
            getParentFragmentManager().popBackStack();
        }
    }
}

```

### src\main\java\com\uit\carrental\FragmentPages\Customer\ChatFragment.java
```java
package com.uit.carrental.FragmentPages.Customer;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.firestore.QueryDocumentSnapshot;
import com.uit.carrental.Adapter.MessageAdapter;
import com.uit.carrental.Model.Message;
import com.uit.carrental.R;

import org.json.JSONArray;
import org.json.JSONObject;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

import okhttp3.Call;
import okhttp3.Callback;
import okhttp3.MediaType;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;

public class ChatFragment extends Fragment {
    private RecyclerView chatRecyclerView;
    private EditText messageInput;
    private ImageView sendButton;
    private ImageView closeButton;
    private MessageAdapter messageAdapter;
    private List<Message> messages;
    private LinearLayout draggableChatContainer;
    private float dX, dY;
    private int lastAction;
    private OkHttpClient client;
    private FirebaseFirestore db;
    private List<String> vehicleNames;

    private static final String HUGGINGFACE_API_KEY = "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";
    private static final String API_URL = "https://api-inference.huggingface.co/models/meta-llama/Llama-3.1-8B-Instruct";

    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container,
                             @Nullable Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.fragment_chat, container, false);

        // Initialize views
        chatRecyclerView = view.findViewById(R.id.chat_recycler_view);
        messageInput = view.findViewById(R.id.message_input);
        sendButton = view.findViewById(R.id.send_button);
        closeButton = view.findViewById(R.id.close_button);
        draggableChatContainer = view.findViewById(R.id.draggable_chat_container);

        // Initialize OkHttpClient and Firestore
        client = new OkHttpClient();
        db = FirebaseFirestore.getInstance();
        vehicleNames = new ArrayList<>();

        // Load vehicle names from Firestore
        loadVehicleNames();

        // Setup RecyclerView
        messages = new ArrayList<>();
        messages.add(new Message("Chào bạn! T9 Car Rental luôn sẵn sàng hỗ trợ.", false));
        messageAdapter = new MessageAdapter(messages);
        LinearLayoutManager layoutManager = new LinearLayoutManager(getContext());
        layoutManager.setStackFromEnd(true);
        chatRecyclerView.setLayoutManager(layoutManager);
        chatRecyclerView.setAdapter(messageAdapter);

        // Send button click
        sendButton.setOnClickListener(v -> {
            String text = messageInput.getText().toString().trim();
            if (!text.isEmpty()) {
                messages.add(new Message(text, true));
                messageAdapter.notifyItemInserted(messages.size() - 1);
                chatRecyclerView.scrollToPosition(messages.size() - 1);
                messageInput.setText("");
                sendMessageToHuggingFace(text);
            }
        });

        // Close button click
        closeButton.setOnClickListener(v -> {
            getParentFragmentManager().popBackStack(); // Quay lại CustomerHomeFragment
        });

        // Draggable container
        draggableChatContainer.setOnTouchListener((v, event) -> {
            switch (event.getActionMasked()) {
                case MotionEvent.ACTION_DOWN:
                    dX = v.getX() - event.getRawX();
                    dY = v.getY() - event.getRawY();
                    lastAction = MotionEvent.ACTION_DOWN;
                    return true;
                case MotionEvent.ACTION_MOVE:
                    v.setY(event.getRawY() + dY);
                    v.setX(event.getRawX() + dX);
                    lastAction = MotionEvent.ACTION_MOVE;
                    return true;
                case MotionEvent.ACTION_UP:
                    if (lastAction == MotionEvent.ACTION_DOWN) {
                    }
                    return true;
                default:
                    return false;
            }
        });

        return view;
    }

    private void loadVehicleNames() {
        db.collection("Vehicles")
                .get()
                .addOnCompleteListener(task -> {
                    if (task.isSuccessful()) {
                        vehicleNames.clear();
                        for (QueryDocumentSnapshot document : task.getResult()) {
                            String vehicleName = document.getString("vehicle_name");
                            if (vehicleName != null) {
                                vehicleNames.add(vehicleName);
                            }
                        }
                    } else {
                        Toast.makeText(getContext(), "Lỗi tải danh sách xe", Toast.LENGTH_SHORT).show();
                    }
                });
    }

    private void sendMessageToHuggingFace(String userMessage) {
        try {
            // Định dạng danh sách xe
            String vehicleList = vehicleNames.isEmpty() ? "Không có xe nào hiện tại." : vehicleNames.stream().collect(Collectors.joining(", "));
            // Prompt chuẩn cho Llama-3.1
            String prompt = "<|begin_of_text|>Bạn là nhân viên tư vấn thuê xe trực tuyến của T9 Car Rental. Dựa trên yêu cầu của khách hàng và danh sách xe hiện có (" + vehicleList + "), hãy đề xuất loại xe phù hợp nhất và giải thích ngắn gọn lý do. Trả lời thân thiện, chuyên nghiệp, tối đa 100 từ:\n" + userMessage + "<|end_of_text|>";

            JSONObject requestBody = new JSONObject();
            requestBody.put("inputs", prompt);
            requestBody.put("parameters", new JSONObject()
                    .put("max_new_tokens", 100)
                    .put("temperature", 0.7)
                    .put("top_p", 0.9));

            RequestBody body = RequestBody.create(
                    requestBody.toString(),
                    MediaType.parse("application/json; charset=utf-8")
            );

            Request request = new Request.Builder()
                    .url(API_URL)
                    .header("Authorization", "Bearer " + HUGGINGFACE_API_KEY)
                    .header("Content-Type", "application/json")
                    .post(body)
                    .build();

            client.newCall(request).enqueue(new Callback() {
                @Override
                public void onFailure(@NonNull Call call, @NonNull IOException e) {
                    getActivity().runOnUiThread(() -> {
                        Toast.makeText(getContext(), "Lỗi kết nối: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                        messages.add(new Message("Lỗi kết nối, vui lòng thử lại.", false));
                        messageAdapter.notifyItemInserted(messages.size() - 1);
                        chatRecyclerView.scrollToPosition(messages.size() - 1);
                    });
                }

                @Override
                public void onResponse(@NonNull Call call, @NonNull Response response) throws IOException {
                    if (!response.isSuccessful()) {
                        getActivity().runOnUiThread(() -> {
                            Toast.makeText(getContext(), "Lỗi server: " + response.code(), Toast.LENGTH_SHORT).show();
                        });
                        return;
                    }

                    String responseBody = response.body().string();
                    try {
                        JSONArray jsonArray = new JSONArray(responseBody);
                        String rawResponse = jsonArray.getJSONObject(0).getString("generated_text");
                        final String aiResponse = rawResponse.replace(prompt, "").trim();

                        getActivity().runOnUiThread(() -> {
                            messages.add(new Message(aiResponse, false));
                            messageAdapter.notifyItemInserted(messages.size() - 1);
                            chatRecyclerView.scrollToPosition(messages.size() - 1);
                        });
                    } catch (Exception e) {
                        getActivity().runOnUiThread(() -> {
                            Toast.makeText(getContext(), "Lỗi phân tích phản hồi: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                        });
                    }
                }
            });
        } catch (Exception e) {
            Toast.makeText(getContext(), "Lỗi tạo request: " + e.getMessage(), Toast.LENGTH_SHORT).show();
        }
    }
}
```

### src\main\java\com\uit\carrental\FragmentPages\Customer\CustomerActivityFragment.java
```java
package com.uit.carrental.FragmentPages.Customer;

import android.app.ProgressDialog;
import android.content.Intent;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import android.widget.Toast;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.firestore.ListenerRegistration;
import com.google.firebase.firestore.QueryDocumentSnapshot;
import com.uit.carrental.Adapter.BookingAdapter;
import com.uit.carrental.Model.Booking;
import com.uit.carrental.R;
import com.uit.carrental.Service.Booking.CustomerBookingDetailActivity;
import java.util.ArrayList;
import java.util.List;

public class CustomerActivityFragment extends Fragment {

    private static final String TAG = "CustomerActivityFragment";
    private RecyclerView recyclerView;
    private TextView tvEmpty;
    private BookingAdapter bookingAdapter;
    private List<Booking> bookingList;
    private FirebaseFirestore db;
    private FirebaseAuth auth;
    private ProgressDialog progressDialog;
    private ListenerRegistration bookingListener;

    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.customer_fragment_activity, container, false);

        db = FirebaseFirestore.getInstance();
        auth = FirebaseAuth.getInstance();
        progressDialog = new ProgressDialog(getActivity());
        progressDialog.setCancelable(false);
        progressDialog.setMessage("Đang lấy dữ liệu...");
        progressDialog.show();

        recyclerView = view.findViewById(R.id.rv_activities);
        tvEmpty = view.findViewById(R.id.tv_empty);
        recyclerView.setHasFixedSize(true);
        recyclerView.setLayoutManager(new LinearLayoutManager(getContext()));

        bookingList = new ArrayList<>();
        bookingAdapter = new BookingAdapter(bookingList, booking -> {
            Intent intent = new Intent(getContext(), CustomerBookingDetailActivity.class);
            intent.putExtra("bookingId", booking.getBookingId());
            startActivity(intent);
        });
        recyclerView.setAdapter(bookingAdapter);

        loadBookings();

        return view;
    }

    private void loadBookings() {
        String userId = auth.getCurrentUser().getUid();
        bookingListener = db.collection("Bookings")
                .whereEqualTo("customerId", userId)
                .addSnapshotListener((querySnapshot, error) -> {
                    if (error != null) {
                        Toast.makeText(getContext(), "Lỗi tải đơn hàng: " + error.getMessage(), Toast.LENGTH_SHORT).show();
                        progressDialog.dismiss();
                        return;
                    }
                    bookingList.clear();
                    if (querySnapshot != null) {
                        for (QueryDocumentSnapshot document : querySnapshot) {
                            Booking booking = document.toObject(Booking.class);
                            booking.setBookingId(document.getId());
                            bookingList.add(booking);
                        }
                    }
                    bookingAdapter.notifyDataSetChanged();
                    tvEmpty.setVisibility(bookingList.isEmpty() ? View.VISIBLE : View.GONE);
                    recyclerView.setVisibility(bookingList.isEmpty() ? View.GONE : View.VISIBLE);
                    progressDialog.dismiss();
                });
    }

    @Override
    public void onDestroyView() {
        super.onDestroyView();
        if (bookingListener != null) {
            bookingListener.remove();
        }
        if (progressDialog.isShowing()) {
            progressDialog.dismiss();
        }
    }
}

```

### src\main\java\com\uit\carrental\FragmentPages\Customer\CustomerHomeFragment.java
```java
package com.uit.carrental.FragmentPages.Customer;

import android.app.AlertDialog;
import android.content.Intent;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;
import androidx.fragment.app.FragmentTransaction;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.slider.RangeSlider;
import com.google.firebase.firestore.DocumentSnapshot;
import com.google.firebase.firestore.FirebaseFirestore;
import com.uit.carrental.Adapter.VehicleAdapter;
import com.uit.carrental.Model.Vehicle;
import com.uit.carrental.R;
import com.uit.carrental.Service.Vehicle.VehicleDetailActivity;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class CustomerHomeFragment extends Fragment {

    private static final String TAG = "CustomerHomeFragment";
    private RecyclerView recyclerViewVehicles;
    private LinearLayout buttonSearch;
    private ImageView imageViewFilter, imageViewSearch;
    private EditText editTextSearch;
    private FloatingActionButton fabChat;
    private VehicleAdapter vehicleAdapter;
    private List<Vehicle> vehicleList;
    private List<Vehicle> filteredVehicleList;
    private FirebaseFirestore db;
    private String currentQuery = "";
    private String currentBrand;
    private String currentFuelType;
    private Float currentMinRating, currentMaxRating;
    private Long currentMinPrice, currentMaxPrice;

    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.customer_fragment_home, container, false);

        // Initialize Firebase
        db = FirebaseFirestore.getInstance();

        // Initialize views
        recyclerViewVehicles = view.findViewById(R.id.recycler_view_vehicles);
        buttonSearch = view.findViewById(R.id.search_container);
        imageViewFilter = view.findViewById(R.id.filter_button);
        imageViewSearch = view.findViewById(R.id.search_button);
        editTextSearch = view.findViewById(R.id.search_input);
        fabChat = view.findViewById(R.id.fab_chat);

        // Setup RecyclerView
        recyclerViewVehicles.setLayoutManager(new LinearLayoutManager(getContext()));
        vehicleList = new ArrayList<>();
        filteredVehicleList = new ArrayList<>();
        vehicleAdapter = new VehicleAdapter(this, new ArrayList<>(filteredVehicleList), position -> {
            Vehicle clickedVehicle = filteredVehicleList.get(position);
            Intent intent = new Intent(getContext(), VehicleDetailActivity.class);
            intent.putExtra("vehicleId", clickedVehicle.getVehicleId());
            startActivity(intent);
        });
        recyclerViewVehicles.setAdapter(vehicleAdapter);

        // Setup search
        setupSearch();

        // Setup filter
        setupFilter();

        // Setup FloatingActionButton
        fabChat.setOnClickListener(v -> openChatFragment());

        // Load vehicles
        loadVehicles();

        return view;
    }

    private void setupSearch() {
        buttonSearch.setOnClickListener(v -> performSearch());
        imageViewSearch.setOnClickListener(v -> performSearch());

        editTextSearch.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {}

            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {}

            @Override
            public void afterTextChanged(Editable s) {
                currentQuery = s.toString().trim().toLowerCase();
                applyFilter();
            }
        });
    }

    private void setupFilter() {
        imageViewFilter.setOnClickListener(v -> showFilterDialog());
    }

    private void loadVehicles() {
        db.collection("Vehicles")
                .get()
                .addOnSuccessListener(querySnapshot -> {
                    vehicleList.clear();
                    filteredVehicleList.clear();
                    for (DocumentSnapshot document : querySnapshot) {
                        Vehicle vehicle = document.toObject(Vehicle.class);
                        if (vehicle != null && vehicle.getVehicleId() != null &&
                                "verified".equals(vehicle.getVerificationStatus()) &&
                                "available".equals(vehicle.getVehicleAvailability())) {
                            vehicleList.add(vehicle);
                        }
                    }
                    applyFilter();
                    Log.d(TAG, "Tải " + vehicleList.size() + " xe từ Firestore");
                })
                .addOnFailureListener(e -> {
                    Log.e(TAG, "Lỗi tải dữ liệu: " + e.getMessage());
                    Toast.makeText(getContext(), "Lỗi tải dữ liệu: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                    loadMockData();
                });
    }

    private void loadMockData() {
        vehicleList.clear();
        filteredVehicleList.clear();
        String[] brands = {"Vinfast", "Honda", "Mercedes", "BMW", "Ford", "Toyota"};
        String[] fuelTypes = {"Xăng", "Dầu", "Điện"};
        for (int i = 1; i <= 15; i++) {
            Vehicle mockVehicle = new Vehicle();
            mockVehicle.setVehicleId("mock_vehicle_" + i);
            mockVehicle.setVehicleName("Xe mẫu " + i);
            mockVehicle.setVehiclePrice(String.format("%d.000 VNĐ/Ngày", 300 + (i * 100)));
            mockVehicle.setVehicleImageUrl("https://example.com/car.jpg");
            mockVehicle.setOwnerId("mock_user_" + i);
            mockVehicle.setVehicleNumber("ABC" + (1000 + i));
            mockVehicle.setVehicleAvailability("available");
            mockVehicle.setVehicleBrand(brands[i % 6]);
            mockVehicle.setFuelType(fuelTypes[i % 3]);
            mockVehicle.setVehicleRating((float) (3 + (i % 3)));
            mockVehicle.setVerificationStatus("verified");
            vehicleList.add(mockVehicle);
        }
        applyFilter();
        Log.d(TAG, "Tải dữ liệu giả: " + vehicleList.size() + " xe");
    }

    private void performSearch() {
        currentQuery = editTextSearch.getText().toString().trim().toLowerCase();
        applyFilter();
    }

    private void showFilterDialog() {
        AlertDialog.Builder builder = new AlertDialog.Builder(requireContext());
        View dialogView = LayoutInflater.from(requireContext()).inflate(R.layout.dialog_vehicle_filter, null);
        builder.setView(dialogView);

        // Initialize dialog views
        Spinner spinnerBrand = dialogView.findViewById(R.id.spinner_brand);
        TextView tvAvailabilityLabel = dialogView.findViewById(R.id.tv_availability_label);
        Spinner spinnerAvailability = dialogView.findViewById(R.id.spinner_availability);
        TextView tvVerificationLabel = dialogView.findViewById(R.id.tv_verification_label);
        Spinner spinnerVerification = dialogView.findViewById(R.id.spinner_verification);
        Spinner spinnerFuelType = dialogView.findViewById(R.id.spinner_fuel_type);
        RangeSlider sliderPrice = dialogView.findViewById(R.id.slider_price);
        RangeSlider sliderRating = dialogView.findViewById(R.id.slider_rating);
        Button btnApply = dialogView.findViewById(R.id.btn_apply_filter);
        Button btnClear = dialogView.findViewById(R.id.btn_clear_filter);
        Button btnCancel = dialogView.findViewById(R.id.btn_cancel);

        // Hide Admin-specific fields
        tvAvailabilityLabel.setVisibility(View.GONE);
        spinnerAvailability.setVisibility(View.GONE);
        tvVerificationLabel.setVisibility(View.GONE);
        spinnerVerification.setVisibility(View.GONE);

        // Setup spinners
        List<String> brands = new ArrayList<>(Arrays.asList(getString(R.string.all_brands), "Vinfast", "Honda", "Mercedes", "BMW", "Ford", "Toyota"));
        List<String> fuelTypes = new ArrayList<>(Arrays.asList(getString(R.string.all_fuel_types), "Xăng", "Dầu", "Điện"));
        ArrayAdapter<String> brandAdapter = new ArrayAdapter<>(requireContext(), android.R.layout.simple_spinner_item, brands);
        ArrayAdapter<String> fuelTypeAdapter = new ArrayAdapter<>(requireContext(), android.R.layout.simple_spinner_item, fuelTypes);
        brandAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        fuelTypeAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        spinnerBrand.setAdapter(brandAdapter);
        spinnerFuelType.setAdapter(fuelTypeAdapter);

        // Set current filter values
        if (currentBrand != null) {
            spinnerBrand.setSelection(brands.indexOf(currentBrand));
        }
        if (currentFuelType != null) {
            spinnerFuelType.setSelection(fuelTypes.indexOf(currentFuelType));
        }
        if (currentMinRating != null && currentMaxRating != null) {
            sliderRating.setValues(currentMinRating, currentMaxRating);
        } else {
            sliderRating.setValues(0.0f, 5.0f); // Giá trị mặc định
        }
        if (currentMinPrice != null && currentMaxPrice != null) {
            sliderPrice.setValues(currentMinPrice.floatValue(), currentMaxPrice.floatValue());
        } else {
            sliderPrice.setValues(0.0f, 5000000.0f); // Giá trị mặc định
        }

        // Đảm bảo RangeSlider có giá trị hợp lệ
        sliderRating.setValueFrom(0.0f);
        sliderRating.setValueTo(5.0f);
        sliderRating.setStepSize(0.1f);
        sliderPrice.setValueFrom(0.0f);
        sliderPrice.setValueTo(5000000.0f);
        sliderPrice.setStepSize(1000.0f);

        AlertDialog dialog = builder.create();

        btnApply.setOnClickListener(v -> {
            currentBrand = spinnerBrand.getSelectedItem().toString().equals(getString(R.string.all_brands)) ? null : spinnerBrand.getSelectedItem().toString();
            currentFuelType = spinnerFuelType.getSelectedItem().toString().equals(getString(R.string.all_fuel_types)) ? null : spinnerFuelType.getSelectedItem().toString();

            // Kiểm tra ratingValues
            List<Float> ratingValues = sliderRating.getValues();
            if (ratingValues.size() >= 2) {
                currentMinRating = ratingValues.get(0);
                currentMaxRating = ratingValues.get(1);
            } else {
                Log.w(TAG, "ratingValues không đủ 2 phần tử: " + ratingValues.size());
                currentMinRating = 0.0f;
                currentMaxRating = 5.0f;
            }

            // Kiểm tra priceValues
            List<Float> priceValues = sliderPrice.getValues();
            if (priceValues.size() >= 2) {
                currentMinPrice = priceValues.get(0).longValue();
                currentMaxPrice = priceValues.get(1).longValue();
            } else {
                Log.w(TAG, "priceValues không đủ 2 phần tử: " + priceValues.size());
                currentMinPrice = 0L;
                currentMaxPrice = 5000000L;
            }

            applyFilter();
            dialog.dismiss();
        });

        btnClear.setOnClickListener(v -> {
            currentBrand = null;
            currentFuelType = null;
            currentMinRating = 0.0f;
            currentMaxRating = 5.0f;
            currentMinPrice = 0L;
            currentMaxPrice = 5000000L;
            spinnerBrand.setSelection(0);
            spinnerFuelType.setSelection(0);
            sliderRating.setValues(0.0f, 5.0f);
            sliderPrice.setValues(0.0f, 5000000.0f);
            applyFilter();
            dialog.dismiss();
        });

        btnCancel.setOnClickListener(v -> dialog.dismiss());

        dialog.show();
    }

    private void applyFilter() {
        filteredVehicleList.clear();
        for (Vehicle vehicle : vehicleList) {
            boolean matches = true;
            if (!currentQuery.isEmpty()) {
                matches &= vehicle.getVehicleName() != null && vehicle.getVehicleName().toLowerCase().contains(currentQuery);
            }
            if (currentBrand != null) {
                matches &= vehicle.getVehicleBrand() != null && vehicle.getVehicleBrand().equalsIgnoreCase(currentBrand);
            }
            if (currentFuelType != null) {
                matches &= vehicle.getFuelType() != null && vehicle.getFuelType().equalsIgnoreCase(currentFuelType);
            }
            if (currentMinRating != null && currentMaxRating != null) {
                matches &= vehicle.getVehicleRating() >= currentMinRating && vehicle.getVehicleRating() <= currentMaxRating;
            }
            if (currentMinPrice != null && currentMaxPrice != null) {
                long price = parsePrice(vehicle.getVehiclePrice());
                matches &= price >= currentMinPrice && price <= currentMaxPrice;
            }
            if (matches) {
                filteredVehicleList.add(vehicle);
            }
        }

        vehicleAdapter = new VehicleAdapter(this, new ArrayList<>(filteredVehicleList), position -> {
            Vehicle clickedVehicle = filteredVehicleList.get(position);
            Intent intent = new Intent(getContext(), VehicleDetailActivity.class);
            intent.putExtra("vehicleId", clickedVehicle.getVehicleId());
            startActivity(intent);
        });
        recyclerViewVehicles.setAdapter(vehicleAdapter);
        vehicleAdapter.notifyDataSetChanged();
        Log.d(TAG, "Cập nhật RecyclerView với " + filteredVehicleList.size() + " xe");
    }

    private long parsePrice(String priceString) {
        if (priceString == null || priceString.isEmpty()) {
            return 0;
        }
        try {
            String cleanPrice = priceString.replaceAll("[^0-9]", "");
            return Long.parseLong(cleanPrice);
        } catch (NumberFormatException e) {
            Log.e(TAG, "Lỗi phân tích giá: " + e.getMessage());
            return 0;
        }
    }

    private void openChatFragment() {
        FragmentTransaction transaction = getParentFragmentManager().beginTransaction();
        ChatFragment chatFragment = new ChatFragment();
        transaction.replace(R.id.frame_layout_customer, chatFragment, "CHAT_FRAGMENT");
        transaction.addToBackStack("CHAT_FRAGMENT");
        transaction.commit();
    }
}
```

### src\main\java\com\uit\carrental\FragmentPages\Customer\CustomerNotificationFragment.java
```java
package com.uit.carrental.FragmentPages.Customer;

import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.fragment.app.Fragment;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.firestore.QueryDocumentSnapshot;
import com.uit.carrental.Adapter.NotificationAdapter;
import com.uit.carrental.Model.Notification;
import com.uit.carrental.R;
import java.util.ArrayList;
import java.util.List;

public class CustomerNotificationFragment extends Fragment {

    private static final String TAG = "CustomerNotification";
    private RecyclerView recyclerView;
    private NotificationAdapter notificationAdapter;
    private List<Notification> notificationList;
    private FirebaseFirestore db;
    private TextView tvEmpty;

    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.customer_fragment_notification, container, false);


        db = FirebaseFirestore.getInstance();
        notificationList = new ArrayList<>();
        recyclerView = view.findViewById(R.id.rv_notifications);
        tvEmpty = view.findViewById(R.id.tv_empty);
        recyclerView.setLayoutManager(new LinearLayoutManager(getContext()));
        recyclerView.setHasFixedSize(false);
        notificationAdapter = new NotificationAdapter(notificationList, notification -> {
            Log.d(TAG, "Thông báo được nhấn: " + notification.getNotificationId());
        });
        recyclerView.setAdapter(notificationAdapter);

        loadNotifications();
        recyclerView.post(() -> Log.d(TAG, "RecyclerView hiển thị: " + recyclerView.isShown()));
        return view;
    }

    private void loadNotifications() {
        String userId = FirebaseAuth.getInstance().getCurrentUser() != null ?
                FirebaseAuth.getInstance().getCurrentUser().getUid() : null;
        Log.d(TAG, "Current userId: " + userId);

        if (userId == null) {
            Toast.makeText(getContext(), "Người dùng chưa đăng nhập", Toast.LENGTH_SHORT).show();
            recyclerView.setVisibility(View.GONE);
            tvEmpty.setVisibility(View.VISIBLE);
            return;
        }

        try {
            db.collection("Notifications")
                    .get()
                    .addOnSuccessListener(querySnapshot -> {
                        Log.d(TAG, "Số tài liệu nhận được: " + querySnapshot.size());
                        notificationList.clear();
                        for (QueryDocumentSnapshot doc : querySnapshot) {
                            try {
                                Notification notification = doc.toObject(Notification.class);
                                notification.setNotificationId(doc.getId());
                                // Lọc thông báo cho customer
                                if (notification.getUserId() != null && notification.getUserId().equals(userId) &&
                                        "customer".equals(notification.getRole()) &&
                                        (notification.getType().equals("user_verification") ||
                                                notification.getType().equals("new_booking") ||
                                                notification.getType().equals("status_update") ||
                                                notification.getType().equals("supplement_request_user"))) {
                                    notificationList.add(notification);
                                    Log.d(TAG, "Thêm notification: " + notification.getNotificationId());
                                }
                            } catch (Exception e) {
                                Log.e(TAG, "Lỗi ánh xạ tài liệu: " + doc.getId(), e);
                            }
                        }
                        Log.d(TAG, "Số thông báo sau lọc: " + notificationList.size());
                        if (!notificationList.isEmpty()) {
                            recyclerView.setVisibility(View.VISIBLE);
                            tvEmpty.setVisibility(View.GONE);
                        } else {
                            recyclerView.setVisibility(View.GONE);
                            tvEmpty.setVisibility(View.VISIBLE);
                        }
                        notificationAdapter.updateData(notificationList);
                        recyclerView.invalidate();
                        Log.d(TAG, "Cập nhật giao diện, RecyclerView visibility: " + recyclerView.getVisibility());
                    })
                    .addOnFailureListener(e -> {
                        Log.e(TAG, "Lỗi tải thông báo: ", e);
                        if (getContext() != null) {
                            Toast.makeText(getContext(), "Lỗi tải thông báo: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                        }
                    });
        } catch (Exception e) {
            Log.e(TAG, "Lỗi runtime: ", e);
            if (getContext() != null) {
                Toast.makeText(getContext(), "Lỗi runtime: " + e.getMessage(), Toast.LENGTH_SHORT).show();
            }
        }
    }
}
```

### src\main\java\com\uit\carrental\FragmentPages\Customer\CustomerSettingFragment.java
```java
package com.uit.carrental.FragmentPages.Customer;

import android.content.Intent;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.fragment.app.Fragment;
import androidx.lifecycle.LiveData;
import androidx.lifecycle.MutableLiveData;
import androidx.lifecycle.ViewModel;
import androidx.lifecycle.ViewModelProvider;

import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.firestore.DocumentReference;
import com.google.firebase.firestore.FirebaseFirestore;
import com.squareup.picasso.Picasso;
import com.uit.carrental.ActivityPages.OwnerMainActivity;
import com.uit.carrental.Model.User;
import com.uit.carrental.R;
import com.uit.carrental.Service.UserAuthentication.LoginActivity;
import com.uit.carrental.Service.UserAuthentication.UpdatePassword;
import com.uit.carrental.Service.UserAuthentication.UserProfile;

import de.hdodenhof.circleimageview.CircleImageView;

public class CustomerSettingFragment extends Fragment {

    private TextView tvName;
    private CircleImageView imgAvatar;
    private TextView tvEdit;
    private ImageView editIcon;
    private SettingViewModel viewModel;

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.customer_fragment_setting, container, false);

        initViews(view);
        initViewModel();
        observeLiveData();

        setupClickListeners(view);
        return view;
    }

    private void initViews(View view) {
        imgAvatar = view.findViewById(R.id.img_avatar);
        tvName = view.findViewById(R.id.tv_name);
        tvEdit = view.findViewById(R.id.tv_edit);
        editIcon = view.findViewById(R.id.edit_icon);
    }

    private void initViewModel() {
        viewModel = new ViewModelProvider(this).get(SettingViewModel.class);
        viewModel.loadUserData();
    }

    private void observeLiveData() {
        viewModel.getUserLiveData().observe(getViewLifecycleOwner(), user -> {
            if (user != null) {
                tvName.setText(user.getUsername());
                if (user.getAvatarUrl() != null && !user.getAvatarUrl().isEmpty()) {
                    Picasso.get().load(user.getAvatarUrl()).into(imgAvatar);
                }
            }
        });

        viewModel.getErrorLiveData().observe(getViewLifecycleOwner(), error -> {
            if (error != null) {
                Toast.makeText(getContext(), error, Toast.LENGTH_LONG).show();
            }
        });
    }

    private void setupClickListeners(View view) {
        View layoutInformation = view.findViewById(R.id.layout_information);
        View layoutConnect = view.findViewById(R.id.layout_connect);
        View layoutChangePassword = view.findViewById(R.id.layout_change_password);
        View layoutDeleteAccount = view.findViewById(R.id.layout_delete_account);
        View layoutSettings = view.findViewById(R.id.layout_settings);
        View layoutSignOut = view.findViewById(R.id.layout_sign_out);

        setupSettingItem(layoutInformation, R.drawable.vector20_settings, "Thông tin tài khoản");
        setupSettingItem(layoutConnect, R.drawable.vector17_settings, "Giao diện nhà cung cấp");
        setupSettingItem(layoutChangePassword, R.drawable.vector8_settings, "Thay đổi mật khẩu");
        setupSettingItemWithOverlay(layoutDeleteAccount, R.drawable.vector11_settings, R.drawable.vector10_settings, "Yêu cầu xóa tài khoản");
        setupSettingItem(layoutSettings, R.drawable.vector13_settings, "Cài đặt");

        tvEdit.setOnClickListener(v -> navigateToUserProfile());
        editIcon.setOnClickListener(v -> navigateToUserProfile());

        layoutInformation.setOnClickListener(v -> navigateToUserProfile());

        layoutConnect.setOnClickListener(v -> {
            FirebaseUser firebaseUser = FirebaseAuth.getInstance().getCurrentUser();
            if (firebaseUser == null) return;

            User user = viewModel.getUserLiveData().getValue();
            if (user != null && user.hasRole("owner")) {
                FirebaseFirestore db = FirebaseFirestore.getInstance();
                db.collection("Users").document(firebaseUser.getUid())
                        .update("currentRole", "owner")
                        .addOnSuccessListener(aVoid -> {
                            Toast.makeText(getContext(), "Đã chuyển sang giao diện chủ xe!", Toast.LENGTH_SHORT).show();
                            Intent intent = new Intent(getActivity(), OwnerMainActivity.class);
                            startActivity(intent);
                            requireActivity().finish();
                        })
                        .addOnFailureListener(e -> {
                            Toast.makeText(getContext(), "Chuyển vai trò thất bại.", Toast.LENGTH_SHORT).show();
                        });
            } else {
                Toast.makeText(getContext(), "Bạn không có quyền truy cập giao diện chủ xe.", Toast.LENGTH_SHORT).show();
            }
        });

        layoutChangePassword.setOnClickListener(v -> {
            Intent i = new Intent(getActivity(), UpdatePassword.class);
            startActivity(i);
            requireActivity().overridePendingTransition(0, 0);
        });

        layoutDeleteAccount.setOnClickListener(v -> {
            FirebaseUser firebaseUser = FirebaseAuth.getInstance().getCurrentUser();
            if (firebaseUser != null) {
                firebaseUser.delete()
                        .addOnCompleteListener(task -> {
                            if (task.isSuccessful()) {
                                Toast.makeText(getContext(), "Tài khoản đã được xóa.", Toast.LENGTH_LONG).show();
                                Intent intent = new Intent(getActivity(), LoginActivity.class);
                                startActivity(intent);
                                requireActivity().overridePendingTransition(0, 0);
                            } else {
                                Toast.makeText(getContext(), "Xóa tài khoản thất bại.", Toast.LENGTH_LONG).show();
                            }
                        });
            }
        });

        layoutSettings.setOnClickListener(v -> {
            Toast.makeText(getContext(), "Chức năng Cài đặt chưa được triển khai", Toast.LENGTH_SHORT).show();
        });

        layoutSignOut.setOnClickListener(v -> {
            FirebaseAuth.getInstance().signOut();
            Intent intent = new Intent(getActivity(), LoginActivity.class);
            startActivity(intent);
            requireActivity().overridePendingTransition(0, 0);
        });
    }

    private void navigateToUserProfile() {
        Intent i = new Intent(getActivity(), UserProfile.class);
        startActivity(i);
        requireActivity().overridePendingTransition(0, 0);
    }

    private void setupSettingItem(View view, int iconResId, String text) {
        ImageView icon = view.findViewById(R.id.setting_icon);
        TextView textView = view.findViewById(R.id.setting_text);
        icon.setImageResource(iconResId);
        textView.setText(text);
    }

    private void setupSettingItemWithOverlay(View view, int primaryIconResId, int overlayIconResId, String text) {
        ImageView icon = view.findViewById(R.id.setting_icon);
        TextView textView = view.findViewById(R.id.setting_text);
        icon.setImageResource(primaryIconResId);
        textView.setText(text);
    }

    public static class SettingViewModel extends ViewModel {
        private final FirebaseFirestore db;
        private final FirebaseUser firebaseUser;
        private final MutableLiveData<User> userLiveData;
        private final MutableLiveData<String> errorLiveData;

        public SettingViewModel() {
            db = FirebaseFirestore.getInstance();
            firebaseUser = FirebaseAuth.getInstance().getCurrentUser();
            userLiveData = new MutableLiveData<>();
            errorLiveData = new MutableLiveData<>();
        }

        public LiveData<User> getUserLiveData() {
            return userLiveData;
        }

        public LiveData<String> getErrorLiveData() {
            return errorLiveData;
        }

        public void loadUserData() {
            if (firebaseUser == null) {
                errorLiveData.setValue("Người dùng chưa đăng nhập");
                return;
            }

            DocumentReference userRef = db.collection("Users").document(firebaseUser.getUid());
            userRef.addSnapshotListener((document, error) -> {
                if (error != null) {
                    errorLiveData.setValue("Lỗi tải thông tin: " + error.getMessage());
                    return;
                }
                if (document != null && document.exists()) {
                    User user = document.toObject(User.class);
                    userLiveData.setValue(user);
                } else {
                    errorLiveData.setValue("Không tìm thấy thông tin người dùng");
                }
            });
        }
    }
}

```

### src\main\java\com\uit\carrental\FragmentPages\Customer\CustomerVehicleFilterFragment.java
```java
package com.uit.carrental.FragmentPages.Customer;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;
import com.uit.carrental.R;
import java.util.HashMap;
import java.util.Map;

public class CustomerVehicleFilterFragment extends Fragment {

    private static final String ARG_BRAND = "brand";
    private static final String ARG_STATUS = "status";
    private static final String ARG_MIN_RATING = "minRating";
    private static final String ARG_MAX_RATING = "maxRating";

    private FilterCallback callback;
    private String selectedBrand;
    private String selectedStatus;
    private Float minRating, maxRating;
    private Map<String, View> brandViews = new HashMap<>();
    private Map<String, View> statusViews = new HashMap<>();
    private Map<String, View> ratingViews = new HashMap<>();

    public interface FilterCallback {
        void onFilterApplied(String brand, String status, Float minRating, Float maxRating);
    }

    public static CustomerVehicleFilterFragment newInstance(FilterCallback callback) {
        CustomerVehicleFilterFragment fragment = new CustomerVehicleFilterFragment();
        fragment.callback = callback;
        return fragment;
    }

    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.customer_vehicle_filter, container, false);

        // Initialize views
        initializeBrandViews(view);
        initializeStatusViews(view);
        initializeRatingViews(view);

        // Nút đóng
        view.findViewById(R.id.rz3n8dabzscm).setOnClickListener(v -> getParentFragmentManager().popBackStack());

        // Nút thiết lập lại
        view.findViewById(R.id.rvai73xq5syc).setOnClickListener(v -> resetFilters());

        // Nút xác nhận
        view.findViewById(R.id.rt94tooyri0r).setOnClickListener(v -> applyFilters());

        return view;
    }

    private void initializeBrandViews(View view) {
        String[] brands = {"Vinfast", "Honda", "Mercedes", "BMW", "Ford", "Toyota"};
        int[] brandIds = {
                R.id.re5bkjyzw71a, R.id.r29lmqq8qqka, R.id.r5wpc3jutt9d,
                R.id.r047t6es9ecg6, R.id.rwviyruuyw0d, R.id.r2lvmia82fj5
        };
        for (int i = 0; i < brands.length; i++) {
            View brandView = view.findViewById(brandIds[i]);
            String brand = brands[i];
            brandViews.put(brand, brandView);
            brandView.setOnClickListener(v -> selectBrand(brand));
        }
    }

    private void initializeStatusViews(View view) {
        statusViews.put("available", view.findViewById(R.id.rzvu0zdr3b79));
        statusViews.get("available").setOnClickListener(v -> selectStatus("available"));
    }

    private void initializeRatingViews(View view) {
        ratingViews.put("5", view.findViewById(R.id.rozw79prjrbs));
        ratingViews.put("4-5", view.findViewById(R.id.rx3ytiykf6v));
        ratingViews.put("4", view.findViewById(R.id.rsooed0x193));
        ratingViews.put("3", view.findViewById(R.id.rusqd789cwjj));
        ratingViews.put("1-2", view.findViewById(R.id.ru6lopcq6jh));

        ratingViews.get("5").setOnClickListener(v -> selectRating(5f, 5f));
        ratingViews.get("4-5").setOnClickListener(v -> selectRating(4f, 5f));
        ratingViews.get("4").setOnClickListener(v -> selectRating(4f, 4f));
        ratingViews.get("3").setOnClickListener(v -> selectRating(3f, 3f));
        ratingViews.get("1-2").setOnClickListener(v -> selectRating(1f, 2f));
    }

    private void selectBrand(String brand) {
        for (Map.Entry<String, View> entry : brandViews.entrySet()) {
            entry.getValue().setBackgroundResource(entry.getKey().equals(brand) ?
                    R.drawable.s003087sw1cr100b0030871f : R.drawable.s4d3a4dsw1cr100);
        }
        selectedBrand = brand.equals(selectedBrand) ? null : brand;
    }

    private void selectStatus(String status) {
        for (Map.Entry<String, View> entry : statusViews.entrySet()) {
            entry.getValue().setBackgroundResource(entry.getKey().equals(status) ?
                    R.drawable.s003087sw1cr100b0030871f : R.drawable.s4d3a4dsw1cr100);
        }
        selectedStatus = status.equals(selectedStatus) ? null : status;
    }

    private void selectRating(Float min, Float max) {
        for (Map.Entry<String, View> entry : ratingViews.entrySet()) {
            entry.getValue().setBackgroundResource((min.equals(minRating) && max.equals(maxRating)) ?
                    R.drawable.s4d3a4dsw1cr100 : R.drawable.s4d3a4dsw1cr100);
        }
        if (min.equals(minRating) && max.equals(maxRating)) {
            minRating = null;
            maxRating = null;
        } else {
            minRating = min;
            maxRating = max;
        }
    }

    private void resetFilters() {
        selectedBrand = null;
        selectedStatus = null;
        minRating = null;
        maxRating = null;
        for (View view : brandViews.values()) {
            view.setBackgroundResource(R.drawable.s4d3a4dsw1cr100);
        }
        for (View view : statusViews.values()) {
            view.setBackgroundResource(R.drawable.s4d3a4dsw1cr100);
        }
        for (View view : ratingViews.values()) {
            view.setBackgroundResource(R.drawable.s4d3a4dsw1cr100);
        }
    }

    private void applyFilters() {
        if (callback != null) {
            callback.onFilterApplied(selectedBrand, selectedStatus, minRating, maxRating);
        }
        getParentFragmentManager().popBackStack();
    }
}

```

### src\main\java\com\uit\carrental\FragmentPages\Owner\OwnerActivityFragment.java
```java
package com.uit.carrental.FragmentPages.Owner;

import android.app.ProgressDialog;
import android.content.Intent;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import android.widget.Toast;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.firestore.ListenerRegistration;
import com.google.firebase.firestore.QueryDocumentSnapshot;
import com.uit.carrental.Adapter.BookingAdapter;
import com.uit.carrental.Model.Booking;
import com.uit.carrental.R;
import com.uit.carrental.Service.Booking.OwnerBookingDetailActivity;
import java.util.ArrayList;
import java.util.List;

public class OwnerActivityFragment extends Fragment {

    private static final String TAG = "OwnerActivityFragment";
    private RecyclerView recyclerView;
    private TextView tvEmpty;
    private BookingAdapter bookingAdapter;
    private List<Booking> bookingList;
    private FirebaseFirestore db;
    private FirebaseAuth auth;
    private ProgressDialog progressDialog;
    private ListenerRegistration bookingListener;

    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.owner_fragment_activity, container, false);

        db = FirebaseFirestore.getInstance();
        auth = FirebaseAuth.getInstance();
        progressDialog = new ProgressDialog(getActivity());
        progressDialog.setCancelable(false);
        progressDialog.setMessage("Đang lấy dữ liệu...");
        progressDialog.show();

        recyclerView = view.findViewById(R.id.activity_list);
        tvEmpty = view.findViewById(R.id.tv_empty);
        recyclerView.setHasFixedSize(true);
        recyclerView.setLayoutManager(new LinearLayoutManager(getContext()));

        bookingList = new ArrayList<>();
        bookingAdapter = new BookingAdapter(bookingList, booking -> {
            Intent intent = new Intent(getContext(), OwnerBookingDetailActivity.class);
            intent.putExtra("bookingId", booking.getBookingId());
            startActivity(intent);
        });
        recyclerView.setAdapter(bookingAdapter);

        loadBookings();

        return view;
    }

    private void loadBookings() {
        String userId = auth.getCurrentUser().getUid();
        bookingListener = db.collection("Bookings")
                .whereEqualTo("ownerId", userId)
                .addSnapshotListener((querySnapshot, error) -> {
                    if (error != null) {
                        Toast.makeText(getContext(), "Lỗi tải đơn hàng: " + error.getMessage(), Toast.LENGTH_SHORT).show();
                        progressDialog.dismiss();
                        return;
                    }
                    bookingList.clear();
                    if (querySnapshot != null) {
                        for (QueryDocumentSnapshot document : querySnapshot) {
                            Booking booking = document.toObject(Booking.class);
                            booking.setBookingId(document.getId());
                            bookingList.add(booking);
                        }
                    }
                    bookingAdapter.notifyDataSetChanged();
                    tvEmpty.setVisibility(bookingList.isEmpty() ? View.VISIBLE : View.GONE);
                    recyclerView.setVisibility(bookingList.isEmpty() ? View.GONE : View.VISIBLE);
                    progressDialog.dismiss();
                });
    }

    @Override
    public void onDestroyView() {
        super.onDestroyView();
        if (bookingListener != null) {
            bookingListener.remove();
        }
        if (progressDialog.isShowing()) {
            progressDialog.dismiss();
        }
    }
}

```

### src\main\java\com\uit\carrental\FragmentPages\Owner\OwnerNotificationsFragment.java
```java
package com.uit.carrental.FragmentPages.Owner;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.fragment.app.Fragment;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.firestore.QueryDocumentSnapshot;
import com.uit.carrental.Adapter.OwnerNotificationAdapter;
import com.uit.carrental.Model.Booking;
import com.uit.carrental.R;
import com.uit.carrental.Service.Activity.OwnerActivityDetail;
import java.util.ArrayList;
import java.util.List;

public class OwnerNotificationsFragment extends Fragment {

    private static final String TAG = "OwnerNotifications";
    private RecyclerView recyclerView;
    private OwnerNotificationAdapter notificationAdapter;
    private List<Booking> bookingList;
    private FirebaseFirestore db;
    private TextView tvEmpty;

    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.owner_fragment_notification, container, false);


        db = FirebaseFirestore.getInstance();
        bookingList = new ArrayList<>();
        recyclerView = view.findViewById(R.id.notification_list);
        tvEmpty = view.findViewById(R.id.tv_empty);
        recyclerView.setLayoutManager(new LinearLayoutManager(getContext()));
        recyclerView.setHasFixedSize(false);
        notificationAdapter = new OwnerNotificationAdapter(this, bookingList);
        recyclerView.setAdapter(notificationAdapter);

        loadBookings();
        recyclerView.post(() -> Log.d(TAG, "RecyclerView hiển thị: " + recyclerView.isShown()));
        return view;
    }

    private void loadBookings() {
        String ownerId = FirebaseAuth.getInstance().getCurrentUser() != null ?
                FirebaseAuth.getInstance().getCurrentUser().getUid() : null;
        Log.d(TAG, "Current ownerId: " + ownerId);

        if (ownerId == null) {
            Toast.makeText(getContext(), "Người dùng chưa đăng nhập", Toast.LENGTH_SHORT).show();
            recyclerView.setVisibility(View.GONE);
            tvEmpty.setVisibility(View.VISIBLE);
            return;
        }

        try {
            db.collection("Bookings")
                    .get()
                    .addOnSuccessListener(querySnapshot -> {
                        Log.d(TAG, "Số tài liệu nhận được: " + querySnapshot.size());
                        bookingList.clear();
                        for (QueryDocumentSnapshot doc : querySnapshot) {
                            try {
                                Booking booking = doc.toObject(Booking.class);
                                booking.setBookingId(doc.getId());
                                if (booking.getOwnerId() != null && booking.getOwnerId().equals(ownerId)) {
                                    bookingList.add(booking);
                                    Log.d(TAG, "Thêm booking: " + booking.getBookingId());
                                }
                            } catch (Exception e) {
                                Log.e(TAG, "Lỗi ánh xạ tài liệu: " + doc.getId(), e);
                            }
                        }
                        Log.d(TAG, "Số booking sau lọc: " + bookingList.size());
                        if (!bookingList.isEmpty()) {
                            recyclerView.setVisibility(View.VISIBLE);
                            tvEmpty.setVisibility(View.GONE);
                        } else {
                            recyclerView.setVisibility(View.GONE);
                            tvEmpty.setVisibility(View.VISIBLE);
                        }
                        notificationAdapter.updateData(bookingList);
                        recyclerView.invalidate();
                        Log.d(TAG, "Cập nhật giao diện, RecyclerView visibility: " + recyclerView.getVisibility());
                    })
                    .addOnFailureListener(e -> {
                        Log.e(TAG, "Lỗi tải booking: ", e);
                        if (getContext() != null) {
                            Toast.makeText(getContext(), "Lỗi tải booking: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                        }
                    });
        } catch (Exception e) {
            Log.e(TAG, "Lỗi runtime: ", e);
            if (getContext() != null) {
                Toast.makeText(getContext(), "Lỗi runtime: " + e.getMessage(), Toast.LENGTH_SHORT).show();
            }
        }
    }
}
```

### src\main\java\com\uit\carrental\FragmentPages\Owner\OwnerSettingFragment.java
```java
package com.uit.carrental.FragmentPages.Owner;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.fragment.app.Fragment;

import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.firestore.FirebaseFirestore;
import com.squareup.picasso.Picasso;
import com.uit.carrental.ActivityPages.CustomerMainActivity;
import com.uit.carrental.Model.User;
import com.uit.carrental.R;
import com.uit.carrental.Service.UserAuthentication.ForgotPasswordActivity;
import com.uit.carrental.Service.UserAuthentication.LoginActivity;
import com.uit.carrental.Service.UserAuthentication.ProfileManagement;

import de.hdodenhof.circleimageview.CircleImageView;

public class OwnerSettingFragment extends Fragment {

    private TextView tvName;
    private CircleImageView imgAvatar;
    private TextView tvEdit;
    private ImageView editIcon;

    private FirebaseFirestore dtb_user;
    private FirebaseUser firebaseUser;
    private FirebaseAuth mAuth;
    private User user = new User();

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.owner_fragment_setting, container, false);

        // Initialize views
        imgAvatar = view.findViewById(R.id.img_avatar);
        tvName = view.findViewById(R.id.tv_name);
        tvEdit = view.findViewById(R.id.tv_edit);
        editIcon = view.findViewById(R.id.edit_icon);

        // Initialize setting items
        View layoutInformation = view.findViewById(R.id.layout_information);
        View layoutSwitchToCustomer = view.findViewById(R.id.layout_switch_to_customer);
        View layoutChangePassword = view.findViewById(R.id.layout_change_password);
        View layoutDeleteAccount = view.findViewById(R.id.layout_delete_account);
        View layoutSettings = view.findViewById(R.id.layout_settings);
        View layoutSignOut = view.findViewById(R.id.layout_sign_out);

        // Set icons and texts for setting items
        setupSettingItem(layoutInformation, R.drawable.vector20_settings, "Thông tin tài khoản");
        setupSettingItem(layoutSwitchToCustomer, R.drawable.vector17_settings, "Giao diện khách hàng");
        setupSettingItem(layoutChangePassword, R.drawable.vector8_settings, "Thay đổi mật khẩu");
        setupSettingItemWithOverlay(layoutDeleteAccount, R.drawable.vector11_settings, R.drawable.vector10_settings, "Yêu cầu xóa tài khoản");
        setupSettingItem(layoutSettings, R.drawable.vector13_settings, "Cài đặt");

        dtb_user = FirebaseFirestore.getInstance();
        firebaseUser = FirebaseAuth.getInstance().getCurrentUser();
        mAuth = FirebaseAuth.getInstance();
        user.setUserId(firebaseUser != null ? firebaseUser.getUid() : "");

        if (firebaseUser != null) {
            dtb_user.collection("Users")
                    .document(firebaseUser.getUid())
                    .get()
                    .addOnSuccessListener(documentSnapshot -> {
                        if (documentSnapshot.exists()) {
                            String username = documentSnapshot.getString("username");
                            String avatarURL = documentSnapshot.getString("avatarURL");

                            if (username != null) {
                                tvName.setText(username);
                            }
                            if (avatarURL != null && !avatarURL.isEmpty()) {
                                Picasso.get().load(avatarURL).into(imgAvatar);
                            }
                        }
                    })
                    .addOnFailureListener(e -> {
                        Toast.makeText(view.getContext(), "Không thể lấy thông tin.", Toast.LENGTH_SHORT).show();
                    });
        }

        // Click listeners
        tvEdit.setOnClickListener(v -> {
            startActivity(new Intent(getActivity(), ProfileManagement.class));
            requireActivity().overridePendingTransition(0, 0);
        });

        editIcon.setOnClickListener(v -> {
            startActivity(new Intent(getActivity(), ProfileManagement.class));
            requireActivity().overridePendingTransition(0, 0);
        });

        layoutInformation.setOnClickListener(v -> {
            startActivity(new Intent(getActivity(), ProfileManagement.class));
            requireActivity().overridePendingTransition(0, 0);
        });

        layoutSwitchToCustomer.setOnClickListener(v -> {
            if (firebaseUser == null) return;

            dtb_user.collection("Users")
                    .document(firebaseUser.getUid())
                    .update("currentRole", "customer")
                    .addOnSuccessListener(aVoid -> {
                        Toast.makeText(getContext(), "Đã chuyển sang giao diện khách hàng!", Toast.LENGTH_SHORT).show();
                        startActivity(new Intent(getActivity(), CustomerMainActivity.class));
                        requireActivity().finish();
                    })
                    .addOnFailureListener(e -> {
                        Toast.makeText(getContext(), "Chuyển vai trò thất bại.", Toast.LENGTH_SHORT).show();
                    });
        });

        layoutChangePassword.setOnClickListener(v -> {
            startActivity(new Intent(getActivity(), ForgotPasswordActivity.class));
            requireActivity().overridePendingTransition(0, 0);
        });

        layoutDeleteAccount.setOnClickListener(v -> {
            if (firebaseUser == null) return;

            dtb_user.collection("Users").document(firebaseUser.getUid())
                    .delete()
                    .addOnSuccessListener(aVoid -> {
                        firebaseUser.delete().addOnCompleteListener(task -> {
                            Toast.makeText(getContext(), "Đã xóa tài khoản!", Toast.LENGTH_SHORT).show();
                            startActivity(new Intent(getActivity(), LoginActivity.class));
                            requireActivity().finish();
                        });
                    })
                    .addOnFailureListener(e -> {
                        Toast.makeText(getContext(), "Xóa tài khoản thất bại.", Toast.LENGTH_SHORT).show();
                    });
        });

        layoutSettings.setOnClickListener(v -> {
            // TODO: Thêm hành động cho mục "Cài đặt" (ví dụ: mở SettingsActivity)
            Toast.makeText(getContext(), "Chức năng Cài đặt chưa được triển khai", Toast.LENGTH_SHORT).show();
        });

        layoutSignOut.setOnClickListener(v -> {
            mAuth.signOut();
            startActivity(new Intent(getActivity(), LoginActivity.class));
            requireActivity().finish();
        });

        return view;
    }

    private void setupSettingItem(View view, int iconResId, String text) {
        ImageView icon = view.findViewById(R.id.setting_icon);
        TextView textView = view.findViewById(R.id.setting_text);
        icon.setImageResource(iconResId);
        textView.setText(text);
    }

    private void setupSettingItemWithOverlay(View view, int primaryIconResId, int overlayIconResId, String text) {
        // Chỉ dùng primaryIconResId vì item_setting_row.xml không hỗ trợ overlay
        ImageView icon = view.findViewById(R.id.setting_icon);
        TextView textView = view.findViewById(R.id.setting_text);
        icon.setImageResource(primaryIconResId);
        textView.setText(text);
    }
}
```

### src\main\java\com\uit\carrental\FragmentPages\Owner\OwnerVehicleFragment.java
```java
package com.uit.carrental.FragmentPages.Owner;

import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.firestore.QueryDocumentSnapshot;
import com.uit.carrental.Adapter.OwnerVehicleAdapter;
import com.uit.carrental.Model.Vehicle;
import com.uit.carrental.R;
import com.uit.carrental.Service.Vehicle.AddVehicleActivity;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;

public class OwnerVehicleFragment extends Fragment {

    private static final String TAG = "OwnerVehicleFragment";
    private RecyclerView recyclerView;
    private OwnerVehicleAdapter adapter;
    private ArrayList<Vehicle> vehicleList;
    private FirebaseFirestore firestore;
    private FirebaseAuth firebaseAuth;
    private ProgressDialog progressDialog;
    private Button buttonAddVehicle;
    private TextView textViewEmpty;
    private View rootView;

    private static final int REQUEST_ADD_VEHICLE = 100;

    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        rootView = inflater.inflate(R.layout.owner_fragment_vehicle, container, false);

        // Initialize views
        buttonAddVehicle = rootView.findViewById(R.id.btn_add);
        textViewEmpty = rootView.findViewById(R.id.text_empty);
        recyclerView = rootView.findViewById(R.id.vehicle_list);
        recyclerView.setHasFixedSize(false); // Tắt fixed size để hỗ trợ thay đổi số item
        recyclerView.setLayoutManager(new LinearLayoutManager(getContext()));

        // Initialize Firebase and ProgressDialog
        firebaseAuth = FirebaseAuth.getInstance();
        firestore = FirebaseFirestore.getInstance();
        progressDialog = new ProgressDialog(requireContext());
        progressDialog.setCancelable(false);
        progressDialog.setMessage("Đang lấy dữ liệu...");

        // Initialize adapter
        vehicleList = new ArrayList<>();
        adapter = new OwnerVehicleAdapter(requireContext(), vehicleList);
        recyclerView.setAdapter(adapter);
        Log.d(TAG, "Khởi tạo RecyclerView và adapter");

        // Set button listener
        buttonAddVehicle.setOnClickListener(v -> {
            Intent intent = new Intent(requireContext(), AddVehicleActivity.class);
            startActivityForResult(intent, REQUEST_ADD_VEHICLE);
        });

        // Load data
        loadVehicles();

        return rootView;
    }

    @Override
    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode == REQUEST_ADD_VEHICLE && resultCode == Activity.RESULT_OK) {
            loadVehicles();
            Log.d(TAG, "Nhận kết quả từ AddVehicleActivity, làm mới dữ liệu");
        }
    }

    private void loadVehicles() {
        FirebaseUser firebaseUser = firebaseAuth.getCurrentUser();
        if (firebaseUser == null) {
            Toast.makeText(getContext(), "Người dùng chưa đăng nhập", Toast.LENGTH_SHORT).show();
            updateEmptyState();
            return;
        }

        String ownerId = firebaseUser.getUid();
        Log.d(TAG, "UID người dùng: " + ownerId);

        progressDialog.show();
        firestore.collection("Vehicles")
                .addSnapshotListener((snapshots, e) -> {
                    progressDialog.dismiss();
                    if (e != null) {
                        Log.e(TAG, "Lỗi tải xe: " + e.getMessage());
                        Toast.makeText(getContext(), "Không thể lấy danh sách xe: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                        updateEmptyState();
                        return;
                    }

                    vehicleList.clear();
                    if (snapshots != null && !snapshots.isEmpty()) {
                        for (QueryDocumentSnapshot document : snapshots) {
                            Vehicle vehicle = document.toObject(Vehicle.class);
                            if (vehicle.getVehicleId() == null) {
                                vehicle.setVehicleId(document.getId());
                            }
                            if (ownerId.equals(vehicle.getOwnerId())) {
                                vehicleList.add(vehicle);
                                Log.d(TAG, "Tải xe: " + vehicle.toString());
                            }
                        }
                        Collections.sort(vehicleList, new Comparator<Vehicle>() {
                            @Override
                            public int compare(Vehicle v1, Vehicle v2) {
                                if (v1.getCreatedAt() == null || v2.getCreatedAt() == null) {
                                    return 0;
                                }
                                return v2.getCreatedAt().compareTo(v1.getCreatedAt());
                            }
                        });
                        Log.d(TAG, "Số xe tải được: " + vehicleList.size());
                    } else {
                        Log.d(TAG, "Không có xe nào trong Vehicles.");
                    }
                    adapter.updateData(new ArrayList<>(vehicleList)); // Tạo bản sao để tránh tham chiếu
                    recyclerView.invalidate(); // Buộc vẽ lại RecyclerView
                    updateEmptyState();
                    Log.d(TAG, "Cập nhật giao diện, RecyclerView visibility: " + recyclerView.getVisibility());
                });
    }

    private void updateEmptyState() {
        Log.d(TAG, "Cập nhật trạng thái rỗng, số xe: " + vehicleList.size());
        if (vehicleList.isEmpty()) {
            recyclerView.setVisibility(View.GONE);
            textViewEmpty.setVisibility(View.VISIBLE);
            textViewEmpty.setText(R.string.no_vehicles);
        } else {
            recyclerView.setVisibility(View.VISIBLE);
            textViewEmpty.setVisibility(View.GONE);
        }
    }
}
```

### src\main\java\com\uit\carrental\Model\Booking.java
```java
package com.uit.carrental.Model;

import com.google.firebase.Timestamp;

public class Booking {
    private String bookingId;
    private String vehicleId;
    private String customerId;
    private String ownerId;
    private Timestamp startTime;
    private Timestamp endTime;
    private Timestamp maintenanceEndTime;
    private long totalAmount;
    private String status; // pending, confirmed, rejected, paid, completed, cancelled
    private Timestamp createdAt;
    private Timestamp updatedAt;
    private String paymentStatus; // unpaid, paid, failed
    private String paymentMethod; // ZaloPay, Other
    private String paymentId; // ID giao dịch từ ZaloPay
    private String note;
    private String pickupLocation;
    private String dropoffLocation;
    private String orderId; // ID đơn hàng từ ZaloPay

    public Booking() {
        this.bookingId = "";
        this.vehicleId = "";
        this.customerId = "";
        this.ownerId = "";
        this.startTime = null;
        this.endTime = null;
        this.maintenanceEndTime = null;
        this.totalAmount = 0;
        this.status = "pending";
        this.createdAt = Timestamp.now();
        this.updatedAt = Timestamp.now();
        this.paymentStatus = "unpaid";
        this.paymentMethod = "";
        this.paymentId = "";
        this.note = "";
        this.pickupLocation = "";
        this.dropoffLocation = "";
        this.orderId = "";
    }

    // Getters và Setters
    public String getBookingId() { return bookingId; }
    public void setBookingId(String bookingId) { this.bookingId = bookingId; }

    public String getVehicleId() { return vehicleId; }
    public void setVehicleId(String vehicleId) { this.vehicleId = vehicleId; }

    public String getCustomerId() { return customerId; }
    public void setCustomerId(String customerId) { this.customerId = customerId; }

    public String getOwnerId() { return ownerId; }
    public void setOwnerId(String ownerId) { this.ownerId = ownerId; }

    public Timestamp getStartTime() { return startTime; }
    public void setStartTime(Timestamp startTime) { this.startTime = startTime; }

    public Timestamp getEndTime() { return endTime; }
    public void setEndTime(Timestamp endTime) { this.endTime = endTime; }

    public Timestamp getMaintenanceEndTime() { return maintenanceEndTime; }
    public void setMaintenanceEndTime(Timestamp maintenanceEndTime) { this.maintenanceEndTime = maintenanceEndTime; }

    public long getTotalAmount() { return totalAmount; }
    public void setTotalAmount(long totalAmount) { this.totalAmount = totalAmount; }

    public String getStatus() { return status; }
    public void setStatus(String status) { this.status = status; }

    public Timestamp getCreatedAt() { return createdAt; }
    public void setCreatedAt(Timestamp createdAt) { this.createdAt = createdAt; }

    public Timestamp getUpdatedAt() { return updatedAt; }
    public void setUpdatedAt(Timestamp updatedAt) { this.updatedAt = updatedAt; }

    public String getPaymentStatus() { return paymentStatus; }
    public void setPaymentStatus(String paymentStatus) { this.paymentStatus = paymentStatus; }

    public String getPaymentMethod() { return paymentMethod; }
    public void setPaymentMethod(String paymentMethod) { this.paymentMethod = paymentMethod; }

    public String getPaymentId() { return paymentId; }
    public void setPaymentId(String paymentId) { this.paymentId = paymentId; }

    public String getNote() { return note; }
    public void setNote(String note) { this.note = note; }

    public String getPickupLocation() { return pickupLocation; }
    public void setPickupLocation(String pickupLocation) { this.pickupLocation = pickupLocation; }

    public String getDropoffLocation() { return dropoffLocation; }
    public void setDropoffLocation(String dropoffLocation) { this.dropoffLocation = dropoffLocation; }

    public String getOrderId() { return orderId; }
    public void setOrderId(String orderId) { this.orderId = orderId; }
}

```

### src\main\java\com\uit\carrental\Model\CreateOrder.java
```java
//// File: CreateOrder.java
//package com.uit.carrental.Model;
//
//import android.os.Build;
//import androidx.annotation.RequiresApi;
//
//import com.uit.carrental.Service.ZaloPay.Constant.AppInfo;
//import com.uit.carrental.Service.ZaloPay.Helper.HMac.HMacUtil;
//
//import org.json.JSONObject;
//
//import java.io.OutputStream;
//import java.net.HttpURLConnection;
//import java.net.URL;
//import java.nio.charset.StandardCharsets;
//import java.text.SimpleDateFormat;
//import java.util.Date;
//import java.util.TimeZone;
//
//public class CreateOrder {
//
//    @RequiresApi(api = Build.VERSION_CODES.O)
//    public JSONObject createOrder(String appTransId) {
//        try {
//            long amount = 1000; // có thể lấy từ amount ngoài truyền vào
//
//            // Lấy thời gian theo chuẩn GMT+7
//            SimpleDateFormat sdf = new SimpleDateFormat("yyMMdd");
//            sdf.setTimeZone(TimeZone.getTimeZone("GMT+7"));
//            String appTime = sdf.format(new Date());
//
//            JSONObject order = new JSONObject();
//            order.put("app_id", AppInfo.APP_ID);
//            order.put("app_user", "user123"); // user định danh (tuỳ chỉnh)
//            order.put("app_time", System.currentTimeMillis()); // thời gian tạo đơn
//            order.put("amount", amount);
//            order.put("app_trans_id", appTime + "_" + appTransId); // định dạng yêu cầu
//            order.put("embed_data", "{}");
//            order.put("item", "[]");
//            order.put("description", "Thanh toán đơn thuê xe CarRental: " + appTransId);
//            order.put("bank_code", "zalopayapp"); // App mobile payment
//
//            // Build data to hash
//            String data = AppInfo.APP_ID + "|" + appTime + "_" + appTransId + "|" + AppInfo.APP_USER + "|" + amount + "|" + AppInfo.APP_NAME + "|{}|[]";
//            String mac = HMacUtil.HMacHexStringEncode("HmacSHA256", AppInfo.MAC_KEY, data);
//            order.put("mac", mac);
//
//            // Gửi HTTP request
//            URL url = new URL(AppInfo.URL_CREATE_ORDER);
//            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
//            connection.setRequestMethod("POST");
//            connection.setRequestProperty("Content-Type", "application/json");
//            connection.setDoOutput(true);
//
//            OutputStream os = connection.getOutputStream();
//            os.write(order.toString().getBytes(StandardCharsets.UTF_8));
//            os.close();
//
//            int responseCode = connection.getResponseCode();
//            if (responseCode == HttpURLConnection.HTTP_OK) {
//                java.util.Scanner s = new java.util.Scanner(connection.getInputStream()).useDelimiter("\\A");
//                String response = s.hasNext() ? s.next() : "";
//                s.close();
//                return new JSONObject(response);
//            } else {
//                throw new RuntimeException("Failed : HTTP error code : " + responseCode);
//            }
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//    }
//}

```

### src\main\java\com\uit\carrental\Model\Message.java
```java
package com.uit.carrental.Model;

public class Message {
    private String content;
    private boolean isUser;

    public Message(String content, boolean isUser) {
        this.content = content;
        this.isUser = isUser;
    }

    public String getContent() {
        return content;
    }

    public boolean isUser() {
        return isUser;
    }
}
```

### src\main\java\com\uit\carrental\Model\Notification.java
```java
package com.uit.carrental.Model;

import com.google.firebase.Timestamp;

public class Notification {
    private String notificationId;
    private String userId;
    private String title;
    private String message;
    private String type;
    private String vehicleId;
    private String bookingId;
    private Timestamp createdAt;
    private boolean isRead;
    private boolean read;
    private String role; // Thêm trường role

    public Notification() {}

    public String getNotificationId() { return notificationId; }
    public void setNotificationId(String notificationId) { this.notificationId = notificationId; }

    public String getUserId() { return userId; }
    public void setUserId(String userId) { this.userId = userId; }

    public String getTitle() { return title; }
    public void setTitle(String title) { this.title = title; }

    public String getMessage() { return message; }
    public void setMessage(String message) { this.message = message; }

    public String getType() { return type; }
    public void setType(String type) { this.type = type; }

    public String getVehicleId() { return vehicleId; }
    public void setVehicleId(String vehicleId) { this.vehicleId = vehicleId; }

    public String getBookingId() { return bookingId; }
    public void setBookingId(String bookingId) { this.bookingId = bookingId; }

    public Timestamp getCreatedAt() { return createdAt; }
    public void setCreatedAt(Timestamp createdAt) { this.createdAt = createdAt; }

    public boolean isRead() { return isRead || read; }
    public void setRead(boolean read) {
        this.isRead = read;
        this.read = read;
    }

    public void setIsRead(boolean isRead) {
        this.isRead = isRead;
        this.read = isRead;
    }

    public String getRole() { return role; }
    public void setRole(String role) { this.role = role; }
}
```

### src\main\java\com\uit\carrental\Model\onClickInterface.java
```java
package com.uit.carrental.Model;
public interface onClickInterface {
    void setClick(int position);
}

```

### src\main\java\com\uit\carrental\Model\Order.java
```java
package com.uit.carrental.Model;

public class Order {
    private String CustomerID;
    private String OrderID;
    private String ProvideID;
    private String vehicle_id;

    public Order() {

    }

    public Order(String customerID, String orderID, String provideID, String vehicl_id) {
        CustomerID = customerID;
        OrderID = orderID;
        ProvideID = provideID;
        vehicle_id = vehicl_id;

    }

    public String getCustomerID() {
        return CustomerID;
    }

    public void setCustomerID(String customerID) {
        CustomerID = customerID;
    }

    public String getOrderID() {
        return OrderID;
    }

    public void setOrderID(String orderID) {
        OrderID = orderID;
    }

    public String getProvideID() {
        return ProvideID;
    }

    public void setProvideID(String provideID) {
        ProvideID = provideID;
    }

    public String getVehicle_id() {
        return vehicle_id;
    }

    public void setVehicle_id(String vehicle_id) {
        this.vehicle_id = vehicle_id;
    }
}


```

### src\main\java\com\uit\carrental\Model\RentalHistory.java
```java
package com.uit.carrental.Model;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import com.google.firebase.Timestamp;

public class RentalHistory {

    private String rentalId; // ID của lần thuê
    private String vehicleId; // ID xe
    private String customerId; // ID khách hàng
    private Timestamp startDate; // Ngày bắt đầu thuê
    private Timestamp endDate; // Ngày kết thúc thuê
    private double totalCost; // Tổng chi phí
    private String status; // Trạng thái (completed, ongoing, cancelled)
    private String orderId; // Tham chiếu đến Orders (nếu có)

    public RentalHistory() {
        this.rentalId = "";
        this.vehicleId = "";
        this.customerId = "";
        this.startDate = Timestamp.now();
        this.endDate = Timestamp.now();
        this.totalCost = 0.0;
        this.status = "ongoing";
        this.orderId = "";
    }

    // Getters and Setters
    @NonNull
    public String getRentalId() { return rentalId != null ? rentalId : ""; }
    public void setRentalId(@Nullable String rentalId) { this.rentalId = rentalId != null ? rentalId : ""; }

    @NonNull
    public String getVehicleId() { return vehicleId != null ? vehicleId : ""; }
    public void setVehicleId(@Nullable String vehicleId) { this.vehicleId = vehicleId != null ? vehicleId : ""; }

    @NonNull
    public String getCustomerId() { return customerId != null ? customerId : ""; }
    public void setCustomerId(@Nullable String customerId) { this.customerId = customerId != null ? customerId : ""; }

    @Nullable
    public Timestamp getStartDate() { return startDate; }
    public void setStartDate(@Nullable Timestamp startDate) { this.startDate = startDate != null ? startDate : Timestamp.now(); }

    @Nullable
    public Timestamp getEndDate() { return endDate; }
    public void setEndDate(@Nullable Timestamp endDate) { this.endDate = endDate != null ? endDate : Timestamp.now(); }

    public double getTotalCost() { return totalCost; }
    public void setTotalCost(double totalCost) { this.totalCost = totalCost >= 0 ? totalCost : 0.0; }

    @NonNull
    public String getStatus() { return status != null ? status : "ongoing"; }
    public void setStatus(@Nullable String status) { this.status = status != null ? status : "ongoing"; }

    @NonNull
    public String getOrderId() { return orderId != null ? orderId : ""; }
    public void setOrderId(@Nullable String orderId) { this.orderId = orderId != null ? orderId : ""; }

    @NonNull
    @Override
    public String toString() {
        return "RentalHistory{rentalId='" + rentalId + "', vehicleId='" + vehicleId + "', customerId='" + customerId +
                "', totalCost=" + totalCost + ", status='" + status + "'}";
    }
}

```

### src\main\java\com\uit\carrental\Model\User.java
```java
package com.uit.carrental.Model;

import android.os.Parcel;
import android.os.Parcelable;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import java.util.HashMap;
import java.util.Map;

public class User implements Parcelable {

    private String userId;
    private String username;
    private String email;
    private String phoneNumber;
    private String avatarUrl;
    private String birthday;
    private String address;
    private String city;
    private String ciCardFront;
    private String ciCardBehind;
    private String description;
    private String verificationStatus;
    private String status;
    private Map<String, Boolean> roles;
    private String currentRole;
    private String licenseUrl; // Trường mới cho ảnh bằng lái xe

    public User() {
        this.userId = "";
        this.username = "";
        this.email = "";
        this.phoneNumber = "";
        this.avatarUrl = "";
        this.birthday = "";
        this.address = "";
        this.city = "";
        this.ciCardFront = "";
        this.ciCardBehind = "";
        this.description = "";
        this.verificationStatus = null;
        this.status = "active";
        this.roles = new HashMap<>();
        this.currentRole = "customer";
        this.licenseUrl = "";
    }

    protected User(Parcel in) {
        userId = in.readString();
        username = in.readString();
        email = in.readString();
        phoneNumber = in.readString();
        avatarUrl = in.readString();
        birthday = in.readString();
        address = in.readString();
        city = in.readString();
        ciCardFront = in.readString();
        ciCardBehind = in.readString();
        description = in.readString();
        verificationStatus = in.readString();
        status = in.readString();
        roles = in.readHashMap(Boolean.class.getClassLoader());
        currentRole = in.readString();
        licenseUrl = in.readString();
    }

    public static final Creator<User> CREATOR = new Creator<User>() {
        @Override
        public User createFromParcel(Parcel in) {
            return new User(in);
        }

        @Override
        public User[] newArray(int size) {
            return new User[size];
        }
    };

    // Getters and Setters
    @NonNull
    public String getUserId() { return userId != null ? userId : ""; }
    public void setUserId(@Nullable String userId) { this.userId = userId != null ? userId : ""; }

    @NonNull
    public String getUsername() { return username != null ? username : ""; }
    public void setUsername(@Nullable String username) { this.username = username != null ? username : ""; }

    @NonNull
    public String getEmail() { return email != null ? email : ""; }
    public void setEmail(@Nullable String email) { this.email = email != null ? email : ""; }

    @NonNull
    public String getPhoneNumber() { return phoneNumber != null ? phoneNumber : ""; }
    public void setPhoneNumber(@Nullable String phoneNumber) { this.phoneNumber = phoneNumber != null ? phoneNumber : ""; }

    @NonNull
    public String getAvatarUrl() { return avatarUrl != null ? avatarUrl : ""; }
    public void setAvatarUrl(@Nullable String avatarUrl) { this.avatarUrl = avatarUrl != null ? avatarUrl : ""; }

    @NonNull
    public String getBirthday() { return birthday != null ? birthday : ""; }
    public void setBirthday(@Nullable String birthday) { this.birthday = birthday != null ? birthday : ""; }

    @NonNull
    public String getAddress() { return address != null ? address : ""; }
    public void setAddress(@Nullable String address) { this.address = address != null ? address : ""; }

    @NonNull
    public String getCity() { return city != null ? city : ""; }
    public void setCity(@Nullable String city) { this.city = city != null ? city : ""; }

    @NonNull
    public String getCiCardFront() { return ciCardFront != null ? ciCardFront : ""; }
    public void setCiCardFront(@Nullable String ciCardFront) { this.ciCardFront = ciCardFront != null ? ciCardFront : ""; }

    @NonNull
    public String getCiCardBehind() { return ciCardBehind != null ? ciCardBehind : ""; }
    public void setCiCardBehind(@Nullable String ciCardBehind) { this.ciCardBehind = ciCardBehind != null ? ciCardBehind : ""; }

    @NonNull
    public String getDescription() { return description != null ? description : ""; }
    public void setDescription(@Nullable String description) { this.description = description != null ? description : ""; }

    @Nullable
    public String getVerificationStatus() { return verificationStatus; }
    public void setVerificationStatus(@Nullable String verificationStatus) { this.verificationStatus = verificationStatus; }

    @NonNull
    public String getStatus() { return status != null ? status : "active"; }
    public void setStatus(@Nullable String status) { this.status = status != null ? status : "active"; }

    @NonNull
    public Map<String, Boolean> getRoles() { return roles != null ? roles : new HashMap<>(); }
    public void setRoles(@Nullable Map<String, Boolean> roles) { this.roles = roles != null ? roles : new HashMap<>(); }

    @NonNull
    public String getCurrentRole() { return currentRole != null ? currentRole : "customer"; }
    public void setCurrentRole(@Nullable String currentRole) { this.currentRole = currentRole != null ? currentRole : "customer"; }

    @NonNull
    public String getLicenseUrl() { return licenseUrl != null ? licenseUrl : ""; }
    public void setLicenseUrl(@Nullable String licenseUrl) { this.licenseUrl = licenseUrl != null ? licenseUrl : ""; }

    // Utility Methods
    public boolean hasRole(@Nullable String role) {
        return role != null && roles != null && roles.getOrDefault(role, false);
    }

    // Parcelable
    @Override
    public int describeContents() { return 0; }

    @Override
    public void writeToParcel(@NonNull Parcel dest, int flags) {
        dest.writeString(userId);
        dest.writeString(username);
        dest.writeString(email);
        dest.writeString(phoneNumber);
        dest.writeString(avatarUrl);
        dest.writeString(birthday);
        dest.writeString(address);
        dest.writeString(city);
        dest.writeString(ciCardFront);
        dest.writeString(ciCardBehind);
        dest.writeString(description);
        dest.writeString(verificationStatus);
        dest.writeString(status);
        dest.writeMap(roles);
        dest.writeString(currentRole);
        dest.writeString(licenseUrl);
    }

    @NonNull
    @Override
    public String toString() {
        return "User{userId='" + userId + "', username='" + username + "', verificationStatus='" + verificationStatus + "', currentRole='" + currentRole + "'}";
    }
}
```

### src\main\java\com\uit\carrental\Model\UserClient.java
```java
package com.uit.carrental.Model;


import android.app.Application;

import com.uit.carrental.Model.User;


public class UserClient extends Application {
    private User user = null;

    public User getUser() {
        return user;
    }

    public void setUser(User user) {
        this.user = user;
    }
}

```

### src\main\java\com\uit\carrental\Model\Vehicle.java
```java
package com.uit.carrental.Model;

import android.os.Parcel;
import android.os.Parcelable;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import com.google.firebase.Timestamp;
import com.google.firebase.firestore.PropertyName;

public class Vehicle implements Parcelable {

    private String vehicleId;
    private String ownerId;
    private String vehicleName;
    private String vehiclePrice;
    private String vehicleSeats;
    private String vehicleNumber;
    private String vehicleAvailability;
    private String vehicleImageUrl;
    private String fuelType;
    private String maxSpeed;
    private String transmission;
    private String doorsAndSeats;
    private String vehicleBrand;
    private Float vehicleRating;
    private String verificationStatus;
    private Timestamp createdAt;
    private String documentImageUrl;

    public Vehicle() {
        this.vehicleId = "";
        this.ownerId = "";
        this.vehicleName = "";
        this.vehiclePrice = "";
        this.vehicleSeats = "";
        this.vehicleNumber = "";
        this.vehicleAvailability = "available";
        this.vehicleImageUrl = "";
        this.fuelType = "";
        this.maxSpeed = "";
        this.transmission = "";
        this.doorsAndSeats = "";
        this.vehicleBrand = "";
        this.vehicleRating = 4.0f;
        this.verificationStatus = "pending";
        this.createdAt = Timestamp.now();
        this.documentImageUrl = "";
    }

    protected Vehicle(Parcel in) {
        vehicleId = in.readString();
        ownerId = in.readString();
        vehicleName = in.readString();
        vehiclePrice = in.readString();
        vehicleSeats = in.readString();
        vehicleNumber = in.readString();
        vehicleAvailability = in.readString();
        vehicleImageUrl = in.readString();
        fuelType = in.readString();
        maxSpeed = in.readString();
        transmission = in.readString();
        doorsAndSeats = in.readString();
        vehicleBrand = in.readString();
        vehicleRating = in.readFloat();
        verificationStatus = in.readString();
        createdAt = in.readParcelable(Timestamp.class.getClassLoader());
        documentImageUrl = in.readString();
    }

    public static final Creator<Vehicle> CREATOR = new Creator<Vehicle>() {
        @Override
        public Vehicle createFromParcel(Parcel in) {
            return new Vehicle(in);
        }

        @Override
        public Vehicle[] newArray(int size) {
            return new Vehicle[size];
        }
    };

    // Getters and Setters
    @NonNull
    @PropertyName("vehicleId")
    public String getVehicleId() { return vehicleId != null ? vehicleId : ""; }
    public void setVehicleId(@Nullable String vehicleId) { this.vehicleId = vehicleId != null ? vehicleId : ""; }

    @NonNull
    @PropertyName("ownerId")
    public String getOwnerId() { return ownerId != null ? ownerId : ""; }
    public void setOwnerId(@Nullable String ownerId) { this.ownerId = ownerId != null ? ownerId : ""; }

    @NonNull
    @PropertyName("vehicleName")
    public String getVehicleName() { return vehicleName != null ? vehicleName : ""; }
    public void setVehicleName(@Nullable String vehicleName) { this.vehicleName = vehicleName != null ? vehicleName : ""; }

    @NonNull
    @PropertyName("vehiclePrice")
    public String getVehiclePrice() { return vehiclePrice != null ? vehiclePrice : ""; }
    public void setVehiclePrice(@Nullable String vehiclePrice) { this.vehiclePrice = vehiclePrice != null ? vehiclePrice : ""; }

    @NonNull
    @PropertyName("vehicleSeats")
    public String getVehicleSeats() { return vehicleSeats != null ? vehicleSeats : ""; }
    public void setVehicleSeats(@Nullable String vehicleSeats) { this.vehicleSeats = vehicleSeats != null ? vehicleSeats : ""; }

    @NonNull
    @PropertyName("vehicleNumber")
    public String getVehicleNumber() { return vehicleNumber != null ? vehicleNumber : ""; }
    public void setVehicleNumber(@Nullable String vehicleNumber) { this.vehicleNumber = vehicleNumber != null ? vehicleNumber : ""; }

    @NonNull
    @PropertyName("vehicleAvailability")
    public String getVehicleAvailability() { return vehicleAvailability != null ? vehicleAvailability : "available"; }
    public void setVehicleAvailability(@Nullable String vehicleAvailability) {
        this.vehicleAvailability = vehicleAvailability != null ? vehicleAvailability : "available";
    }

    @NonNull
    @PropertyName("vehicleImageUrl")
    public String getVehicleImageUrl() { return vehicleImageUrl != null ? vehicleImageUrl : ""; }
    public void setVehicleImageUrl(@Nullable String vehicleImageUrl) {
        this.vehicleImageUrl = vehicleImageUrl != null ? vehicleImageUrl : "";
    }

    @NonNull
    @PropertyName("fuelType")
    public String getFuelType() { return fuelType != null ? fuelType : ""; }
    public void setFuelType(@Nullable String fuelType) { this.fuelType = fuelType != null ? fuelType : ""; }

    @NonNull
    @PropertyName("maxSpeed")
    public String getMaxSpeed() { return maxSpeed != null ? maxSpeed : ""; }
    public void setMaxSpeed(@Nullable String maxSpeed) { this.maxSpeed = maxSpeed != null ? maxSpeed : ""; }

    @NonNull
    @PropertyName("transmission")
    public String getTransmission() { return transmission != null ? transmission : ""; }
    public void setTransmission(@Nullable String transmission) { this.transmission = transmission != null ? transmission : ""; }

    @NonNull
    @PropertyName("doorsAndSeats")
    public String getDoorsAndSeats() { return doorsAndSeats != null ? doorsAndSeats : ""; }
    public void setDoorsAndSeats(@Nullable String doorsAndSeats) { this.doorsAndSeats = doorsAndSeats != null ? doorsAndSeats : ""; }

    @NonNull
    @PropertyName("vehicleBrand")
    public String getVehicleBrand() { return vehicleBrand != null ? vehicleBrand : ""; }
    public void setVehicleBrand(@Nullable String vehicleBrand) { this.vehicleBrand = vehicleBrand != null ? vehicleBrand : ""; }

    @Nullable
    @PropertyName("vehicleRating")
    public Float getVehicleRating() { return vehicleRating; }
    public void setVehicleRating(@Nullable Float vehicleRating) {
        this.vehicleRating = vehicleRating != null && vehicleRating >= 0 ? vehicleRating : 4.0f;
    }

    @NonNull
    @PropertyName("verificationStatus")
    public String getVerificationStatus() { return verificationStatus != null ? verificationStatus : "pending"; }
    public void setVerificationStatus(@Nullable String verificationStatus) {
        this.verificationStatus = verificationStatus != null ? verificationStatus : "pending";
    }

    @Nullable
    @PropertyName("createdAt")
    public Timestamp getCreatedAt() { return createdAt; }
    public void setCreatedAt(@Nullable Timestamp createdAt) {
        this.createdAt = createdAt != null ? createdAt : Timestamp.now();
    }

    @NonNull
    @PropertyName("documentImageUrl")
    public String getDocumentImageUrl() { return documentImageUrl != null ? documentImageUrl : ""; }
    public void setDocumentImageUrl(@Nullable String documentImageUrl) {
        this.documentImageUrl = documentImageUrl != null ? documentImageUrl : "";
    }

    // Parcelable
    @Override
    public int describeContents() { return 0; }

    @Override
    public void writeToParcel(@NonNull Parcel dest, int flags) {
        dest.writeString(vehicleId);
        dest.writeString(ownerId);
        dest.writeString(vehicleName);
        dest.writeString(vehiclePrice);
        dest.writeString(vehicleSeats);
        dest.writeString(vehicleNumber);
        dest.writeString(vehicleAvailability);
        dest.writeString(vehicleImageUrl);
        dest.writeString(fuelType);
        dest.writeString(maxSpeed);
        dest.writeString(transmission);
        dest.writeString(doorsAndSeats);
        dest.writeString(vehicleBrand);
        dest.writeFloat(vehicleRating != null ? vehicleRating : 4.0f);
        dest.writeString(verificationStatus);
        dest.writeParcelable(createdAt, flags);
        dest.writeString(documentImageUrl);
    }

    @NonNull
    @Override
    public String toString() {
        return "Vehicle{vehicleId='" + vehicleId + "', vehicleName='" + vehicleName + "', brand='" + vehicleBrand +
                "', rating=" + vehicleRating + ", verificationStatus='" + verificationStatus + "'}";
    }
}
```

### src\main\java\com\uit\carrental\Repository\VehicleRepository.java
```java
package com.uit.carrental.Repository;

import com.google.android.gms.tasks.Task;
import com.google.firebase.firestore.CollectionReference;
import com.google.firebase.firestore.DocumentReference;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.firestore.Query;
import com.uit.carrental.Model.Vehicle;

import java.util.HashMap;
import java.util.Map;

public class VehicleRepository {
    private final CollectionReference vehiclesRef;
    private final CollectionReference notificationsRef;

    public VehicleRepository() {
        FirebaseFirestore db = FirebaseFirestore.getInstance();
        vehiclesRef = db.collection("Vehicles");
        notificationsRef = db.collection("Notifications");
    }

    public Task<DocumentReference> addVehicle(Vehicle vehicle) {
        return vehiclesRef.add(vehicle);
    }

    public Task<Void> updateVehicleId(String vehicleId, String documentId) {
        Map<String, Object> data = new HashMap<>();
        data.put("vehicleId", vehicleId);
        return vehiclesRef.document(documentId).update(data);
    }

    public Task<DocumentReference> createAdminNotification(String title, String content, String vehicleId) {
        Map<String, Object> notification = new HashMap<>();
        notification.put("title", title);
        notification.put("content", content);
        notification.put("timestamp", com.google.firebase.Timestamp.now());
        notification.put("status", "unread");
        notification.put("type", "vehicle_verification");
        notification.put("vehicleId", vehicleId);
        notification.put("recipient", "admin");
        return notificationsRef.add(notification);
    }

    public Query getVehiclesForOwner(String ownerId) {
        return vehiclesRef.whereEqualTo("ownerId", ownerId);
    }

    public Query getVerifiedVehicles() {
        return vehiclesRef.whereEqualTo("verificationStatus", "verified")
                .whereEqualTo("vehicleAvailability", "available");
    }
}
```

### src\main\java\com\uit\carrental\Service\Activity\CustomerActivityDetail.java
```java
//package com.uit.carrental.Service.Activity;
//
//import android.content.Intent;
//import android.os.Build;
//import android.os.Bundle;
//import android.os.StrictMode;
//import android.util.Log;
//import android.view.View;
//import android.widget.Button;
//import android.widget.ImageView;
//import android.widget.TextView;
//import android.widget.Toast;
//
//import androidx.annotation.RequiresApi;
//import androidx.appcompat.app.AppCompatActivity;
//
//import com.google.firebase.Timestamp;
//import com.google.firebase.firestore.FirebaseFirestore;
//import com.google.firebase.firestore.QueryDocumentSnapshot;
//import com.squareup.picasso.Picasso;
//import com.uit.carrental.ActivityPages.CustomerMainActivity;
//import com.uit.carrental.Model.User;
//import com.uit.carrental.Model.Vehicle;
//import com.uit.carrental.R;
//import com.uit.carrental.Service.ZaloPay.Api.CreateOrder;
//import com.uit.carrental.Service.ZaloPay.Constant.AppInfo;
//
//import org.json.JSONObject;
//
//import java.text.ParseException;
//import java.text.SimpleDateFormat;
//import java.util.Date;
//import java.util.HashMap;
//import java.util.Map;
//
//import vn.zalopay.sdk.Environment;
//import vn.zalopay.sdk.ZaloPayError;
//import vn.zalopay.sdk.ZaloPaySDK;
//import vn.zalopay.sdk.listeners.PayOrderListener;
//
//public class CustomerActivityDetail extends AppCompatActivity {
//
//    private FirebaseFirestore db;
//    private CreateOrder orderApi;
//    private Intent intent;
//    private String ownerId, vehicleId, ownerName, ownerEmail, ownerPhone, ownerAddress, vehicleName, vehiclePrice, vehiclePickup, vehicleDrop, totalCost; // Thay provideId bằng ownerId
//    private String notiId, notiStatus, orderId;
//    private String amount = "1000";
//    private ImageView vehicleImage;
//    private TextView tvId, tvStatus, name, email, phoneNumber, tvBrandCar, tvGia, tvDiaDiem, pickup, dropoff, tvTotalCost;
//    private Button btnPayment, btnCancel, btnBack;
//
//    @Override
//    protected void onCreate(Bundle savedInstanceState) {
//        super.onCreate(savedInstanceState);
//        setContentView(R.layout.customer_booking_detail);
//        intent = getIntent();
//        notiId = intent.getStringExtra("NotiID");
//
//        init();
//
//        StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
//        StrictMode.setThreadPolicy(policy);
//
//        ZaloPaySDK.init(AppInfo.APP_ID, Environment.SANDBOX);
//
//        db = FirebaseFirestore.getInstance();
//        db.collection("Notification")
//                .whereEqualTo("noti_id", notiId)
//                .get()
//                .addOnSuccessListener(querySnapshot -> {
//                    for (QueryDocumentSnapshot document : querySnapshot) {
//                        Activity temp = new Activity();
//                        temp.setNoti_id(document.getId());
//                        temp.setOwnerId(document.getString("ownerId")); // Thay provider_id bằng ownerId
//                        temp.setVehicle_id(document.getString("vehicle_id"));
//                        temp.setStatus(document.getString("status"));
//                        temp.setPickup(document.getString("pickup"));
//                        temp.setDropoff(document.getString("dropoff"));
//
//                        vehiclePickup = temp.getPickup();
//                        vehicleDrop = temp.getDropoff();
//                        ownerId = temp.getOwnerId(); // Thay provideId bằng ownerId
//                        vehicleId = temp.getVehicle_id();
//                        notiStatus = temp.getStatus();
//
//                        if (document.contains("order_id")) {
//                            orderId = document.getString("order_id");
//                            Log.e("OrderID", "order_id: " + orderId);
//                        }
//
//                        tvId.setText(notiId);
//                        updateStatusAndButton(notiStatus);
//
//                        getUser(ownerId); // Thay provideId bằng ownerId
//                        getVehicle(vehicleId);
//                    }
//                })
//                .addOnFailureListener(e -> Toast.makeText(this, "Không thể lấy thông báo: " + e.getMessage(), Toast.LENGTH_SHORT).show());
//
//        btnPayment.setOnClickListener(v -> {
//            if (orderId != null) {
//                createOrderAndPay();
//            } else {
//                Toast.makeText(this, "Không tìm thấy order_id!", Toast.LENGTH_SHORT).show();
//            }
//        });
//
//        btnBack.setOnClickListener(v -> finish());
//
//        btnCancel.setOnClickListener(v -> handleCancel());
//    }
//
//    private void init() {
//        tvId = findViewById(R.id.txtview_noti_id);
//        tvStatus = findViewById(R.id.txtview_noti_status);
//        email = findViewById(R.id.txtview_noti_email);
//        name = findViewById(R.id.txtview_noti_name);
//        phoneNumber = findViewById(R.id.txtview_noti_phoneNumber);
//        tvBrandCar = findViewById(R.id.txtview_noti_BrandCar);
//        tvDiaDiem = findViewById(R.id.txt_checkout_address);
//        btnPayment = findViewById(R.id.btn_customer_pay);
//        btnCancel = findViewById(R.id.customer_details_btn);
//        btnBack = findViewById(R.id.btn_noti_back);
//        tvGia = findViewById(R.id.txtview_noti_price);
//        pickup = findViewById(R.id.tv_noti_pickup);
//        dropoff = findViewById(R.id.tv_noti_dropoff);
//        tvTotalCost = findViewById(R.id.txtview_noti_totalCost);
//        vehicleImage = findViewById(R.id.img_noti_car);
//    }
//
//    private void updateStatusAndButton(String status) {
//        switch (status) {
//            case "Dang cho":
//                tvStatus.setText("Chưa được xác nhận");
//                btnPayment.setVisibility(View.GONE);
//                break;
//            case "Xac nhan":
//                tvStatus.setText("Đã xác nhận");
//                btnPayment.setVisibility(View.VISIBLE);
//                break;
//            case "Thanh toan":
//                tvStatus.setText("Đang chờ thanh toán");
//                btnPayment.setVisibility(View.VISIBLE);
//                break;
//            case "Khong xac nhan":
//                tvStatus.setText("Không được xác nhận");
//                btnPayment.setVisibility(View.GONE);
//                break;
//            default:
//                tvStatus.setText("Đã thanh toán");
//                btnPayment.setVisibility(View.GONE);
//                break;
//        }
//    }
//
//    @RequiresApi(api = Build.VERSION_CODES.O)
//    private void createOrderAndPay() {
//        try {
//            CreateOrder createOrder = new CreateOrder();
//            JSONObject data = createOrder.createOrder(amount);
//
//            if (data == null) {
//                Toast.makeText(this, "Không thể tạo đơn hàng!", Toast.LENGTH_SHORT).show();
//                return;
//            }
//
//            String code = data.getString("returncode");
//            if ("1".equals(code)) {
//                String token = data.getString("zptranstoken");
//                checkout(token);
//            } else {
//                Toast.makeText(this, "Lỗi tạo đơn hàng!", Toast.LENGTH_SHORT).show();
//            }
//        } catch (Exception e) {
//            Log.e("ZaloPay", "Exception: " + e.getMessage());
//            Toast.makeText(this, "Exception: " + e.getMessage(), Toast.LENGTH_SHORT).show();
//        }
//    }
//
//    private void checkout(String token) {
//        ZaloPaySDK.getInstance().payOrder(this, token, "demozpdk://app", new PayOrderListener() {
//            @Override
//            public void onPaymentSucceeded(String transId, String zpTransToken, String appTransId) {
//                runOnUiThread(() -> {
//                    postPayment();
//                    updateOrderAfterPayment(orderId, ownerId); // Thay provideId bằng ownerId
//                });
//            }
//
//            @Override
//            public void onPaymentCanceled(String zpTransToken, String appTransId) {
//                runOnUiThread(() -> Toast.makeText(CustomerActivityDetail.this, "Bạn đã hủy thanh toán.", Toast.LENGTH_SHORT).show());
//            }
//
//            @Override
//            public void onPaymentError(ZaloPayError zaloPayError, String zpTransToken, String appTransId) {
//                runOnUiThread(() -> Toast.makeText(CustomerActivityDetail.this, "Thanh toán thất bại!", Toast.LENGTH_SHORT).show());
//            }
//        });
//    }
//
//    private void postPayment() {
//        Map<String, Object> updateData = new HashMap<>();
//        updateData.put("payment_status", "paid");
//        updateData.put("status", "processing");
//
//        db.collection("Orders")
//                .document(orderId)
//                .update(updateData)
//                .addOnSuccessListener(unused -> Log.e("Payment Update", "Cập nhật trạng thái thành công!"))
//                .addOnFailureListener(e -> Log.e("Payment Update", "Cập nhật thất bại: " + e.getMessage()));
//    }
//
//    private void updateOrderAfterPayment(String orderId, String ownerId) { // Thay providerId bằng ownerId
//        Map<String, Object> updates = new HashMap<>();
//        updates.put("status", "Đã thanh toán");
//        updates.put("payment_method", "zalo_pay");
//
//        db.collection("Orders").document(orderId)
//                .update(updates)
//                .addOnSuccessListener(aVoid -> {
//                    Toast.makeText(this, "Thanh toán thành công!", Toast.LENGTH_SHORT).show();
//                    createPaymentSuccessNotification(ownerId); // Thay providerId bằng ownerId
//                    Intent intent = new Intent(this, CustomerMainActivity.class);
//                    intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);
//                    startActivity(intent);
//                    finish();
//                })
//                .addOnFailureListener(e -> Toast.makeText(this, "Có lỗi khi cập nhật đơn hàng: " + e.getMessage(), Toast.LENGTH_SHORT).show());
//    }
//
//    private void createPaymentSuccessNotification(String ownerId) { // Thay providerId bằng ownerId
//        Map<String, Object> notification = new HashMap<>();
//        notification.put("user_id", ownerId);
//        notification.put("title", "Thanh toán thành công");
//        notification.put("content", "Khách hàng đã thanh toán đơn thuê xe của bạn.");
//        notification.put("timestamp", new Timestamp(new Date()));
//        notification.put("status", "unread");
//
//        db.collection("Notifications")
//                .add(notification)
//                .addOnFailureListener(e -> Log.e("Notification", "Lỗi tạo thông báo: " + e.getMessage()));
//    }
//
//    private void getUser(String ownerId) { // Thay provideId bằng ownerId
//        db.collection("Users")
//                .whereEqualTo("user_id", ownerId)
//                .get()
//                .addOnSuccessListener(querySnapshot -> {
//                    for (QueryDocumentSnapshot document : querySnapshot) {
//                        User user = document.toObject(User.class);
//                        ownerName = user.getUsername();
//                        ownerEmail = user.getEmail();
//                        ownerPhone = user.getPhoneNumber();
//                        ownerAddress = user.getAddress();
//                        name.setText(ownerName);
//                        email.setText(ownerEmail);
//                        phoneNumber.setText(ownerPhone);
//                        tvDiaDiem.setText(ownerAddress != null ? ownerAddress : "Chưa xác định");
//                    }
//                })
//                .addOnFailureListener(e -> Toast.makeText(this, "Không thể lấy thông tin nhà cung cấp: " + e.getMessage(), Toast.LENGTH_SHORT).show());
//    }
//
//    private void getVehicle(String vehicleId) {
//        db.collection("Vehicles")
//                .whereEqualTo("vehicleId", vehicleId)
//                .get()
//                .addOnSuccessListener(querySnapshot -> {
//                    for (QueryDocumentSnapshot document : querySnapshot) {
//                        Vehicle vehicle = document.toObject(Vehicle.class);
//                        vehicle.setVehicleId(document.getId());
//                        vehicleName = vehicle.getVehicleName();
//                        vehiclePrice = vehicle.getVehiclePrice();
//                        tvBrandCar.setText(vehicleName);
//                        tvGia.setText(vehiclePrice + "/ngày");
//                        pickup.setText(vehiclePickup);
//                        dropoff.setText(vehicleDrop);
//                        totalCost = calculate(vehiclePickup, vehicleDrop);
//                        tvTotalCost.setText(totalCost);
//                        amount = totalCost;
//
//                        if (!vehicle.getVehicleImageUrl().isEmpty()) {
//                            Picasso.get().load(vehicle.getVehicleImageUrl()).into(vehicleImage);
//                        }
//
//                        ownerId = vehicle.getOwnerId(); // Đã đúng với model Vehicle
//                        getUser(ownerId); // Thay provideId bằng ownerId
//                    }
//                })
//                .addOnFailureListener(e -> Toast.makeText(this, "Không thể lấy thông tin xe: " + e.getMessage(), Toast.LENGTH_SHORT).show());
//    }
//
//    private String calculate(String startDate, String endDate) {
//        try {
//            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
//            Date start = sdf.parse(startDate);
//            Date end = sdf.parse(endDate);
//
//            long diffInMillies = end.getTime() - start.getTime();
//            long daysBetween = diffInMillies / (1000 * 60 * 60 * 24);
//
//            if (daysBetween <= 0) {
//                Toast.makeText(this, "Ngày trả phải sau ngày nhận!", Toast.LENGTH_SHORT).show();
//                return "0";
//            }
//
//            String priceText = tvGia.getText().toString().replace("/ngày", "");
//            int pricePerDay = Integer.parseInt(priceText.replaceAll("[^0-9]", ""));
//            long totalPrice = pricePerDay * daysBetween;
//
//            Log.e("Total Days", String.valueOf(daysBetween));
//            Log.e("Total Price", String.valueOf(totalPrice));
//
//            return String.valueOf(totalPrice);
//        } catch (ParseException e) {
//            e.printStackTrace();
//            Toast.makeText(this, "Định dạng ngày không hợp lệ!", Toast.LENGTH_SHORT).show();
//            return "0";
//        }
//    }
//
//    private void handleCancel() {
//        Map<String, Object> updates = new HashMap<>();
//        updates.put("status", "cancelled");
//
//        db.collection("Notification").document(notiId)
//                .update(updates)
//                .addOnSuccessListener(aVoid -> {
//                    Toast.makeText(this, "Đã hủy đơn đặt xe", Toast.LENGTH_SHORT).show();
//                    finish();
//                })
//                .addOnFailureListener(e -> Toast.makeText(this, "Lỗi hủy đơn: " + e.getMessage(), Toast.LENGTH_SHORT).show());
//    }
//
//    @Override
//    protected void onNewIntent(Intent intent) {
//        super.onNewIntent(intent);
//        ZaloPaySDK.getInstance().onResult(intent);
//    }
//}
```

### src\main\java\com\uit\carrental\Service\Activity\OwnerActivityDetail.java
```java
package com.uit.carrental.Service.Activity;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

import com.google.firebase.Timestamp;
import com.google.firebase.firestore.FirebaseFirestore;
import com.squareup.picasso.Picasso;
import com.uit.carrental.ActivityPages.OwnerMainActivity;
import com.uit.carrental.Model.Booking;
import com.uit.carrental.Model.User;
import com.uit.carrental.Model.Vehicle;
import com.uit.carrental.R;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;

public class OwnerActivityDetail extends AppCompatActivity {

    private static final String TAG = "OwnerActivityDetail";

    private FirebaseFirestore db;
    private String bookingId, vehicleId;
    private Booking booking;
    private Vehicle vehicle;
    private User customer;
    private ImageView vehicleImage, btnBack;
    private TextView tvId, tvName, tvEmail, tvPhoneNumber, tvStatus, tvBrandCar, tvPrice, tvAddress, tvPickup, tvDropoff, tvTotalCost;
    private Button btnConfirm, btnReject;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.owner_booking_detail);
        if (getSupportActionBar() != null) {
            getSupportActionBar().hide();
        }

        bookingId = getIntent().getStringExtra("NotiID");
        if (bookingId == null) {
            Toast.makeText(this, "Không tìm thấy yêu cầu", Toast.LENGTH_SHORT).show();
            finish();
            return;
        }

        initViews();
        initFirebase();
        loadBookingData();

        btnBack.setOnClickListener(v -> {
            startActivity(new Intent(this, OwnerMainActivity.class));
            finish();
        });

        btnConfirm.setOnClickListener(v -> confirmBooking());
        btnReject.setOnClickListener(v -> rejectBooking());
    }

    private void initViews() {
        tvId = findViewById(R.id.txtview_noti_id);
        tvName = findViewById(R.id.txtview_noti_name);
        tvEmail = findViewById(R.id.txtview_noti_email);
        tvPhoneNumber = findViewById(R.id.txtview_noti_phoneNumber);
        tvStatus = findViewById(R.id.txtview_noti_status);
        tvBrandCar = findViewById(R.id.txtview_noti_BrandCar);
        tvPrice = findViewById(R.id.txtview_noti_price);
        tvAddress = findViewById(R.id.txt_checkout_address);
        tvPickup = findViewById(R.id.tv_noti_pickup);
        tvDropoff = findViewById(R.id.tv_noti_dropoff);
        tvTotalCost = findViewById(R.id.txtview_noti_totalCost);
        btnConfirm = findViewById(R.id.btn_noti_XacNhan);
        btnReject = findViewById(R.id.btn_noti_huy);
        btnBack = findViewById(R.id.btn_noti_back);
        vehicleImage = findViewById(R.id.img_noti_car);
    }

    private void initFirebase() {
        db = FirebaseFirestore.getInstance();
    }

    private void loadBookingData() {
        db.collection("Bookings").document(bookingId)
                .get()
                .addOnSuccessListener(document -> {
                    if (document.exists()) {
                        booking = document.toObject(Booking.class);
                        if (booking != null) {
                            vehicleId = booking.getVehicleId();
                            tvId.setText(bookingId);
                            updateStatusView();
                            loadVehicleData();
                            loadCustomerData();
                            updateTimeAndPrice();
                        } else {
                            Toast.makeText(this, "Không thể đọc dữ liệu yêu cầu", Toast.LENGTH_SHORT).show();
                            finish();
                        }
                    } else {
                        Toast.makeText(this, "Yêu cầu không tồn tại", Toast.LENGTH_SHORT).show();
                        finish();
                    }
                })
                .addOnFailureListener(e -> {
                    Log.e(TAG, "Lỗi tải dữ liệu yêu cầu: " + e.getMessage());
                    Toast.makeText(this, "Lỗi tải: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                    finish();
                });
    }

    private void updateStatusView() {
        String status = booking.getStatus();
        switch (status) {
            case "pending":
                tvStatus.setText("Chưa được xác nhận");
                break;
            case "confirmed":
                tvStatus.setText("Đã xác nhận");
                btnConfirm.setEnabled(false);
                btnReject.setEnabled(false);
                break;
            case "rejected":
                tvStatus.setText("Không được xác nhận");
                btnConfirm.setEnabled(false);
                btnReject.setEnabled(false);
                break;
            case "paid":
                tvStatus.setText("Đã thanh toán");
                btnConfirm.setEnabled(false);
                btnReject.setEnabled(false);
                break;
            case "completed":
                tvStatus.setText("Đã hoàn thành");
                btnConfirm.setEnabled(false);
                btnReject.setEnabled(false);
                break;
            default:
                tvStatus.setText(status);
        }
    }

    private void loadVehicleData() {
        db.collection("Vehicles").document(vehicleId)
                .get()
                .addOnSuccessListener(document -> {
                    if (document.exists()) {
                        vehicle = document.toObject(Vehicle.class);
                        if (vehicle != null) {
                            tvBrandCar.setText(vehicle.getVehicleName());
                            tvPrice.setText(vehicle.getVehiclePrice());
                            if (!vehicle.getVehicleImageUrl().isEmpty()) {
                                Picasso.get().load(vehicle.getVehicleImageUrl()).into(vehicleImage);
                            }
                        }
                    }
                })
                .addOnFailureListener(e -> {
                    Log.e(TAG, "Lỗi tải dữ liệu xe: " + e.getMessage());
                    Toast.makeText(this, "Lỗi tải xe: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                });
    }

    private void loadCustomerData() {
        db.collection("Users").document(booking.getCustomerId())
                .get()
                .addOnSuccessListener(document -> {
                    if (document.exists()) {
                        customer = document.toObject(User.class);
                        if (customer != null) {
                            tvName.setText(customer.getUsername());
                            tvEmail.setText(customer.getEmail());
                            tvPhoneNumber.setText(customer.getPhoneNumber());
                            tvAddress.setText(customer.getAddress() != null ? customer.getAddress() : "Không có địa chỉ");
                        }
                    }
                })
                .addOnFailureListener(e -> {
                    Log.e(TAG, "Lỗi tải dữ liệu khách hàng: " + e.getMessage());
                    Toast.makeText(this, "Lỗi tải khách hàng: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                });
    }

    private void updateTimeAndPrice() {
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm", Locale.getDefault());
        tvPickup.setText(sdf.format(booking.getStartTime().toDate()));
        tvDropoff.setText(sdf.format(booking.getEndTime().toDate()));
        tvTotalCost.setText(String.format(Locale.getDefault(), "%,d VNĐ", booking.getTotalAmount()));
    }

    private void confirmBooking() {
        // Tính thời gian bảo trì (1 ngày sau endTime)
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(booking.getEndTime().toDate());
        calendar.add(Calendar.DAY_OF_MONTH, 1);
        Timestamp maintenanceEndTime = new Timestamp(calendar.getTime());

        Map<String, Object> updates = new HashMap<>();
        updates.put("status", "confirmed");
        updates.put("updatedAt", Timestamp.now());
        updates.put("maintenanceEndTime", maintenanceEndTime);

        db.collection("Bookings").document(bookingId)
                .update(updates)
                .addOnSuccessListener(aVoid -> {
                    sendCustomerNotification("Yêu cầu được xác nhận", "Yêu cầu đặt xe của bạn đã được xác nhận.");
                    Toast.makeText(this, "Đã xác nhận yêu cầu", Toast.LENGTH_SHORT).show();
                    createOrder();
                    finish();
                })
                .addOnFailureListener(e -> {
                    Log.e(TAG, "Lỗi xác nhận yêu cầu: " + e.getMessage());
                    Toast.makeText(this, "Lỗi xác nhận: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                });
    }

    private void rejectBooking() {
        Map<String, Object> updates = new HashMap<>();
        updates.put("status", "rejected");
        updates.put("updatedAt", Timestamp.now());

        db.collection("Bookings").document(bookingId)
                .update(updates)
                .addOnSuccessListener(aVoid -> {
                    sendCustomerNotification("Yêu cầu bị từ chối", "Yêu cầu đặt xe của bạn đã bị từ chối.");
                    Toast.makeText(this, "Đã từ chối yêu cầu", Toast.LENGTH_SHORT).show();
                    finish();
                })
                .addOnFailureListener(e -> {
                    Log.e(TAG, "Lỗi từ chối yêu cầu: " + e.getMessage());
                    Toast.makeText(this, "Lỗi từ chối: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                });
    }

    private void createOrder() {
        Map<String, Object> orderData = new HashMap<>();
        orderData.put("customer_id", booking.getCustomerId());
        orderData.put("provider_id", vehicle.getOwnerId());
        orderData.put("vehicle_id", vehicleId);
        orderData.put("pickup_time", booking.getStartTime());
        orderData.put("dropoff_time", booking.getEndTime());
        orderData.put("total_amount", booking.getTotalAmount());
        orderData.put("status", "pending");
        orderData.put("payment_status", "pending");
        orderData.put("created_at", Timestamp.now());

        db.collection("Orders").add(orderData)
                .addOnSuccessListener(orderRef -> {
                    Log.d(TAG, "Order created: " + orderRef.getId());
                    Map<String, Object> updateData = new HashMap<>();
                    updateData.put("order_id", orderRef.getId());
                    db.collection("Bookings").document(bookingId)
                            .update(updateData)
                            .addOnSuccessListener(aVoid -> Log.d(TAG, "order_id updated in booking"))
                            .addOnFailureListener(e -> Log.e(TAG, "Failed to update booking", e));
                })
                .addOnFailureListener(e -> Log.e(TAG, "Failed to create order", e));
    }

    private void sendCustomerNotification(String title, String content) {
        Map<String, Object> notification = new HashMap<>();
        notification.put("recipient", booking.getCustomerId());
        notification.put("title", title);
        notification.put("content", content);
        notification.put("timestamp", Timestamp.now());
        notification.put("status", "unread");
        notification.put("type", "booking_status");
        notification.put("bookingId", bookingId);
        notification.put("vehicleId", vehicleId);

        db.collection("Notifications")
                .add(notification)
                .addOnSuccessListener(documentReference -> Log.d(TAG, "Gửi thông báo thành công"))
                .addOnFailureListener(e -> Log.e(TAG, "Lỗi gửi thông báo: " + e.getMessage()));
    }
}

```

### src\main\java\com\uit\carrental\Service\Api\CloudinaryApi.java
```java
package com.uit.carrental.Service.Api;

import android.content.Context;
import android.net.Uri;
import android.util.Log;

import com.cloudinary.android.MediaManager;
import com.cloudinary.android.callback.ErrorInfo;
import com.cloudinary.android.callback.UploadCallback;

import java.util.HashMap;
import java.util.Map;

public class CloudinaryApi {

    private static final String CLOUD_NAME = "drc8ylzsd";
    private static final String API_KEY = "186315811678634";
    private static final String UPLOAD_PRESET = "car_rent_unsigned";

    private static boolean initialized = false;

    public static void init(Context context) {
        if (initialized) return;

        Map<String, Object> config = new HashMap<>();
        config.put("cloud_name", CLOUD_NAME);
        config.put("api_key", API_KEY);
        config.put("unsigned", true);
        MediaManager.init(context, config);
        initialized = true;
    }

    public static void uploadImage(Context context, Uri imageUri, UploadCallbackCustom callback) {
        init(context);

        MediaManager.get().upload(imageUri)
                .option("upload_preset", UPLOAD_PRESET)
                .option("unsigned", true) // THÊM DÒNG NÀY !!!
                .callback(new UploadCallback() {
                    @Override
                    public void onStart(String requestId) {
                        Log.d("Cloudinary", "Upload Started: " + requestId);
                    }

                    @Override
                    public void onProgress(String requestId, long bytes, long totalBytes) {
                        Log.d("Cloudinary", "Progress: " + bytes + "/" + totalBytes);
                    }

                    @Override
                    public void onSuccess(String requestId, Map resultData) {
                        String url = (String) resultData.get("secure_url");
                        if (callback != null) callback.onSuccess(url);
                    }

                    @Override
                    public void onError(String requestId, ErrorInfo error) {
                        if (callback != null) callback.onFailure(new Exception(error.getDescription()));
                    }

                    @Override
                    public void onReschedule(String requestId, ErrorInfo error) {
                        if (callback != null) callback.onFailure(new Exception(error.getDescription()));
                    }
                })
                .dispatch();
    }


    public interface UploadCallbackCustom {
        void onSuccess(String url);
        void onFailure(Exception e);
    }
}

```

### src\main\java\com\uit\carrental\Service\Booking\CarDetailActivity.java
```java
package com.uit.carrental.Service.Booking;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;

import androidx.appcompat.app.AppCompatActivity;

import com.uit.carrental.R;


public class CarDetailActivity extends AppCompatActivity {
    Button btnBook;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        setContentView(R.layout.activity_detail_car);
        if (getSupportActionBar() != null) {
            getSupportActionBar().hide();
        }
        overridePendingTransition(R.anim.anim_in_right,R.anim.anim_out_left);

        btnBook =findViewById(R.id.btn_book);
        btnBook.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Intent it1=new Intent(CarDetailActivity.this, ScheduleSelect.class);
            }
        });
    }

}

```

### src\main\java\com\uit\carrental\Service\Booking\CustomerBookingDetailActivity.java
```java
package com.uit.carrental.Service.Booking;

import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;
import com.google.firebase.Timestamp;
import com.google.firebase.firestore.FirebaseFirestore;
import com.squareup.picasso.Picasso;
import com.uit.carrental.ActivityPages.CustomerMainActivity;
import com.uit.carrental.Model.Booking;
import com.uit.carrental.Model.User;
import com.uit.carrental.Model.Vehicle;
import com.uit.carrental.R;
import com.uit.carrental.Service.ZaloPay.Api.CreateOrder;
import com.uit.carrental.Service.ZaloPay.Constant.AppInfo;
import org.json.JSONObject;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import vn.zalopay.sdk.Environment;
import vn.zalopay.sdk.ZaloPayError;
import vn.zalopay.sdk.ZaloPaySDK;
import vn.zalopay.sdk.listeners.PayOrderListener;

public class CustomerBookingDetailActivity extends AppCompatActivity {

    private static final String TAG = "CustomerBookingDetailActivity";
    private ImageView imgBack, imgCar;
    private TextView tvBookingId, tvVehicleName, tvOwnerName, tvOwnerEmail, tvOwnerPhone, tvPickupLocation, tvPickupTime, tvDropoffTime, tvPrice, tvTotalCost, tvStatus;
    private Button btnPay, btnCancel;
    private FirebaseFirestore db;
    private String bookingId;
    private Booking booking;
    private String orderId;
    private final ExecutorService executorService = Executors.newSingleThreadExecutor();
    private final Handler mainHandler = new Handler(Looper.getMainLooper());

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.customer_booking_detail);

        db = FirebaseFirestore.getInstance();
        bookingId = getIntent().getStringExtra("bookingId");
        if (bookingId == null || bookingId.isEmpty()) {
            Toast.makeText(this, "Không tìm thấy bookingId", Toast.LENGTH_SHORT).show();
            finish();
            return;
        }

        // Khởi tạo ZaloPay SDK
        ZaloPaySDK.init(AppInfo.APP_ID, Environment.SANDBOX);

        initViews();
        loadBookingDetails();
        setupButtons();
    }

    private void initViews() {
        imgBack = findViewById(R.id.btn_noti_back);
        imgCar = findViewById(R.id.img_noti_car);
        tvBookingId = findViewById(R.id.txtview_noti_id);
        tvVehicleName = findViewById(R.id.txtview_noti_BrandCar);
        tvOwnerName = findViewById(R.id.txtview_noti_name);
        tvOwnerEmail = findViewById(R.id.txtview_noti_email);
        tvOwnerPhone = findViewById(R.id.txtview_noti_phoneNumber);
        tvPickupLocation = findViewById(R.id.txt_checkout_address);
        tvPickupTime = findViewById(R.id.tv_noti_pickup);
        tvDropoffTime = findViewById(R.id.tv_noti_dropoff);
        tvPrice = findViewById(R.id.txtview_noti_price);
        tvTotalCost = findViewById(R.id.txtview_noti_totalCost);
        tvStatus = findViewById(R.id.txtview_noti_status);
        btnPay = findViewById(R.id.btn_customer_pay);
        btnCancel = findViewById(R.id.customer_details_btn);
    }

    private void loadBookingDetails() {
        db.collection("Bookings").document(bookingId)
                .get()
                .addOnSuccessListener(document -> {
                    if (document.exists()) {
                        booking = document.toObject(Booking.class);
                        if (booking != null) {
                            tvBookingId.setText(booking.getBookingId());
                            if (document.contains("orderId")) {
                                orderId = document.getString("orderId");
                                Log.d(TAG, "orderId: " + orderId);
                            } else {
                                Toast.makeText(this, "Không tìm thấy orderId trong booking", Toast.LENGTH_SHORT).show();
                                finish();
                                return;
                            }

                            // Lấy thông tin xe
                            db.collection("Vehicles").document(booking.getVehicleId())
                                    .get()
                                    .addOnSuccessListener(vehicleDoc -> {
                                        if (vehicleDoc.exists()) {
                                            Vehicle vehicle = vehicleDoc.toObject(Vehicle.class);
                                            if (vehicle != null) {
                                                tvVehicleName.setText(vehicle.getVehicleName());
                                                tvPrice.setText(vehicle.getVehiclePrice());
                                                if (!vehicle.getVehicleImageUrl().isEmpty()) {
                                                    Picasso.get().load(vehicle.getVehicleImageUrl()).into(imgCar);
                                                }
                                            }
                                        }
                                    })
                                    .addOnFailureListener(e -> Log.e(TAG, "Lỗi lấy vehicle: " + e.getMessage()));

                            // Lấy thông tin owner
                            db.collection("Users").document(booking.getOwnerId())
                                    .get()
                                    .addOnSuccessListener(userDoc -> {
                                        if (userDoc.exists()) {
                                            User owner = userDoc.toObject(User.class);
                                            if (owner != null) {
                                                tvOwnerName.setText(owner.getUsername());
                                                tvOwnerEmail.setText(owner.getEmail());
                                                tvOwnerPhone.setText(owner.getPhoneNumber());
                                            }
                                        }
                                    })
                                    .addOnFailureListener(e -> Log.e(TAG, "Lỗi lấy owner: " + e.getMessage()));

                            tvPickupLocation.setText(booking.getPickupLocation());
                            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm", Locale.getDefault());
                            tvPickupTime.setText(booking.getStartTime() != null ? sdf.format(booking.getStartTime().toDate()) : "");
                            tvDropoffTime.setText(booking.getEndTime() != null ? sdf.format(booking.getEndTime().toDate()) : "");
                            DecimalFormat formatter = new DecimalFormat("#,### VNĐ");
                            tvTotalCost.setText(formatter.format(booking.getTotalAmount()));
                            tvStatus.setText(getStatusText(booking.getStatus()));

                            // Hiển thị nút thanh toán
                            btnPay.setVisibility(booking.getStatus().equals("confirmed") && booking.getPaymentStatus().equals("unpaid") ? View.VISIBLE : View.GONE);
                        } else {
                            Toast.makeText(this, "Không thể ánh xạ dữ liệu booking", Toast.LENGTH_SHORT).show();
                            finish();
                        }
                    } else {
                        Toast.makeText(this, "Không tìm thấy booking", Toast.LENGTH_SHORT).show();
                        finish();
                    }
                })
                .addOnFailureListener(e -> {
                    Toast.makeText(this, "Lỗi tải chi tiết: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                    finish();
                });
    }

    private String getStatusText(String status) {
        switch (status) {
            case "pending": return "Chưa xác nhận";
            case "confirmed": return "Đã xác nhận";
            case "rejected": return "Bị từ chối";
            case "paid": return "Đã thanh toán";
            case "completed": return "Đã hoàn thành";
            case "cancelled": return "Đã hủy";
            default: return status;
        }
    }

    private void setupButtons() {
        imgBack.setOnClickListener(v -> finish());

        btnPay.setOnClickListener(v -> {
            if (orderId != null && !orderId.isEmpty()) {
                createOrderAndPay();
            } else {
                Toast.makeText(this, "Không tìm thấy orderId!", Toast.LENGTH_SHORT).show();
            }
        });

        btnCancel.setOnClickListener(v -> {
            Map<String, Object> updates = new HashMap<>();
            updates.put("status", "cancelled");
            updates.put("updatedAt", Timestamp.now());

            db.collection("Bookings").document(bookingId)
                    .update(updates)
                    .addOnSuccessListener(aVoid -> {
                        createNotification(booking.getOwnerId(), "Booking #" + bookingId + " đã bị hủy", "status_update");
                        Toast.makeText(this, "Hủy đơn hàng thành công", Toast.LENGTH_SHORT).show();
                        finish();
                    })
                    .addOnFailureListener(e -> Toast.makeText(this, "Lỗi hủy đơn hàng: " + e.getMessage(), Toast.LENGTH_SHORT).show());
        });
    }

    private void createOrderAndPay() {
        long amount = (long) booking.getTotalAmount();
        if (amount <= 0) {
            Toast.makeText(this, "Số tiền không hợp lệ!", Toast.LENGTH_SHORT).show();
            return;
        }

        executorService.execute(() -> {
            try {
                CreateOrder createOrder = new CreateOrder();
                JSONObject data = createOrder.createOrder(String.valueOf(amount));
                mainHandler.post(() -> {
                    if (data == null) {
                        Toast.makeText(this, "Không thể tạo đơn hàng!", Toast.LENGTH_SHORT).show();
                        Log.e(TAG, "ZaloPay response: null");
                        return;
                    }
                    try {
                        Log.d(TAG, "ZaloPay response: " + data.toString());
                        String code = data.getString("returncode");
                        if ("1".equals(code)) {
                            String token = data.getString("zptranstoken");
                            checkout(token);
                        } else {
                            Toast.makeText(this, "Lỗi tạo đơn hàng: returncode " + code, Toast.LENGTH_SHORT).show();
                            Log.e(TAG, "ZaloPay returncode: " + code);
                        }
                    } catch (Exception e) {
                        Toast.makeText(this, "Lỗi xử lý response: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                        Log.e(TAG, "ZaloPay Exception: " + e.getMessage());
                    }
                });
            } catch (Exception e) {
                mainHandler.post(() -> {
                    Toast.makeText(this, "Lỗi tạo đơn hàng: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                    Log.e(TAG, "ZaloPay Exception: " + e.getMessage());
                });
            }
        });
    }

    private void checkout(String token) {
        ZaloPaySDK.getInstance().payOrder(this, token, "demozpdk://app", new PayOrderListener() {
            @Override
            public void onPaymentSucceeded(String transId, String zpTransToken, String appTransId) {
                runOnUiThread(() -> {
                    postPayment(transId, appTransId);
                });
            }

            @Override
            public void onPaymentCanceled(String zpTransToken, String appTransId) {
                runOnUiThread(() -> Toast.makeText(CustomerBookingDetailActivity.this, "Bạn đã hủy thanh toán.", Toast.LENGTH_SHORT).show());
            }

            @Override
            public void onPaymentError(ZaloPayError zaloPayError, String zpTransToken, String appTransId) {
                runOnUiThread(() -> Toast.makeText(CustomerBookingDetailActivity.this, "Thanh toán thất bại: " + zaloPayError, Toast.LENGTH_SHORT).show());
            }
        });
    }

    private void postPayment(String transId, String appTransId) {
        Map<String, Object> updates = new HashMap<>();
        updates.put("paymentStatus", "paid");
        updates.put("paymentMethod", "ZaloPay");
        updates.put("paymentId", transId);
        updates.put("status", "paid");
        updates.put("updatedAt", Timestamp.now());
        updates.put("orderId", orderId);

        db.collection("Bookings").document(bookingId)
                .update(updates)
                .addOnSuccessListener(aVoid -> {
                    createPaymentSuccessNotification(booking.getOwnerId());
                    Toast.makeText(this, "Thanh toán thành công!", Toast.LENGTH_SHORT).show();
                    Intent intent = new Intent(CustomerBookingDetailActivity.this, CustomerMainActivity.class);
                    intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);
                    startActivity(intent);
                    finish();
                })
                .addOnFailureListener(e -> {
                    Log.e(TAG, "Lỗi cập nhật booking: " + e.getMessage());
                    Toast.makeText(this, "Lỗi cập nhật booking: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                });
    }

    private void createPaymentSuccessNotification(String ownerId) {
        Map<String, Object> notification = new HashMap<>();
        notification.put("userId", ownerId);
        notification.put("title", "Thanh toán thành công");
        notification.put("message", "Khách hàng đã thanh toán đơn thuê xe #" + bookingId);
        notification.put("type", "payment_success");
        notification.put("bookingId", bookingId);
        notification.put("createdAt", Timestamp.now());
        notification.put("isRead", false);
        notification.put("notificationId", "");

        db.collection("Notifications")
                .add(notification)
                .addOnSuccessListener(documentReference -> {
                    String notificationId = documentReference.getId();
                    db.collection("Notifications").document(notificationId)
                            .update("notificationId", notificationId);
                    Log.d(TAG, "Tạo thông báo thanh toán thành công: " + notificationId);
                })
                .addOnFailureListener(e -> Log.e(TAG, "Lỗi tạo thông báo: " + e.getMessage()));
    }

    private void createNotification(String userId, String message, String type) {
        Map<String, Object> notification = new HashMap<>();
        notification.put("userId", userId);
        notification.put("title", type.equals("payment_success") ? "Thanh toán thành công" : "Cập nhật trạng thái");
        notification.put("message", message);
        notification.put("type", type);
        notification.put("bookingId", bookingId);
        notification.put("createdAt", Timestamp.now());
        notification.put("isRead", false);
        notification.put("notificationId", "");

        db.collection("Notifications")
                .add(notification)
                .addOnSuccessListener(documentReference -> {
                    String notificationId = documentReference.getId();
                    db.collection("Notifications").document(notificationId)
                            .update("notificationId", notificationId);
                    Log.d(TAG, "Tạo thông báo: " + notificationId);
                })
                .addOnFailureListener(e -> Log.e(TAG, "Lỗi tạo thông báo: " + e.getMessage()));
    }

    @Override
    protected void onNewIntent(Intent intent) {
        super.onNewIntent(intent);
        ZaloPaySDK.getInstance().onResult(intent);
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        executorService.shutdown();
    }
}

```

### src\main\java\com\uit\carrental\Service\Booking\OwnerBookingDetailActivity.java
```java
package com.uit.carrental.Service.Booking;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;
import com.google.firebase.Timestamp;
import com.google.firebase.firestore.FirebaseFirestore;
import com.squareup.picasso.Picasso;
import com.uit.carrental.ActivityPages.OwnerMainActivity;
import com.uit.carrental.Model.Booking;
import com.uit.carrental.Model.Notification;
import com.uit.carrental.Model.User;
import com.uit.carrental.Model.Vehicle;
import com.uit.carrental.R;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;

public class OwnerBookingDetailActivity extends AppCompatActivity {

    private static final String TAG = "OwnerBookingDetailActivity";
    private FirebaseFirestore db;
    private String bookingId, vehicleId;
    private Booking booking;
    private Vehicle vehicle;
    private User customer;
    private ImageView vehicleImage, btnBack;
    private TextView tvId, tvName, tvEmail, tvPhoneNumber, tvStatus, tvBrandCar, tvPrice, tvAddress, tvPickup, tvDropoff, tvTotalCost;
    private Button btnConfirm, btnReject;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.owner_booking_detail);
        if (getSupportActionBar() != null) {
            getSupportActionBar().hide();
        }

        bookingId = getIntent().getStringExtra("bookingId");
        if (bookingId == null) {
            Toast.makeText(this, "Không tìm thấy yêu cầu", Toast.LENGTH_SHORT).show();
            finish();
            return;
        }

        initViews();
        initFirebase();
        loadBookingData();

        btnBack.setOnClickListener(v -> finish());
        btnConfirm.setOnClickListener(v -> confirmBooking());
        btnReject.setOnClickListener(v -> rejectBooking());
    }

    private void initViews() {
        tvId = findViewById(R.id.txtview_noti_id);
        tvName = findViewById(R.id.txtview_noti_name);
        tvEmail = findViewById(R.id.txtview_noti_email);
        tvPhoneNumber = findViewById(R.id.txtview_noti_phoneNumber);
        tvStatus = findViewById(R.id.txtview_noti_status);
        tvBrandCar = findViewById(R.id.txtview_noti_BrandCar);
        tvPrice = findViewById(R.id.txtview_noti_price);
        tvAddress = findViewById(R.id.txt_checkout_address);
        tvPickup = findViewById(R.id.tv_noti_pickup);
        tvDropoff = findViewById(R.id.tv_noti_dropoff);
        tvTotalCost = findViewById(R.id.txtview_noti_totalCost);
        btnConfirm = findViewById(R.id.btn_noti_XacNhan);
        btnReject = findViewById(R.id.btn_noti_huy);
        btnBack = findViewById(R.id.btn_noti_back);
        vehicleImage = findViewById(R.id.img_noti_car);
    }

    private void initFirebase() {
        db = FirebaseFirestore.getInstance();
    }

    private void loadBookingData() {
        db.collection("Bookings").document(bookingId)
                .get()
                .addOnSuccessListener(document -> {
                    if (document.exists()) {
                        booking = document.toObject(Booking.class);
                        if (booking != null) {
                            vehicleId = booking.getVehicleId();
                            tvId.setText(bookingId);
                            updateStatusView();
                            loadVehicleData();
                            loadCustomerData();
                            updateTimeAndPrice();
                        } else {
                            Toast.makeText(this, "Không thể đọc dữ liệu yêu cầu", Toast.LENGTH_SHORT).show();
                            finish();
                        }
                    } else {
                        Toast.makeText(this, "Yêu cầu không tồn tại", Toast.LENGTH_SHORT).show();
                        finish();
                    }
                })
                .addOnFailureListener(e -> {
                    Log.e(TAG, "Lỗi tải dữ liệu yêu cầu: " + e.getMessage());
                    Toast.makeText(this, "Lỗi tải: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                    finish();
                });
    }

    private void updateStatusView() {
        String status = booking.getStatus();
        switch (status) {
            case "pending":
                tvStatus.setText("Chưa được xác nhận");
                break;
            case "confirmed":
                tvStatus.setText("Đã xác nhận");
                btnConfirm.setEnabled(false);
                btnReject.setEnabled(false);
                break;
            case "rejected":
                tvStatus.setText("Không được xác nhận");
                btnConfirm.setEnabled(false);
                btnReject.setEnabled(false);
                break;
            case "paid":
                tvStatus.setText("Đã thanh toán");
                btnConfirm.setEnabled(false);
                btnReject.setEnabled(false);
                break;
            case "completed":
                tvStatus.setText("Đã hoàn thành");
                btnConfirm.setEnabled(false);
                btnReject.setEnabled(false);
                break;
            default:
                tvStatus.setText(status);
        }
    }

    private void loadVehicleData() {
        db.collection("Vehicles").document(vehicleId)
                .get()
                .addOnSuccessListener(document -> {
                    if (document.exists()) {
                        vehicle = document.toObject(Vehicle.class);
                        if (vehicle != null) {
                            tvBrandCar.setText(vehicle.getVehicleName());
                            tvPrice.setText(vehicle.getVehiclePrice());
                            if (!vehicle.getVehicleImageUrl().isEmpty()) {
                                Picasso.get().load(vehicle.getVehicleImageUrl()).into(vehicleImage);
                            }
                        }
                    }
                })
                .addOnFailureListener(e -> {
                    Log.e(TAG, "Lỗi tải dữ liệu xe: " + e.getMessage());
                    Toast.makeText(this, "Lỗi tải xe: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                });
    }

    private void loadCustomerData() {
        db.collection("Users").document(booking.getCustomerId())
                .get()
                .addOnSuccessListener(document -> {
                    if (document.exists()) {
                        customer = document.toObject(User.class);
                        if (customer != null) {
                            tvName.setText(customer.getUsername());
                            tvEmail.setText(customer.getEmail());
                            tvPhoneNumber.setText(customer.getPhoneNumber());
                            tvAddress.setText(booking.getPickupLocation());
                        }
                    }
                })
                .addOnFailureListener(e -> {
                    Log.e(TAG, "Lỗi tải dữ liệu khách hàng: " + e.getMessage());
                    Toast.makeText(this, "Lỗi tải khách hàng: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                });
    }

    private void updateTimeAndPrice() {
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm", Locale.getDefault());
        tvPickup.setText(sdf.format(booking.getStartTime().toDate()));
        tvDropoff.setText(sdf.format(booking.getEndTime().toDate()));
        tvTotalCost.setText(String.format(Locale.getDefault(), "%,d VNĐ", booking.getTotalAmount()));
    }

    private void confirmBooking() {
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(booking.getEndTime().toDate());
        calendar.add(Calendar.DAY_OF_MONTH, 1);
        Timestamp maintenanceEndTime = new Timestamp(calendar.getTime());

        Map<String, Object> updates = new HashMap<>();
        updates.put("status", "confirmed");
        updates.put("updatedAt", Timestamp.now());
        updates.put("maintenanceEndTime", maintenanceEndTime);

        db.collection("Bookings").document(bookingId)
                .update(updates)
                .addOnSuccessListener(aVoid -> {
                    createNotification(booking.getCustomerId(), "Yêu cầu đặt xe #" + bookingId + " đã được xác nhận", "status_update");
                    Toast.makeText(this, "Đã xác nhận yêu cầu", Toast.LENGTH_SHORT).show();
                    createOrder();
                    finish();
                })
                .addOnFailureListener(e -> {
                    Log.e(TAG, "Lỗi xác nhận yêu cầu: " + e.getMessage());
                    Toast.makeText(this, "Lỗi xác nhận: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                });
    }

    private void rejectBooking() {
        Map<String, Object> updates = new HashMap<>();
        updates.put("status", "rejected");
        updates.put("updatedAt", Timestamp.now());

        db.collection("Bookings").document(bookingId)
                .update(updates)
                .addOnSuccessListener(aVoid -> {
                    createNotification(booking.getCustomerId(), "Yêu cầu đặt xe #" + bookingId + " đã bị từ chối", "status_update");
                    Toast.makeText(this, "Đã từ chối yêu cầu", Toast.LENGTH_SHORT).show();
                    finish();
                })
                .addOnFailureListener(e -> {
                    Log.e(TAG, "Lỗi từ chối yêu cầu: " + e.getMessage());
                    Toast.makeText(this, "Lỗi từ chối: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                });
    }

    private void createOrder() {
        Map<String, Object> orderData = new HashMap<>();
        orderData.put("customer_id", booking.getCustomerId());
        orderData.put("provider_id", vehicle.getOwnerId());
        orderData.put("vehicle_id", vehicleId);
        orderData.put("pickup_time", booking.getStartTime());
        orderData.put("dropoff_time", booking.getEndTime());
        orderData.put("total_amount", booking.getTotalAmount());
        orderData.put("status", "pending");
        orderData.put("payment_status", "pending");
        orderData.put("created_at", Timestamp.now());

        db.collection("Orders").add(orderData)
                .addOnSuccessListener(orderRef -> {
                    Map<String, Object> updateData = new HashMap<>();
                    updateData.put("orderId", orderRef.getId());
                    db.collection("Bookings").document(bookingId)
                            .update(updateData);
                })
                .addOnFailureListener(e -> Log.e(TAG, "Lỗi tạo order: " + e.getMessage()));
    }

    private void createNotification(String userId, String message, String type) {
        Notification notification = new Notification();
        notification.setUserId(userId);
        notification.setBookingId(bookingId);
        notification.setMessage(message);
        notification.setType(type);
        db.collection("Notifications").add(notification);
    }
}

```

### src\main\java\com\uit\carrental\Service\Booking\RequestSuccessActivity.java
```java
package com.uit.carrental.Service.Booking;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;

import androidx.appcompat.app.AppCompatActivity;

import com.uit.carrental.ActivityPages.CustomerMainActivity;
import com.uit.carrental.R;

public class RequestSuccessActivity extends AppCompatActivity {
    private Button btn_home;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        if (getSupportActionBar() != null) {
            getSupportActionBar().hide();
        }
        setContentView(R.layout.activity_finished);

        init();
        btn_home.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Intent intent = new Intent(RequestSuccessActivity.this, CustomerMainActivity.class);
                startActivity(intent);
            }
        });


    }
    private void init()
    {
        btn_home = findViewById(R.id.btn_noti_Home);
    }
}

```

### src\main\java\com\uit\carrental\Service\Booking\ScheduleSelect.java
```java
package com.uit.carrental.Service.Booking;

import android.app.TimePickerDialog;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;
import androidx.lifecycle.ViewModelProvider;
import com.google.android.material.datepicker.CalendarConstraints;
import com.google.android.material.datepicker.DateValidatorPointForward;
import com.google.android.material.datepicker.MaterialDatePicker;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.firestore.DocumentSnapshot;
import com.google.firebase.firestore.FirebaseFirestore;
import com.uit.carrental.Model.Booking;
import com.uit.carrental.Model.Notification;
import com.uit.carrental.Model.Vehicle;
import com.uit.carrental.R;
import com.google.firebase.Timestamp;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Locale;

public class ScheduleSelect extends AppCompatActivity {

    private static final String TAG = "ScheduleSelect";
    private TextView tvSelectStartDate, tvSelectEndDate, tvSelectStartTime, tvSelectEndTime, tvTotalDays, tvTotalPrice;
    private Button btnConfirm;
    private ImageView backButton;
    private ScheduleSelectViewModel viewModel;
    private String vehicleId;
    private Calendar startDateTime, endDateTime;
    private List<Long> bookedDates; // Danh sách epoch millis của các ngày đã đặt
    private FirebaseFirestore db;
    private Vehicle vehicle; // Đối tượng xe để lấy giá
    private long totalDays;
    private long totalAmount;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_schedule_select);
        if (getSupportActionBar() != null) {
            getSupportActionBar().hide();
        }

        vehicleId = getIntent().getStringExtra("vehicleId");
        if (vehicleId == null) {
            Toast.makeText(this, R.string.no_vehicle_id, Toast.LENGTH_SHORT).show();
            finish();
            return;
        }

        initViews();
        initViewModel();
        loadVehicleData();
        setupListeners();
    }

    private void initViews() {
        tvSelectStartDate = findViewById(R.id.tv_select_start_date);
        tvSelectEndDate = findViewById(R.id.tv_select_end_date);
        tvSelectStartTime = findViewById(R.id.tv_select_start_time);
        tvSelectEndTime = findViewById(R.id.tv_select_end_time);
        tvTotalDays = findViewById(R.id.tv_total_days);
        tvTotalPrice = findViewById(R.id.tv_total_price);
        btnConfirm = findViewById(R.id.btn_confirm);
        backButton = findViewById(R.id.back_button);
        db = FirebaseFirestore.getInstance();
        bookedDates = new ArrayList<>();
        startDateTime = null;
        endDateTime = null;
        totalDays = 0;
        totalAmount = 0;
    }

    private void initViewModel() {
        viewModel = new ViewModelProvider(this).get(ScheduleSelectViewModel.class);
    }

    private void loadVehicleData() {
        db.collection("Vehicles").document(vehicleId)
                .get()
                .addOnSuccessListener(documentSnapshot -> {
                    if (documentSnapshot.exists()) {
                        vehicle = documentSnapshot.toObject(Vehicle.class);
                        if (vehicle == null) {
                            Toast.makeText(this, R.string.vehicle_not_found, Toast.LENGTH_SHORT).show();
                            finish();
                        } else {
                            loadBookedDates();
                        }
                    } else {
                        Toast.makeText(this, R.string.vehicle_not_found, Toast.LENGTH_SHORT).show();
                        finish();
                    }
                })
                .addOnFailureListener(e -> {
                    Log.e(TAG, "Lỗi tải dữ liệu xe: " + e.getMessage());
                    Toast.makeText(this, R.string.load_vehicle_error, Toast.LENGTH_SHORT).show();
                    finish();
                });
    }

    private void loadBookedDates() {
        db.collection("Bookings")
                .whereEqualTo("vehicleId", vehicleId)
                .whereIn("status", List.of("pending", "confirmed", "paid"))
                .get()
                .addOnSuccessListener(querySnapshot -> {
                    bookedDates.clear();
                    for (DocumentSnapshot doc : querySnapshot.getDocuments()) {
                        Booking booking = doc.toObject(Booking.class);
                        if (booking != null && booking.getStartTime() != null && booking.getEndTime() != null) {
                            addBookedDates(booking.getStartTime(), booking.getEndTime());
                        }
                    }
                    Log.d(TAG, "Loaded " + bookedDates.size() + " booked dates");
                })
                .addOnFailureListener(e -> {
                    Log.e(TAG, "Lỗi tải lịch đặt xe: " + e.getMessage());
                    Toast.makeText(this, R.string.load_schedule_error, Toast.LENGTH_SHORT).show();
                });
    }

    private void addBookedDates(Timestamp startTime, Timestamp endTime) {
        Calendar startCal = Calendar.getInstance();
        startCal.setTime(startTime.toDate());
        startCal.set(Calendar.HOUR_OF_DAY, 0);
        startCal.set(Calendar.MINUTE, 0);
        startCal.set(Calendar.SECOND, 0);
        startCal.set(Calendar.MILLISECOND, 0);

        Calendar endCal = Calendar.getInstance();
        endCal.setTime(endTime.toDate());
        endCal.set(Calendar.HOUR_OF_DAY, 0);
        endCal.set(Calendar.MINUTE, 0);
        endCal.set(Calendar.SECOND, 0);
        endCal.set(Calendar.MILLISECOND, 0);

        while (!startCal.after(endCal)) {
            bookedDates.add(startCal.getTimeInMillis());
            startCal.add(Calendar.DAY_OF_MONTH, 1);
        }
    }

    private void setupListeners() {
        backButton.setOnClickListener(v -> finish());

        tvSelectStartDate.setOnClickListener(v -> showDatePicker(true));
        tvSelectEndDate.setOnClickListener(v -> showDatePicker(false));
        tvSelectStartTime.setOnClickListener(v -> showTimePicker(true));
        tvSelectEndTime.setOnClickListener(v -> showTimePicker(false));

        btnConfirm.setOnClickListener(v -> confirmBooking());
    }

    private void showDatePicker(boolean isStartDate) {
        CalendarConstraints.Builder constraintsBuilder = new CalendarConstraints.Builder()
                .setValidator(new CalendarConstraints.DateValidator() {
                    @Override
                    public boolean isValid(long date) {
                        Calendar today = Calendar.getInstance();
                        today.set(Calendar.HOUR_OF_DAY, 0);
                        today.set(Calendar.MINUTE, 0);
                        today.set(Calendar.SECOND, 0);
                        today.set(Calendar.MILLISECOND, 0);
                        return date >= today.getTimeInMillis() && !bookedDates.contains(date);
                    }

                    @Override
                    public int describeContents() { return 0; }

                    @Override
                    public void writeToParcel(android.os.Parcel dest, int flags) {}
                });

        MaterialDatePicker<Long> datePicker = MaterialDatePicker.Builder.datePicker()
                .setTitleText(isStartDate ? R.string.select_start_date : R.string.select_end_date)
                .setCalendarConstraints(constraintsBuilder.build())
                .build();

        datePicker.addOnPositiveButtonClickListener(selection -> {
            Calendar selectedCal = Calendar.getInstance();
            selectedCal.setTimeInMillis(selection);
            selectedCal.set(Calendar.HOUR_OF_DAY, 0);
            selectedCal.set(Calendar.MINUTE, 0);
            selectedCal.set(Calendar.SECOND, 0);
            selectedCal.set(Calendar.MILLISECOND, 0);

            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy", Locale.getDefault());
            if (isStartDate) {
                startDateTime = startDateTime != null ? startDateTime : Calendar.getInstance();
                startDateTime.setTimeInMillis(selection);
                tvSelectStartDate.setText(sdf.format(new Date(selection)));
            } else {
                endDateTime = endDateTime != null ? endDateTime : Calendar.getInstance();
                endDateTime.setTimeInMillis(selection);
                tvSelectEndDate.setText(sdf.format(new Date(selection)));
            }
            updateTotalDaysAndPrice();
        });

        datePicker.show(getSupportFragmentManager(), isStartDate ? "START_DATE_PICKER" : "END_DATE_PICKER");
    }

    private void showTimePicker(boolean isStartTime) {
        Calendar calendar = Calendar.getInstance();
        TimePickerDialog timePicker = new TimePickerDialog(
                this,
                (view, hourOfDay, minute) -> {
                    if (isStartTime) {
                        startDateTime = startDateTime != null ? startDateTime : Calendar.getInstance();
                        startDateTime.set(Calendar.HOUR_OF_DAY, hourOfDay);
                        startDateTime.set(Calendar.MINUTE, minute);
                        tvSelectStartTime.setText(String.format(Locale.getDefault(), "%02d:%02d", hourOfDay, minute));
                    } else {
                        endDateTime = endDateTime != null ? endDateTime : Calendar.getInstance();
                        endDateTime.set(Calendar.HOUR_OF_DAY, hourOfDay);
                        endDateTime.set(Calendar.MINUTE, minute);
                        tvSelectEndTime.setText(String.format(Locale.getDefault(), "%02d:%02d", hourOfDay, minute));
                    }
                    updateTotalDaysAndPrice();
                },
                calendar.get(Calendar.HOUR_OF_DAY),
                calendar.get(Calendar.MINUTE),
                true
        );
        timePicker.show();
    }

    private void updateTotalDaysAndPrice() {
        if (startDateTime == null || endDateTime == null || vehicle == null) {
            tvTotalDays.setText(R.string.total_days);
            tvTotalPrice.setText(R.string.total_price);
            totalDays = 0;
            totalAmount = 0;
            return;
        }

        // Tính số giờ thuê
        long diffInMillis = endDateTime.getTimeInMillis() - startDateTime.getTimeInMillis();
        if (diffInMillis <= 0) {
            tvTotalDays.setText(R.string.total_days);
            tvTotalPrice.setText(R.string.total_price);
            totalDays = 0;
            totalAmount = 0;
            return;
        }

        // Làm tròn số ngày (1 ngày = 24 giờ)
        totalDays = (long) Math.ceil((double) diffInMillis / (1000 * 60 * 60 * 24));

        // Lấy giá xe từ vehiclePrice (giả định dạng "500.000 VNĐ/Ngày")
        long pricePerDay = parsePricePerDay(vehicle.getVehiclePrice());
        totalAmount = totalDays * pricePerDay;

        // Định dạng giá
        DecimalFormat formatter = new DecimalFormat("#,### VNĐ");
        tvTotalDays.setText(getString(R.string.total_days, totalDays));
        tvTotalPrice.setText(getString(R.string.total_price, formatter.format(totalAmount)));
    }

    private long parsePricePerDay(String priceString) {
        if (priceString == null || priceString.isEmpty()) {
            return 0;
        }
        try {
            // Loại bỏ " VNĐ/Ngày" và các dấu chấm
            String cleanPrice = priceString.replaceAll("[^0-9]", "");
            return Long.parseLong(cleanPrice);
        } catch (NumberFormatException e) {
            Log.e(TAG, "Lỗi phân tích giá: " + e.getMessage());
            return 0;
        }
    }

    private void confirmBooking() {
        if (startDateTime == null || endDateTime == null) {
            Toast.makeText(this, R.string.no_date_selected, Toast.LENGTH_SHORT).show();
            return;
        }
        if (endDateTime.before(startDateTime)) {
            Toast.makeText(this, R.string.invalid_date_range, Toast.LENGTH_SHORT).show();
            return;
        }
        if (tvSelectStartTime.getText().toString().equals(getString(R.string.select_start_time)) ||
                tvSelectEndTime.getText().toString().equals(getString(R.string.select_end_time))) {
            Toast.makeText(this, R.string.no_time_selected, Toast.LENGTH_SHORT).show();
            return;
        }
        if (totalDays <= 0 || totalAmount <= 0) {
            Toast.makeText(this, R.string.invalid_booking, Toast.LENGTH_SHORT).show();
            return;
        }

        viewModel.checkScheduleConflict(vehicleId, new Timestamp(startDateTime.getTime()), new Timestamp(endDateTime.getTime()))
                .observe(this, isAvailable -> {
                    if (isAvailable == null) {
                        Toast.makeText(this, R.string.booking_failed, Toast.LENGTH_SHORT).show();
                        return;
                    }
                    if (!isAvailable) {
                        Toast.makeText(this, R.string.time_overlap_error, Toast.LENGTH_SHORT).show();
                        return;
                    }

                    Booking booking = new Booking();
                    booking.setVehicleId(vehicleId);
                    booking.setCustomerId(FirebaseAuth.getInstance().getCurrentUser().getUid());
                    booking.setOwnerId(vehicle.getOwnerId());
                    booking.setStartTime(new Timestamp(startDateTime.getTime()));
                    booking.setEndTime(new Timestamp(endDateTime.getTime()));
                    booking.setStatus("pending");
                    booking.setCreatedAt(Timestamp.now());
                    booking.setUpdatedAt(Timestamp.now());
                    booking.setTotalAmount(totalAmount);
                    booking.setPickupLocation("Địa chỉ nhận xe"); // TODO: Lấy từ input
                    booking.setDropoffLocation("Địa chỉ trả xe"); // TODO: Lấy từ input

                    viewModel.createBooking(booking).observe(this, bookingId -> {
                        if (bookingId != null) {
                            Notification notification = new Notification();
                            notification.setUserId(vehicle.getOwnerId());
                            notification.setBookingId(bookingId);
                            notification.setMessage("Có booking mới: #" + bookingId);
                            notification.setType("new_booking");
                            db.collection("Notifications").add(notification);

                            Intent intent = new Intent(ScheduleSelect.this, RequestSuccessActivity.class);
                            intent.putExtra("bookingId", bookingId);
                            startActivity(intent);
                            Toast.makeText(this, R.string.booking_success, Toast.LENGTH_SHORT).show();
                            finish();
                        } else {
                            Toast.makeText(this, R.string.booking_failed, Toast.LENGTH_SHORT).show();
                        }
                    });
                });
    }
}

```

### src\main\java\com\uit\carrental\Service\Booking\ScheduleSelectViewModel.java
```java
package com.uit.carrental.Service.Booking;

import androidx.lifecycle.LiveData;
import androidx.lifecycle.MutableLiveData;
import androidx.lifecycle.ViewModel;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.firestore.QuerySnapshot;
import com.google.firebase.Timestamp;
import com.uit.carrental.Model.Booking;

import java.util.Date;
import java.util.List;

public class ScheduleSelectViewModel extends ViewModel {

    private final FirebaseFirestore db;
    private final MutableLiveData<Boolean> scheduleAvailability;
    private final MutableLiveData<String> bookingResult;

    public ScheduleSelectViewModel() {
        db = FirebaseFirestore.getInstance();
        scheduleAvailability = new MutableLiveData<>();
        bookingResult = new MutableLiveData<>();
    }

    public LiveData<Boolean> checkScheduleConflict(String vehicleId, Timestamp startTime, Timestamp endTime) {
        db.collection("Bookings")
                .whereEqualTo("vehicleId", vehicleId)
                .whereIn("status", List.of("pending", "confirmed", "paid"))
                .get()
                .addOnSuccessListener(querySnapshot -> {
                    boolean isAvailable = true;
                    for (var doc : querySnapshot.getDocuments()) {
                        Booking existingBooking = doc.toObject(Booking.class);
                        if (existingBooking != null &&
                                existingBooking.getStartTime() != null &&
                                existingBooking.getEndTime() != null) {
                            Date existingStart = existingBooking.getStartTime().toDate();
                            Date existingEnd = existingBooking.getEndTime().toDate();
                            Date newStart = startTime.toDate();
                            Date newEnd = endTime.toDate();
                            if (!(newEnd.before(existingStart) || newStart.after(existingEnd))) {
                                isAvailable = false;
                                break;
                            }
                        }
                    }
                    scheduleAvailability.setValue(isAvailable);
                })
                .addOnFailureListener(e -> scheduleAvailability.setValue(null));
        return scheduleAvailability;
    }

    public LiveData<String> createBooking(Booking booking) {
        db.collection("Bookings")
                .add(booking)
                .addOnSuccessListener(documentReference -> {
                    String bookingId = documentReference.getId();
                    booking.setBookingId(bookingId);
                    documentReference.set(booking)
                            .addOnSuccessListener(aVoid -> bookingResult.setValue(bookingId))
                            .addOnFailureListener(e -> bookingResult.setValue(null));
                })
                .addOnFailureListener(e -> bookingResult.setValue(null));
        return bookingResult;
    }
}

```

### src\main\java\com\uit\carrental\Service\UserAuthentication\CCCDActivity.java
```java
package com.uit.carrental.Service.UserAuthentication;

import android.app.ProgressDialog;
import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.Toast;

import androidx.activity.result.ActivityResultCallback;
import androidx.activity.result.ActivityResultLauncher;
import androidx.activity.result.contract.ActivityResultContracts;
import androidx.appcompat.app.AppCompatActivity;
import androidx.lifecycle.LiveData;
import androidx.lifecycle.MutableLiveData;
import androidx.lifecycle.ViewModel;
import androidx.lifecycle.ViewModelProvider;

import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.firestore.DocumentReference;
import com.google.firebase.firestore.FirebaseFirestore;
import com.squareup.picasso.Picasso;
import com.uit.carrental.ActivityPages.CustomerMainActivity;
import com.uit.carrental.Model.User;
import com.uit.carrental.R;
import com.uit.carrental.Service.Api.CloudinaryApi;

import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.atomic.AtomicInteger;

public class CCCDActivity extends AppCompatActivity {

    private static final String TAG = "CCCDActivity";
    private ImageView backButton, front, behind, license;
    private FrameLayout frontContainer, behindContainer, licenseContainer;
    private Button btnUpdate;
    private String uploadType;
    private Uri frontUri, behindUri, licenseUri;
    private CccdViewModel viewModel;
    private ProgressDialog progressDialog;

    ActivityResultLauncher<String> pickImagesFromGallery = registerForActivityResult(
            new ActivityResultContracts.GetContent(),
            new ActivityResultCallback<Uri>() {
                @Override
                public void onActivityResult(Uri result) {
                    if (result != null) {
                        switch (uploadType) {
                            case "IDCards/Front/":
                                frontUri = result;
                                front.setImageURI(result);
                                break;
                            case "IDCards/Behind/":
                                behindUri = result;
                                behind.setImageURI(result);
                                break;
                            case "Licenses/":
                                licenseUri = result;
                                license.setImageURI(result);
                                break;
                        }
                    }
                }
            });

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_cccd);

        initViews();
        initViewModel();
        observeLiveData();
        viewModel.loadUserData();
    }

    private void initViews() {
        backButton = findViewById(R.id.back_button);
        front = findViewById(R.id.img_front_CCCD);
        behind = findViewById(R.id.img_behind_CCCD);
        license = findViewById(R.id.img_license);
        frontContainer = findViewById(R.id.front_cccd_container);
        behindContainer = findViewById(R.id.behind_cccd_container);
        licenseContainer = findViewById(R.id.license_container);
        btnUpdate = findViewById(R.id.update_img);

        CloudinaryApi.init(this);

        backButton.setOnClickListener(v -> {
            Log.d(TAG, "Nút Back được nhấn");
            navigateBack();
        });

        frontContainer.setOnClickListener(v -> {
            uploadType = "IDCards/Front/";
            pickImagesFromGallery.launch("image/*");
        });

        behindContainer.setOnClickListener(v -> {
            uploadType = "IDCards/Behind/";
            pickImagesFromGallery.launch("image/*");
        });

        licenseContainer.setOnClickListener(v -> {
            uploadType = "Licenses/";
            pickImagesFromGallery.launch("image/*");
        });

        btnUpdate.setOnClickListener(v -> saveImages());
    }

    private void initViewModel() {
        ViewModelProvider.Factory factory = new ViewModelProvider.Factory() {
            @Override
            public <T extends ViewModel> T create(Class<T> modelClass) {
                if (modelClass.isAssignableFrom(CccdViewModel.class)) {
                    return (T) new CccdViewModel(CCCDActivity.this);
                }
                throw new IllegalArgumentException("Unknown ViewModel class");
            }
        };
        viewModel = new ViewModelProvider(this, factory).get(CccdViewModel.class);
    }

    private void observeLiveData() {
        viewModel.getUserLiveData().observe(this, user -> {
            if (user != null) {
                if (user.getCiCardFront() != null && !user.getCiCardFront().isEmpty()) {
                    Picasso.get().load(user.getCiCardFront()).into(front);
                }
                if (user.getCiCardBehind() != null && !user.getCiCardBehind().isEmpty()) {
                    Picasso.get().load(user.getCiCardBehind()).into(behind);
                }
                if (user.getLicenseUrl() != null && !user.getLicenseUrl().isEmpty()) {
                    Picasso.get().load(user.getLicenseUrl()).into(license);
                }
            }
        });

        viewModel.getErrorLiveData().observe(this, error -> {
            if (progressDialog != null && progressDialog.isShowing()) {
                progressDialog.dismiss();
            }
            if (error != null) {
                Toast.makeText(CCCDActivity.this, error, Toast.LENGTH_LONG).show();
            }
        });

        viewModel.getUpdateSuccessLiveData().observe(this, success -> {
            if (progressDialog != null && progressDialog.isShowing()) {
                progressDialog.dismiss();
            }
            if (success != null && success) {
                Toast.makeText(CCCDActivity.this, "Thông tin của bạn sẽ được duyệt trong vòng 30 phút.", Toast.LENGTH_LONG).show();
                navigateBack();
            }
        });
    }

    private void saveImages() {
        if (frontUri == null && behindUri == null && licenseUri == null) {
            Toast.makeText(this, "Vui lòng chọn ít nhất một ảnh", Toast.LENGTH_SHORT).show();
            return;
        }

        progressDialog = ProgressDialog.show(this, "Uploading Images", "Please wait...", true);
        viewModel.uploadImages(frontUri, behindUri, licenseUri);
    }

    private void navigateBack() {
        if (getIntent().getBooleanExtra("fromVehicleDetail", false)) {
            Intent intent = new Intent(this, CustomerMainActivity.class);
            intent.putExtra("fragment", "home");
            intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
            startActivity(intent);
        } else {
            Intent intent = new Intent(this, ProfileManagement.class);
            intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
            startActivity(intent);
        }
        finish();
        overridePendingTransition(0, 0);
    }

    @Override
    public void onBackPressed() {
        Log.d(TAG, "Nút Back vật lý được nhấn");
        navigateBack();
    }

    public static class CccdViewModel extends ViewModel {
        private final Context context;
        private final FirebaseFirestore db;
        private final FirebaseUser firebaseUser;
        private final MutableLiveData<User> userLiveData;
        private final MutableLiveData<String> errorLiveData;
        private final MutableLiveData<Boolean> updateSuccessLiveData;

        public CccdViewModel(Context context) {
            this.context = context;
            db = FirebaseFirestore.getInstance();
            firebaseUser = FirebaseAuth.getInstance().getCurrentUser();
            userLiveData = new MutableLiveData<>();
            errorLiveData = new MutableLiveData<>();
            updateSuccessLiveData = new MutableLiveData<>();
        }

        public LiveData<User> getUserLiveData() {
            return userLiveData;
        }

        public LiveData<String> getErrorLiveData() {
            return errorLiveData;
        }

        public LiveData<Boolean> getUpdateSuccessLiveData() {
            return updateSuccessLiveData;
        }

        public void loadUserData() {
            if (firebaseUser == null) {
                errorLiveData.setValue("Người dùng chưa đăng nhập");
                return;
            }

            DocumentReference userRef = db.collection("Users").document(firebaseUser.getUid());
            userRef.addSnapshotListener((document, error) -> {
                if (error != null) {
                    errorLiveData.setValue("Lỗi tải thông tin: " + error.getMessage());
                    return;
                }
                if (document != null && document.exists()) {
                    User user = document.toObject(User.class);
                    userLiveData.setValue(user);
                }
            });
        }

        public void uploadImages(Uri frontUri, Uri behindUri, Uri licenseUri) {
            int uploadCount = (frontUri != null ? 1 : 0) + (behindUri != null ? 1 : 0) + (licenseUri != null ? 1 : 0);
            if (uploadCount == 0) {
                errorLiveData.setValue("Không có ảnh nào được chọn");
                return;
            }

            AtomicInteger pendingUploads = new AtomicInteger(uploadCount);
            Map<String, Object> data = new HashMap<>();
            User user = userLiveData.getValue() != null ? userLiveData.getValue() : new User();
            user.setUserId(firebaseUser.getUid());

            if (frontUri != null) {
                CloudinaryApi.uploadImage(context, frontUri, new CloudinaryApi.UploadCallbackCustom() {
                    @Override
                    public void onSuccess(String url) {
                        user.setCiCardFront(url);
                        data.put("ciCardFront", url);
                        checkUploadComplete(pendingUploads, data, user);
                    }

                    @Override
                    public void onFailure(Exception e) {
                        errorLiveData.setValue("Lỗi tải CCCD mặt trước: " + e.getMessage());
                        checkUploadComplete(pendingUploads, data, user);
                    }
                });
            }

            if (behindUri != null) {
                CloudinaryApi.uploadImage(context, behindUri, new CloudinaryApi.UploadCallbackCustom() {
                    @Override
                    public void onSuccess(String url) {
                        user.setCiCardBehind(url);
                        data.put("ciCardBehind", url);
                        checkUploadComplete(pendingUploads, data, user);
                    }

                    @Override
                    public void onFailure(Exception e) {
                        errorLiveData.setValue("Lỗi tải CCCD mặt sau: " + e.getMessage());
                        checkUploadComplete(pendingUploads, data, user);
                    }
                });
            }

            if (licenseUri != null) {
                CloudinaryApi.uploadImage(context, licenseUri, new CloudinaryApi.UploadCallbackCustom() {
                    @Override
                    public void onSuccess(String url) {
                        user.setLicenseUrl(url);
                        data.put("licenseUrl", url);
                        checkUploadComplete(pendingUploads, data, user);
                    }

                    @Override
                    public void onFailure(Exception e) {
                        errorLiveData.setValue("Lỗi tải bằng lái xe: " + e.getMessage());
                        checkUploadComplete(pendingUploads, data, user);
                    }
                });
            }
        }

        private void checkUploadComplete(AtomicInteger pendingUploads, Map<String, Object> data, User user) {
            if (pendingUploads.decrementAndGet() == 0) {
                if (data.isEmpty()) {
                    errorLiveData.setValue("Không có ảnh nào được upload thành công");
                    return;
                }
                data.put("verificationStatus", "pending");
                db.collection("Users").document(user.getUserId())
                        .update(data)
                        .addOnSuccessListener(aVoid -> {
                            userLiveData.setValue(user);
                            updateSuccessLiveData.setValue(true);
                        })
                        .addOnFailureListener(e -> errorLiveData.setValue("Lỗi cập nhật thông tin: " + e.getMessage()));
            }
        }
    }
}
```

### src\main\java\com\uit\carrental\Service\UserAuthentication\ForgotPasswordActivity.java
```java
package com.uit.carrental.Service.UserAuthentication;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import android.app.ProgressDialog;
import android.content.Intent;
import android.os.Bundle;
import android.text.TextUtils;
import android.util.Log;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import com.uit.carrental.R;
import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.FirebaseAuth;

public class ForgotPasswordActivity extends AppCompatActivity {

    private EditText inputEmail;
    private Button btnContinue;
    private FirebaseAuth mAuth;
    private ProgressDialog progressDialog;
    private static final String TAG = "ForgotPasswordActivity";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_forgot_password);

        initViews();

        Intent intent = getIntent();
        String emailFromIntent = intent.getStringExtra("email");
        if (emailFromIntent != null) {
            inputEmail.setText(emailFromIntent);
        }

        btnContinue.setOnClickListener(view -> sendResetPasswordEmail());
    }

    private void initViews() {
        inputEmail = findViewById(R.id.input_email);
        btnContinue = findViewById(R.id.btn_continue);
        mAuth = FirebaseAuth.getInstance();
        progressDialog = new ProgressDialog(this);
    }

    private void sendResetPasswordEmail() {
        String email = inputEmail.getText().toString().trim();

        if (TextUtils.isEmpty(email)) {
            inputEmail.setError("Vui lòng nhập email.");
            return;
        }

        progressDialog.setMessage("Đang gửi email khôi phục...");
        progressDialog.show();

        mAuth.sendPasswordResetEmail(email)
                .addOnCompleteListener(task -> {
                    progressDialog.dismiss();
                    if (task.isSuccessful()) {
                        Toast.makeText(this, "Đã gửi email xác nhận tới " + email, Toast.LENGTH_LONG).show();
                        finish();
                    } else {
                        Log.e(TAG, "sendPasswordResetEmail thất bại: " + task.getException());
                        Toast.makeText(this, "Không thể gửi email xác nhận.", Toast.LENGTH_SHORT).show();
                    }
                });
    }
}

```

### src\main\java\com\uit\carrental\Service\UserAuthentication\GGVerrifyPhone.java
```java
package com.uit.carrental.Service.UserAuthentication;

import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;

import com.uit.carrental.R;

public class GGVerrifyPhone extends AppCompatActivity {

    private Button btnContinue;
    private EditText inputPhone;

    private void init()
    {
        btnContinue = findViewById(R.id.btn_continue);
        inputPhone = findViewById(R.id.input_phone_number);
    }
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_ggverrify_phone);

        init();

        btnContinue.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(GGVerrifyPhone.this, ValidatePhoneActivity.class);
                intent.putExtra("phone", inputPhone.getText().toString());
                startActivity(intent);
            }
        });
    }
}
```

### src\main\java\com\uit\carrental\Service\UserAuthentication\LoginActivity.java
```java
package com.uit.carrental.Service.UserAuthentication;

import android.app.ProgressDialog;
import android.content.Intent;
import android.os.Bundle;
import android.text.TextUtils;
import android.util.Log;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.LinearLayout;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.app.AppCompatActivity;

import com.google.android.gms.auth.api.signin.GoogleSignIn;
import com.google.android.gms.auth.api.signin.GoogleSignInAccount;
import com.google.android.gms.auth.api.signin.GoogleSignInClient;
import com.google.android.gms.auth.api.signin.GoogleSignInOptions;
import com.google.android.gms.common.api.ApiException;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.AuthCredential;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.auth.GoogleAuthProvider;
import com.google.firebase.firestore.DocumentReference;
import com.google.firebase.firestore.DocumentSnapshot;
import com.google.firebase.firestore.FirebaseFirestore;
import com.uit.carrental.ActivityPages.CustomerMainActivity;
import com.uit.carrental.ActivityPages.OwnerMainActivity;
import com.uit.carrental.ActivityPages.AdminMainActivity;
import com.uit.carrental.Model.User;
import com.uit.carrental.Model.UserClient;
import com.uit.carrental.R;

import java.util.HashMap;
import java.util.Map;

public class LoginActivity extends AppCompatActivity {

    private static final String TAG = "LoginActivity";
    private EditText inputEmail, inputPassword;
    private Button btnSignIn, btnSignUp;
    private TextView btnForgot;
    private LinearLayout btnGG, btnFacebook;
    private ProgressDialog progressDialog;
    private FirebaseAuth mAuth;
    private GoogleSignInClient mGoogleSignInClient;
    private static final int RC_SIGN_IN = 406;
    private static final String ADMIN_USERNAME = "quangdeptrai";
    private static final String ADMIN_PASSWORD = "21522516";

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_sign_in);

        initViews();
        configureGoogleSignIn();

        btnSignIn.setOnClickListener(view -> loginWithEmail());
        btnGG.setOnClickListener(view -> loginWithGoogle());
        btnSignUp.setOnClickListener(view -> {
            Intent intent = new Intent(LoginActivity.this, RegisterActivity.class);
            startActivity(intent);
        });
        btnForgot.setOnClickListener(view -> {
            Intent intent = new Intent(LoginActivity.this, ForgotPasswordActivity.class);
            startActivity(intent);
        });
        btnFacebook.setOnClickListener(view -> {
            Toast.makeText(this, "Đăng nhập với Facebook chưa được triển khai.", Toast.LENGTH_SHORT).show();
        });
    }

    private void initViews() {
        mAuth = FirebaseAuth.getInstance();
        progressDialog = new ProgressDialog(this);

        inputEmail = findViewById(R.id.email);
        inputPassword = findViewById(R.id.password);
        btnSignIn = findViewById(R.id.btnSignIn);
        btnSignUp = findViewById(R.id.btnSignUp);
        btnForgot = findViewById(R.id.btnForgot);
        btnGG = findViewById(R.id.btn_GGsignIn);
        btnFacebook = findViewById(R.id.btn_facebook_signIn);
    }

    private void configureGoogleSignIn() {
        GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
                .requestIdToken(getString(R.string.default_web_client_id))
                .requestEmail()
                .build();
        mGoogleSignInClient = GoogleSignIn.getClient(this, gso);
    }

    private void loginWithEmail() {
        String email = inputEmail.getText().toString().trim().toLowerCase();
        String password = inputPassword.getText().toString().trim();

        if (!validateForm(email, password)) return;

        // Kiểm tra admin credentials
        if (email.equals(ADMIN_USERNAME) && password.equals(ADMIN_PASSWORD)) {
            Log.d(TAG, "Đăng nhập admin cứng: " + email);
            User adminUser = new User();
            adminUser.setUserId("admin_quangdeptrai");
            adminUser.setUsername(ADMIN_USERNAME);
            adminUser.setEmail("");
            adminUser.setCurrentRole("admin");
            Map<String, Boolean> roles = new HashMap<>();
            roles.put("admin", true);
            roles.put("customer", false);
            roles.put("owner", false);
            adminUser.setRoles(roles);

            ((UserClient) getApplicationContext()).setUser(adminUser);
            startActivity(new Intent(this, AdminMainActivity.class));
            finish();
            return;
        }

        // Đăng nhập Firebase thông thường
        progressDialog.setMessage("Đang đăng nhập...");
        progressDialog.show();

        mAuth.signInWithEmailAndPassword(email, password)
                .addOnCompleteListener(task -> {
                    progressDialog.dismiss();
                    if (task.isSuccessful()) {
                        Log.d(TAG, "Đăng nhập Firebase thành công: " + email);
                        fetchUserData();
                    } else {
                        Log.e(TAG, "Đăng nhập Firebase thất bại: " + task.getException().getMessage());
                        Toast.makeText(this, "Đăng nhập thất bại: " + task.getException().getMessage(), Toast.LENGTH_SHORT).show();
                    }
                });
    }

    private void loginWithGoogle() {
        Intent signInIntent = mGoogleSignInClient.getSignInIntent();
        startActivityForResult(signInIntent, RC_SIGN_IN);
    }

    @Override
    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode == RC_SIGN_IN) {
            Task<GoogleSignInAccount> task = GoogleSignIn.getSignedInAccountFromIntent(data);
            try {
                GoogleSignInAccount account = task.getResult(ApiException.class);
                firebaseAuthWithGoogle(account);
            } catch (ApiException e) {
                Log.e(TAG, "Đăng nhập Google thất bại: " + e.getMessage());
                Toast.makeText(this, "Đăng nhập Google thất bại: " + e.getMessage(), Toast.LENGTH_SHORT).show();
            }
        }
    }

    private void firebaseAuthWithGoogle(GoogleSignInAccount acct) {
        AuthCredential credential = GoogleAuthProvider.getCredential(acct.getIdToken(), null);
        mAuth.signInWithCredential(credential)
                .addOnCompleteListener(task -> {
                    if (task.isSuccessful()) {
                        Log.d(TAG, "Đăng nhập Google thành công: " + acct.getEmail());
                        fetchUserData();
                    } else {
                        Log.e(TAG, "Đăng nhập Google thất bại: " + task.getException().getMessage());
                        Toast.makeText(this, "Đăng nhập Google thất bại: " + task.getException().getMessage(), Toast.LENGTH_SHORT).show();
                    }
                });
    }

    private void fetchUserData() {
        FirebaseUser firebaseUser = mAuth.getCurrentUser();
        if (firebaseUser == null) {
            Log.e(TAG, "Không tìm thấy FirebaseUser");
            Toast.makeText(this, "Không tìm thấy người dùng", Toast.LENGTH_SHORT).show();
            return;
        }

        if (!firebaseUser.isEmailVerified() && !firebaseUser.getEmail().equals(ADMIN_USERNAME)) {
            Log.w(TAG, "Email chưa được xác thực: " + firebaseUser.getEmail());
            Toast.makeText(this, "Vui lòng xác nhận email trước khi đăng nhập.", Toast.LENGTH_LONG).show();
            mAuth.signOut();
            return;
        }

        String uid = firebaseUser.getUid();
        FirebaseFirestore db = FirebaseFirestore.getInstance();
        DocumentReference userRef = db.collection("Users").document(uid);

        userRef.get().addOnCompleteListener(task -> {
            if (task.isSuccessful()) {
                DocumentSnapshot document = task.getResult();
                if (document.exists()) {
                    User user = document.toObject(User.class);
                    if (user != null) {
                        Log.d(TAG, "Tìm thấy tài liệu người dùng: " + user.getEmail() + ", vai trò: " + user.getCurrentRole());
                        ((UserClient) getApplicationContext()).setUser(user);
                        checkUserInfo(user);
                    } else {
                        Log.e(TAG, "Không thể ánh xạ tài liệu người dùng");
                        Toast.makeText(this, "Lỗi ánh xạ dữ liệu người dùng.", Toast.LENGTH_SHORT).show();
                        navigateToProfileManagement(true);
                    }
                } else {
                    Log.w(TAG, "Tài liệu người dùng không tồn tại: " + uid);
                    navigateToProfileManagement(true);
                }
            } else {
                Log.e(TAG, "Lấy tài liệu người dùng thất bại: " + task.getException().getMessage());
                Toast.makeText(this, "Không thể lấy thông tin người dùng: " + task.getException().getMessage(), Toast.LENGTH_SHORT).show();
                navigateToProfileManagement(true);
            }
        });
    }

    private void checkUserInfo(User user) {
        // Kiểm tra các trường bắt buộc
        if (user.getUsername() == null || user.getUsername().isEmpty() ||
                user.getPhoneNumber() == null || user.getPhoneNumber().isEmpty() ||
                user.getEmail() == null || user.getEmail().isEmpty() ||
                user.getAddress() == null || user.getAddress().isEmpty() ||
                user.getCity() == null || user.getCity().isEmpty() ||
                user.getDescription() == null || user.getDescription().isEmpty() ||
                user.getBirthday() == null || user.getBirthday().isEmpty()) {
            Log.d(TAG, "Thông tin người dùng chưa đầy đủ");
            navigateToProfileManagement(true);
        } else {
            Log.d(TAG, "Thông tin người dùng đầy đủ, chuyển đến giao diện chính");
            navigateToMain(user);
        }
    }

    private void navigateToMain(User user) {
        if (user.getCurrentRole() != null) {
            Log.d(TAG, "Chuyển hướng với vai trò: " + user.getCurrentRole());
            Intent intent;
            switch (user.getCurrentRole().toLowerCase()) {
                case "customer":
                    intent = new Intent(this, CustomerMainActivity.class);
                    break;
                case "owner":
                    intent = new Intent(this, OwnerMainActivity.class);
                    break;
                case "admin":
                    intent = new Intent(this, AdminMainActivity.class);
                    break;
                default:
                    Log.w(TAG, "Vai trò không xác định: " + user.getCurrentRole());
                    Toast.makeText(this, "Vai trò không xác định.", Toast.LENGTH_SHORT).show();
                    return;
            }
            startActivity(intent);
            finish();
        } else {
            Log.w(TAG, "Không tìm thấy vai trò hiện tại");
            Toast.makeText(this, "Không tìm thấy vai trò hiện tại.", Toast.LENGTH_SHORT).show();
            navigateToProfileManagement(true);
        }
    }

    private void navigateToProfileManagement(boolean isFirstLogin) {
        Intent intent = new Intent(this, ProfileManagement.class);
        intent.putExtra("is_first_login", isFirstLogin);
        startActivity(intent);
    }

    private boolean validateForm(String email, String password) {
        boolean valid = true;
        if (TextUtils.isEmpty(email)) {
            inputEmail.setError("Email bắt buộc.");
            valid = false;
        }
        if (TextUtils.isEmpty(password)) {
            inputPassword.setError("Mật khẩu bắt buộc.");
            valid = false;
        }
        return valid;
    }
}

```

### src\main\java\com\uit\carrental\Service\UserAuthentication\ProfileManagement.java
```java
package com.uit.carrental.Service.UserAuthentication;

import android.app.AlertDialog;
import android.app.DatePickerDialog;
import android.app.ProgressDialog;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import androidx.activity.result.ActivityResultCallback;
import androidx.activity.result.ActivityResultLauncher;
import androidx.activity.result.contract.ActivityResultContracts;
import androidx.appcompat.app.AppCompatActivity;
import androidx.lifecycle.LiveData;
import androidx.lifecycle.MutableLiveData;
import androidx.lifecycle.ViewModel;
import androidx.lifecycle.ViewModelProvider;

import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.firestore.DocumentReference;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.firestore.SetOptions;
import com.squareup.picasso.Picasso;
import com.uit.carrental.ActivityPages.AdminMainActivity;
import com.uit.carrental.ActivityPages.CustomerMainActivity;
import com.uit.carrental.ActivityPages.OwnerMainActivity;
import com.uit.carrental.Model.User;
import com.uit.carrental.R;
import com.uit.carrental.Service.Api.CloudinaryApi;

import java.util.Calendar;
import java.util.HashMap;
import java.util.Map;

import de.hdodenhof.circleimageview.CircleImageView;

public class ProfileManagement extends AppCompatActivity {

    private CircleImageView imgAvatar;
    private ImageView backButton, editAvatar;
    private EditText etFullname, etEmail, etPhone, etAddress, etCity, etDescription;
    private Button btnUpdate, btnDateOfBirth;
    private TextView tvUpdateCccd, tvCurrentRole, tvVerificationStatus, tvStatus;
    private DatePickerDialog datePickerDialog;
    private ProfileViewModel viewModel;
    private Uri avatarUri;
    private ProgressDialog progressDialog;
    private boolean isFirstLogin;

    ActivityResultLauncher<String> pickImagesFromGallery = registerForActivityResult(
            new ActivityResultContracts.GetContent(),
            new ActivityResultCallback<Uri>() {
                @Override
                public void onActivityResult(Uri result) {
                    if (result != null) {
                        avatarUri = result;
                        imgAvatar.setImageURI(result);
                        uploadAvatar();
                    }
                }
            });

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_profile);

        isFirstLogin = getIntent().getBooleanExtra("is_first_login", false);

        initViews();
        initViewModel();
        observeLiveData();
        viewModel.loadUserData();

        backButton.setOnClickListener(v -> navigateBackBasedOnRole());

        btnUpdate.setOnClickListener(v -> updateInfo());

        imgAvatar.setOnClickListener(v -> pickImagesFromGallery.launch("image/*"));

        editAvatar.setOnClickListener(v -> pickImagesFromGallery.launch("image/*"));

        btnDateOfBirth.setOnClickListener(this::openDatePicker);

        tvUpdateCccd.setOnClickListener(v -> {
            Intent intent = new Intent(ProfileManagement.this, CCCDActivity.class);
            startActivity(intent);
            overridePendingTransition(0, 0);
        });

        CloudinaryApi.init(this);
    }

    private void initViews() {
        imgAvatar = findViewById(R.id.img_avatar_profile_input_fragment);
        backButton = findViewById(R.id.back_button);
        editAvatar = findViewById(R.id.edit_avatar);
        etFullname = findViewById(R.id.profile_input_fullname);
        etEmail = findViewById(R.id.profile_input_email);
        etPhone = findViewById(R.id.profile_input_phone);
        etAddress = findViewById(R.id.profile_input_address);
        etCity = findViewById(R.id.profile_input_city);
        etDescription = findViewById(R.id.profile_input_description);
        btnUpdate = findViewById(R.id.btn_update);
        btnDateOfBirth = findViewById(R.id.profile_input_dateofbirth);
        tvUpdateCccd = findViewById(R.id.update_cccd);
        tvCurrentRole = findViewById(R.id.tv_current_role);
        tvVerificationStatus = findViewById(R.id.tv_verification_status);
        tvStatus = findViewById(R.id.tv_status);

        etEmail.setEnabled(false);
        etPhone.setEnabled(false);

        initDatePicker();
        btnDateOfBirth.setText(getTodaysDate());
    }

    private void initViewModel() {
        viewModel = new ViewModelProvider(this).get(ProfileViewModel.class);
    }

    private void observeLiveData() {
        viewModel.getUserLiveData().observe(this, user -> {
            if (user != null) {
                etFullname.setText(user.getUsername());
                etEmail.setText(user.getEmail());
                etPhone.setText(user.getPhoneNumber());
                etAddress.setText(user.getAddress());
                etCity.setText(user.getCity());
                etDescription.setText(user.getDescription());
                btnDateOfBirth.setText(user.getBirthday() != null && !user.getBirthday().isEmpty() ? user.getBirthday() : getTodaysDate());
                tvCurrentRole.setText(getRoleDisplayText(user.getCurrentRole()));
                tvVerificationStatus.setText(getVerificationDisplayText(user.getVerificationStatus()));
                tvStatus.setText(getStatusDisplayText(user.getStatus()));

                if (user.getAvatarUrl() != null && !user.getAvatarUrl().isEmpty()) {
                    Picasso.get().load(user.getAvatarUrl()).placeholder(R.drawable.ic_person).into(imgAvatar);
                } else {
                    imgAvatar.setImageResource(R.drawable.ic_person);
                }
            }
        });

        viewModel.getErrorLiveData().observe(this, error -> {
            if (error != null) {
                if (progressDialog != null && progressDialog.isShowing()) {
                    progressDialog.dismiss();
                }
                Toast.makeText(this, error, Toast.LENGTH_LONG).show();
            }
        });

        viewModel.getUpdateSuccessLiveData().observe(this, success -> {
            if (progressDialog != null && progressDialog.isShowing()) {
                progressDialog.dismiss();
            }
            if (success != null && success) {
                navigateAfterUpdate();
            }
        });
    }

    private void navigateAfterUpdate() {
        User user = viewModel.getUserLiveData().getValue();
        Intent intent;
        if (user == null || user.getCurrentRole() == null) {
            // Nếu user hoặc currentRole null, lấy từ Firestore lần nữa
            FirebaseUser firebaseUser = FirebaseAuth.getInstance().getCurrentUser();
            if (firebaseUser != null) {
                FirebaseFirestore.getInstance().collection("Users").document(firebaseUser.getUid())
                        .get()
                        .addOnSuccessListener(documentSnapshot -> {
                            if (documentSnapshot.exists()) {
                                User fetchedUser = documentSnapshot.toObject(User.class);
                                if (fetchedUser != null && fetchedUser.getCurrentRole() != null) {
                                    navigateToMain(fetchedUser);
                                } else {
                                    navigateToDefault();
                                }
                            } else {
                                navigateToDefault();
                            }
                        })
                        .addOnFailureListener(e -> {
                            Toast.makeText(this, "Lỗi lấy thông tin người dùng: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                            navigateToDefault();
                        });
            } else {
                navigateToDefault();
            }
            return;
        }

        navigateToMain(user);
    }

    private void navigateToMain(User user) {
        Intent intent;
        switch (user.getCurrentRole().toLowerCase()) {
            case "customer":
                intent = new Intent(this, CustomerMainActivity.class);
                if (!isFirstLogin) {
                    intent.putExtra("navigate_to_fragment", "CustomerSettingFragment");
                }
                break;
            case "owner":
                intent = new Intent(this, OwnerMainActivity.class);
                if (!isFirstLogin) {
                    intent.putExtra("navigate_to_fragment", "OwnerSettingFragment");
                }
                break;
            case "admin":
                intent = new Intent(this, AdminMainActivity.class);
                if (!isFirstLogin) {
                    intent.putExtra("navigate_to_fragment", "AdminSettingFragment");
                }
                break;
            default:
                Toast.makeText(this, "Vai trò không xác định", Toast.LENGTH_SHORT).show();
                intent = new Intent(this, LoginActivity.class); // Fallback
                break;
        }
        startActivity(intent);
        overridePendingTransition(0, 0);
        finish();
    }

    private void navigateToDefault() {
        // Fallback điều hướng khi không lấy được thông tin người dùng
        Intent intent = new Intent(this, LoginActivity.class);
        startActivity(intent);
        overridePendingTransition(0, 0);
        finish();
    }

    private void navigateBackBasedOnRole() {
        if (isFirstLogin) {
            Toast.makeText(this, "Vui lòng cập nhật thông tin trước khi tiếp tục.", Toast.LENGTH_SHORT).show();
            return;
        }
        navigateAfterUpdate();
    }

    private String getTodaysDate() {
        Calendar cal = Calendar.getInstance();
        int year = cal.get(Calendar.YEAR);
        int month = cal.get(Calendar.MONTH) + 1;
        int day = cal.get(Calendar.DAY_OF_MONTH);
        return makeDateString(day, month, year);
    }

    private String makeDateString(int day, int month, int year) {
        return String.format("%02d/%02d/%d", day, month, year);
    }

    private void openDatePicker(View view) {
        datePickerDialog.show();
    }

    private void initDatePicker() {
        DatePickerDialog.OnDateSetListener dateSetListener = (datePicker, year, month, day) -> {
            month = month + 1;
            String date = makeDateString(day, month, year);
            btnDateOfBirth.setText(date);
        };

        Calendar cal = Calendar.getInstance();
        int year = cal.get(Calendar.YEAR);
        int month = cal.get(Calendar.MONTH);
        int day = cal.get(Calendar.DAY_OF_MONTH);

        int style = AlertDialog.THEME_HOLO_LIGHT;
        datePickerDialog = new DatePickerDialog(this, style, dateSetListener, year, month, day);
    }

    private void uploadAvatar() {
        if (avatarUri != null) {
            progressDialog = new ProgressDialog(this);
            progressDialog.setTitle("Đang tải ảnh...");
            progressDialog.setCancelable(false);
            progressDialog.show();

            CloudinaryApi.uploadImage(this, avatarUri, new CloudinaryApi.UploadCallbackCustom() {
                @Override
                public void onSuccess(String url) {
                    viewModel.setAvatarUrl(url);
                    progressDialog.dismiss();
                    Toast.makeText(ProfileManagement.this, "Tải ảnh đại diện thành công", Toast.LENGTH_SHORT).show();
                }

                @Override
                public void onFailure(Exception e) {
                    progressDialog.dismiss();
                    Toast.makeText(ProfileManagement.this, "Tải ảnh thất bại: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                }
            });
        }
    }

    private void updateInfo() {
        String username = etFullname.getText().toString().trim();
        String address = etAddress.getText().toString().trim();
        String city = etCity.getText().toString().trim();
        String description = etDescription.getText().toString().trim();
        String birthday = btnDateOfBirth.getText().toString().trim();

        if (username.isEmpty()) {
            etFullname.setError("Vui lòng nhập họ và tên");
            etFullname.requestFocus();
            return;
        }
        if (address.isEmpty()) {
            etAddress.setError("Vui lòng nhập địa chỉ");
            etAddress.requestFocus();
            return;
        }
        if (city.isEmpty()) {
            etCity.setError("Vui lòng nhập thành phố");
            etCity.requestFocus();
            return;
        }
        if (description.isEmpty()) {
            etDescription.setError("Vui lòng nhập mô tả");
            etDescription.requestFocus();
            return;
        }
        if (birthday.isEmpty()) {
            btnDateOfBirth.setError("Vui lòng chọn ngày sinh");
            return;
        }

        progressDialog = new ProgressDialog(this);
        progressDialog.setTitle("Đang cập nhật thông tin...");
        progressDialog.setCancelable(false);
        progressDialog.show();

        User user = new User();
        user.setUserId(FirebaseAuth.getInstance().getCurrentUser().getUid());
        user.setUsername(username);
        user.setAddress(address);
        user.setCity(city);
        user.setDescription(description);
        user.setBirthday(birthday);
        user.setEmail(etEmail.getText().toString());
        user.setPhoneNumber(etPhone.getText().toString());
        // Lấy currentRole và roles từ user hiện tại
        User currentUser = viewModel.getUserLiveData().getValue();
        if (currentUser != null) {
            user.setCurrentRole(currentUser.getCurrentRole());
            user.setRoles(currentUser.getRoles());
        }

        viewModel.updateUser(user);
    }

    private String getRoleDisplayText(String role) {
        switch (role) {
            case "customer":
                return "Khách hàng";
            case "owner":
                return "Chủ xe";
            case "admin":
                return "Quản trị viên";
            default:
                return role;
        }
    }

    private String getVerificationDisplayText(String verificationStatus) {
        if (verificationStatus == null) return "Chưa xác minh";
        switch (verificationStatus) {
            case "verified":
                return "Đã xác minh";
            case "pending":
                return "Đang chờ xác minh";
            default:
                return "Chưa xác minh";
        }
    }

    private String getStatusDisplayText(String status) {
        if (status == null) return "Hoạt động";
        switch (status) {
            case "active":
                return "Hoạt động";
            case "inactive":
                return "Không hoạt động";
            default:
                return status;
        }
    }

    public static class ProfileViewModel extends ViewModel {
        private final FirebaseFirestore db;
        private final FirebaseUser firebaseUser;
        private final MutableLiveData<User> userLiveData;
        private final MutableLiveData<String> errorLiveData;
        private final MutableLiveData<Boolean> updateSuccessLiveData;
        private String avatarUrl;

        public ProfileViewModel() {
            db = FirebaseFirestore.getInstance();
            firebaseUser = FirebaseAuth.getInstance().getCurrentUser();
            userLiveData = new MutableLiveData<>();
            errorLiveData = new MutableLiveData<>();
            updateSuccessLiveData = new MutableLiveData<>();
        }

        public LiveData<User> getUserLiveData() {
            return userLiveData;
        }

        public LiveData<String> getErrorLiveData() {
            return errorLiveData;
        }

        public LiveData<Boolean> getUpdateSuccessLiveData() {
            return updateSuccessLiveData;
        }

        public void setAvatarUrl(String url) {
            this.avatarUrl = url;
        }

        public void loadUserData() {
            if (firebaseUser == null) {
                errorLiveData.setValue("Người dùng chưa đăng nhập");
                return;
            }

            DocumentReference userRef = db.collection("Users").document(firebaseUser.getUid());
            userRef.addSnapshotListener((document, error) -> {
                if (error != null) {
                    errorLiveData.setValue("Lỗi tải thông tin: " + error.getMessage());
                    return;
                }
                if (document != null && document.exists()) {
                    User user = document.toObject(User.class);
                    if (avatarUrl != null) {
                        user.setAvatarUrl(avatarUrl);
                    }
                    userLiveData.setValue(user);
                } else {
                    User newUser = new User();
                    newUser.setUserId(firebaseUser.getUid());
                    newUser.setEmail(firebaseUser.getEmail() != null ? firebaseUser.getEmail() : "");
                    newUser.setCurrentRole("customer"); // Mặc định vai trò customer
                    Map<String, Boolean> roles = new HashMap<>();
                    roles.put("customer", true);
                    roles.put("owner", true);
                    roles.put("admin", false);
                    newUser.setRoles(roles);
                    userRef.set(newUser)
                            .addOnSuccessListener(aVoid -> userLiveData.setValue(newUser))
                            .addOnFailureListener(e -> errorLiveData.setValue("Lỗi tạo người dùng mới: " + e.getMessage()));
                }
            });
        }

        public void updateUser(User user) {
            if (avatarUrl != null) {
                user.setAvatarUrl(avatarUrl);
            }

            Map<String, Object> data = new HashMap<>();
            data.put("username", user.getUsername());
            data.put("email", user.getEmail());
            data.put("phoneNumber", user.getPhoneNumber());
            data.put("address", user.getAddress());
            data.put("city", user.getCity());
            data.put("description", user.getDescription());
            data.put("birthday", user.getBirthday());
            if (user.getAvatarUrl() != null && !user.getAvatarUrl().isEmpty()) {
                data.put("avatarUrl", user.getAvatarUrl());
            }
            if (user.getCurrentRole() != null) {
                data.put("currentRole", user.getCurrentRole());
            }
            if (user.getRoles() != null) {
                data.put("roles", user.getRoles());
            }

            db.collection("Users").document(user.getUserId())
                    .set(data, SetOptions.merge())
                    .addOnSuccessListener(aVoid -> {
                        userLiveData.setValue(user); // Cập nhật LiveData để phản ánh thay đổi
                        updateSuccessLiveData.setValue(true);
                    })
                    .addOnFailureListener(e -> errorLiveData.setValue("Lỗi cập nhật thông tin: " + e.getMessage()));
        }
    }
}

```

### src\main\java\com\uit\carrental\Service\UserAuthentication\RegisterActivity.java
```java
package com.uit.carrental.Service.UserAuthentication;

import android.app.ProgressDialog;
import android.content.Intent;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.app.AppCompatActivity;

import com.google.android.gms.auth.api.signin.GoogleSignIn;
import com.google.android.gms.auth.api.signin.GoogleSignInAccount;
import com.google.android.gms.auth.api.signin.GoogleSignInClient;
import com.google.android.gms.auth.api.signin.GoogleSignInOptions;
import com.google.android.gms.common.api.ApiException;
import com.google.android.gms.tasks.Task;
import com.google.android.material.snackbar.Snackbar;
import com.google.firebase.FirebaseApp;
import com.google.firebase.auth.AuthCredential;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseAuthException;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.auth.GoogleAuthProvider;
import com.google.firebase.firestore.DocumentReference;
import com.google.firebase.firestore.FirebaseFirestore;
import com.uit.carrental.Model.User;
import com.uit.carrental.R;

import java.util.HashMap;
import java.util.Map;

public class RegisterActivity extends AppCompatActivity {

    private static final String TAG = "RegisterActivity";
    private static final int RC_SIGN_IN = 406;
    private static final String ADMIN_EMAIL = "21522516@gm.uit.edu.vn";

    private EditText inputUsername, inputPhone, inputEmail, inputPass, inputConfirmPass;
    private Button btnSignUp;
    private ImageButton btnBack; // Thêm biến cho nút Back
    private LinearLayout btnFacebook, btnGoogle;
    private FirebaseAuth mAuth;
    private FirebaseFirestore dbUser;
    private GoogleSignInClient mGoogleSignInClient;
    private ProgressDialog progressDialog;
    private String username, phone, email, password, confirmPassword;
    private boolean isValid = true;
    private User user;

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_register);

        FirebaseApp.initializeApp(this);
        initViews();

        mAuth = FirebaseAuth.getInstance();
        dbUser = FirebaseFirestore.getInstance();
        progressDialog = new ProgressDialog(this);
        configureGoogleSignIn();

        btnBack.setOnClickListener(v -> finish()); // Xử lý sự kiện nhấn nút Back
        btnSignUp.setOnClickListener(view -> {
            checkPassword();
            if (isValid) {
                createAccount();
            }
        });

        btnFacebook.setOnClickListener(view -> {
            Toast.makeText(this, "Đăng nhập với Facebook chưa được triển khai.", Toast.LENGTH_SHORT).show();
        });

        btnGoogle.setOnClickListener(view -> loginWithGoogle());
    }

    private void initViews() {
        inputUsername = findViewById(R.id.username_input);
        inputPhone = findViewById(R.id.phone_input);
        inputEmail = findViewById(R.id.email_input);
        inputPass = findViewById(R.id.password_input);
        inputConfirmPass = findViewById(R.id.confirm_password_input);
        btnSignUp = findViewById(R.id.btn_signUp2);
        btnBack = findViewById(R.id.btn_back); // Ánh xạ nút Back
        btnFacebook = findViewById(R.id.facebook_button);
        btnGoogle = findViewById(R.id.google_button);
    }

    private void configureGoogleSignIn() {
        GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
                .requestIdToken(getString(R.string.default_web_client_id))
                .requestEmail()
                .build();
        mGoogleSignInClient = GoogleSignIn.getClient(this, gso);
    }

    private void checkPassword() {
        password = inputPass.getText().toString().trim();
        confirmPassword = inputConfirmPass.getText().toString().trim();
        if (TextUtils.isEmpty(password)) {
            inputPass.setError("Vui lòng nhập mật khẩu");
            inputPass.requestFocus();
            isValid = false;
        } else if (!password.equals(confirmPassword)) {
            inputConfirmPass.setError("Mật khẩu không khớp");
            inputConfirmPass.requestFocus();
            isValid = false;
        } else if (password.length() < 6) {
            inputPass.setError("Mật khẩu phải có ít nhất 6 ký tự");
            inputPass.requestFocus();
            isValid = false;
        } else {
            isValid = true;
        }
    }

    private void createAccount() {
        username = inputUsername.getText().toString().trim();
        phone = inputPhone.getText().toString().trim();
        email = inputEmail.getText().toString().trim().toLowerCase();
        password = inputPass.getText().toString().trim();

        if (!validateForm()) return;

        progressDialog.setMessage("Đang tạo tài khoản...");
        progressDialog.show();

        mAuth.createUserWithEmailAndPassword(email, password)
                .addOnCompleteListener(task -> {
                    if (task.isSuccessful()) {
                        sendVerificationEmail();
                    } else {
                        progressDialog.dismiss();
                        String errorMessage = "Không thể tạo tài khoản.";
                        if (task.getException() instanceof FirebaseAuthException) {
                            FirebaseAuthException e = (FirebaseAuthException) task.getException();
                            switch (e.getErrorCode()) {
                                case "ERROR_EMAIL_ALREADY_IN_USE":
                                    errorMessage = "Email đã được sử dụng.";
                                    inputEmail.setError(errorMessage);
                                    inputEmail.requestFocus();
                                    break;
                                case "ERROR_INVALID_EMAIL":
                                    errorMessage = "Email không hợp lệ.";
                                    inputEmail.setError(errorMessage);
                                    inputEmail.requestFocus();
                                    break;
                                case "ERROR_WEAK_PASSWORD":
                                    errorMessage = "Mật khẩu quá yếu.";
                                    break;
                                default:
                                    errorMessage = e.getMessage();
                            }
                        }
                        Toast.makeText(RegisterActivity.this, errorMessage, Toast.LENGTH_SHORT).show();
                    }
                });
    }

    private void sendVerificationEmail() {
        FirebaseUser firebaseUser = mAuth.getCurrentUser();
        if (firebaseUser != null) {
            firebaseUser.sendEmailVerification()
                    .addOnCompleteListener(task -> {
                        if (task.isSuccessful()) {
                            Toast.makeText(this, "Đã gửi email xác nhận đến " + email, Toast.LENGTH_LONG).show();
                            createUserDocument();
                        } else {
                            progressDialog.dismiss();
                            Toast.makeText(this, "Gửi email xác nhận thất bại: " + task.getException().getMessage(), Toast.LENGTH_SHORT).show();
                        }
                    });
        }
    }

    private void createUserDocument() {
        user = new User();
        user.setUserId(mAuth.getCurrentUser().getUid());
        user.setUsername(username);
        user.setEmail(email);
        user.setPhoneNumber(phone);

        Map<String, Boolean> roleMap = new HashMap<>();
        roleMap.put("customer", true);
        roleMap.put("owner", true);
        roleMap.put("admin", email.equalsIgnoreCase(ADMIN_EMAIL));
        user.setRoles(roleMap);
        user.setCurrentRole(email.equalsIgnoreCase(ADMIN_EMAIL) ? "admin" : "customer");

        DocumentReference newUserRef = dbUser.collection("Users").document(user.getUserId());

        newUserRef.set(user).addOnCompleteListener(task -> {
            progressDialog.dismiss();
            if (task.isSuccessful()) {
                Toast.makeText(this, "Đăng ký thành công. Vui lòng đăng nhập.", Toast.LENGTH_LONG).show();
                Intent intent = new Intent(RegisterActivity.this, LoginActivity.class);
                startActivity(intent);
                finish();
            } else {
                View parentLayout = findViewById(android.R.id.content);
                Snackbar.make(parentLayout, "Tạo tài liệu người dùng thất bại: " + task.getException().getMessage(), Snackbar.LENGTH_LONG).show();
            }
        });
    }

    private boolean validateForm() {
        boolean valid = true;
        if (TextUtils.isEmpty(username)) {
            inputUsername.setError("Tên đăng nhập bắt buộc.");
            inputUsername.requestFocus();
            valid = false;
        }
        if (TextUtils.isEmpty(phone)) {
            inputPhone.setError("Số điện thoại bắt buộc.");
            inputPhone.requestFocus();
            valid = false;
        } else if (!phone.matches("^(0|\\+84)(\\s|\\.)?((3[2-9])|(5[689])|(7[06-9])|(8[1-689])|(9[0-46-9]))(\\d)(\\s|\\.)?(\\d{3})(\\s|\\.)?(\\d{3})$")) {
            inputPhone.setError("Số điện thoại không hợp lệ.");
            inputPhone.requestFocus();
            valid = false;
        }
        if (TextUtils.isEmpty(email)) {
            inputEmail.setError("Email bắt buộc.");
            inputEmail.requestFocus();
            valid = false;
        } else if (!email.matches("^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$")) {
            inputEmail.setError("Email không hợp lệ.");
            inputEmail.requestFocus();
            valid = false;
        }
        if (TextUtils.isEmpty(password)) {
            inputPass.setError("Mật khẩu bắt buộc.");
            inputPass.requestFocus();
            valid = false;
        }
        return valid;
    }

    private void loginWithGoogle() {
        Intent signInIntent = mGoogleSignInClient.getSignInIntent();
        startActivityForResult(signInIntent, RC_SIGN_IN);
    }

    @Override
    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode == RC_SIGN_IN) {
            Task<GoogleSignInAccount> task = GoogleSignIn.getSignedInAccountFromIntent(data);
            try {
                GoogleSignInAccount account = task.getResult(ApiException.class);
                firebaseAuthWithGoogle(account);
            } catch (ApiException e) {
                Toast.makeText(this, "Đăng nhập Google thất bại: " + e.getMessage(), Toast.LENGTH_SHORT).show();
            }
        }
    }

    private void firebaseAuthWithGoogle(GoogleSignInAccount acct) {
        AuthCredential credential = GoogleAuthProvider.getCredential(acct.getIdToken(), null);
        mAuth.signInWithCredential(credential)
                .addOnCompleteListener(task -> {
                    if (task.isSuccessful()) {
                        username = acct.getDisplayName() != null ? acct.getDisplayName() : "";
                        email = acct.getEmail();
                        phone = "";
                        createUserDocument();
                    } else {
                        Toast.makeText(this, "Đăng nhập Google thất bại: " + task.getException().getMessage(), Toast.LENGTH_SHORT).show();
                    }
                });
    }
}

```

### src\main\java\com\uit\carrental\Service\UserAuthentication\UpdatePassword.java
```java
package com.uit.carrental.Service.UserAuthentication;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import com.uit.carrental.R;
import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.AuthCredential;
import com.google.firebase.auth.EmailAuthProvider;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;

public class UpdatePassword extends AppCompatActivity {

    private FirebaseUser user;
    private EditText currentPass, newPass, confirmPass;
    private String current, newPassword, confirmNew;
    private Button btnContinue;
    private Boolean isValid = true;

    private void init()
    {
        currentPass = findViewById(R.id.input_password);
        newPass = findViewById(R.id.input_new_password);
        confirmPass = findViewById(R.id.reinput_new_password);
        btnContinue = findViewById(R.id.btn_continue);

        user = FirebaseAuth.getInstance().getCurrentUser();
    }

    private void getPass()
    {
        current = currentPass.getText().toString();
        newPassword = newPass.getText().toString();
        confirmNew = confirmPass.getText().toString();
        checkPassword();
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_update_password);

        init();

        btnContinue.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                getPass();

                AuthCredential credential = EmailAuthProvider.getCredential(user.getEmail(), current);

                if(isValid)
                {
                    user.reauthenticate(credential)
                        .addOnCompleteListener(new OnCompleteListener<Void>() {
                            @Override
                            public void onComplete(@NonNull Task<Void> task) {
                                if (task.isSuccessful()) {
                                    // Mật khẩu hiện tại đã được xác thực thành công
                                    user.updatePassword(newPassword)
                                            .addOnCompleteListener(new OnCompleteListener<Void>() {
                                                @Override
                                                public void onComplete(@NonNull Task<Void> task) {
                                                    if (task.isSuccessful()) {
                                                        Toast.makeText(UpdatePassword.this, "Thay đổi mật khẩu thành công",Toast.LENGTH_LONG).show();
                                                        finish();
                                                    } else {
                                                        Toast.makeText(UpdatePassword.this, "Đã xảy ra lỗi trong quá trình thay đổi mật khẩu",Toast.LENGTH_LONG).show();
                                                    }
                                                }
                                            });
                                } else {
                                    Toast.makeText(UpdatePassword.this, "Mật khẩu hiện tại không chính xác",Toast.LENGTH_LONG).show();
                                }
                            }
                        });
                }
            }
        });
    }

    private void checkPassword() {

        if (!newPassword.equals(confirmNew))
        {
            Toast.makeText(this,"Mật khẩu không khớp, mời nhập lại",Toast.LENGTH_LONG).show();
            newPass.setText("");
            confirmPass.setText("");
            isValid = false;
        }
        else if(newPassword.isEmpty())
        {
            Toast.makeText(this,"Vui lòng nhập mật khẩu",Toast.LENGTH_LONG).show();
            newPass.setText("");
            confirmPass.setText("");
            isValid = false;
        }
    }
}
```

### src\main\java\com\uit\carrental\Service\UserAuthentication\UserProfile.java
```java
package com.uit.carrental.Service.UserAuthentication;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;
import androidx.lifecycle.LiveData;
import androidx.lifecycle.MutableLiveData;
import androidx.lifecycle.ViewModel;
import androidx.lifecycle.ViewModelProvider;

import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.firestore.DocumentReference;
import com.google.firebase.firestore.FirebaseFirestore;
import com.squareup.picasso.Picasso;
import com.uit.carrental.Model.User;
import com.uit.carrental.R;

import de.hdodenhof.circleimageview.CircleImageView;

public class UserProfile extends AppCompatActivity {

    private static final String MOCK_AVATAR = "https://media4.giphy.com/media/v1.Y2lkPTZjMDliOTUyd2owNnAxcXR5YmJhMmh3ZDlvY3hoOXFhaWN2aXY3cm1tMXkwMnBlNyZlcD12MV9naWZzX3NlYXJjaCZjdD1n/FY8c5SKwiNf1EtZKGs/giphy_s.gif";

    private Button btnUpdate;
    private ImageView backButton, imgFrontCCCD, imgBehindCCCD, imgLicense;
    private CircleImageView imgAvatar;
    private TextView tvName, tvEmail, tvPhone, tvAddress, tvCity, tvBirthday;
    private ProfileViewModel viewModel;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_profile_management);

        initViews();
        initViewModel();
        observeLiveData();

        backButton.setOnClickListener(v -> {
            finish();
            overridePendingTransition(0, 0);
        });

        btnUpdate.setOnClickListener(v -> {
            Intent intent = new Intent(UserProfile.this, ProfileManagement.class);
            startActivity(intent);
            overridePendingTransition(0, 0);
        });
    }

    private void initViews() {
        btnUpdate = findViewById(R.id.btn_update);
        backButton = findViewById(R.id.back_button);
        imgAvatar = findViewById(R.id.img_avatar);
        imgFrontCCCD = findViewById(R.id.img_front_CCCD);
        imgBehindCCCD = findViewById(R.id.img_behind_CCCD);
        imgLicense = findViewById(R.id.img_license);
        tvName = findViewById(R.id.fullname);
        tvEmail = findViewById(R.id.email);
        tvPhone = findViewById(R.id.phone);
        tvAddress = findViewById(R.id.address);
        tvCity = findViewById(R.id.city);
        tvBirthday = findViewById(R.id.birthday);
    }

    private void initViewModel() {
        viewModel = new ViewModelProvider(this).get(ProfileViewModel.class);
        viewModel.loadUserData();
    }

    private void observeLiveData() {
        viewModel.getUserLiveData().observe(this, user -> {
            if (user != null) {
                tvName.setText(user.getUsername());
                tvEmail.setText(user.getEmail());
                tvPhone.setText(user.getPhoneNumber());
                tvAddress.setText(user.getAddress());
                tvCity.setText(user.getCity());
                tvBirthday.setText(user.getBirthday());

                if (user.getAvatarUrl() != null && !user.getAvatarUrl().isEmpty()) {
                    Picasso.get().load(user.getAvatarUrl()).into(imgAvatar);
                } else {
                    Picasso.get().load(MOCK_AVATAR).into(imgAvatar);
                }

                if (user.getCiCardFront() != null && !user.getCiCardFront().isEmpty()) {
                    Picasso.get().load(user.getCiCardFront()).into(imgFrontCCCD);
                } else {
                    imgFrontCCCD.setImageDrawable(null); // Không hiển thị ảnh nếu không có dữ liệu
                }

                if (user.getCiCardBehind() != null && !user.getCiCardBehind().isEmpty()) {
                    Picasso.get().load(user.getCiCardBehind()).into(imgBehindCCCD);
                } else {
                    imgBehindCCCD.setImageDrawable(null); // Không hiển thị ảnh nếu không có dữ liệu
                }

                if (user.getLicenseUrl() != null && !user.getLicenseUrl().isEmpty()) {
                    Picasso.get().load(user.getLicenseUrl()).into(imgLicense);
                } else {
                    imgLicense.setImageDrawable(null); // Không hiển thị ảnh nếu không có dữ liệu
                }
            }
        });

        viewModel.getErrorLiveData().observe(this, error -> {
            if (error != null) {
                Toast.makeText(UserProfile.this, error, Toast.LENGTH_LONG).show();
                Picasso.get().load(MOCK_AVATAR).into(imgAvatar);
                imgFrontCCCD.setImageDrawable(null);
                imgBehindCCCD.setImageDrawable(null);
                imgLicense.setImageDrawable(null);
            }
        });
    }

    public static class ProfileViewModel extends ViewModel {
        private final FirebaseFirestore db;
        private final FirebaseUser firebaseUser;
        private final MutableLiveData<User> userLiveData;
        private final MutableLiveData<String> errorLiveData;

        public ProfileViewModel() {
            db = FirebaseFirestore.getInstance();
            firebaseUser = FirebaseAuth.getInstance().getCurrentUser();
            userLiveData = new MutableLiveData<>();
            errorLiveData = new MutableLiveData<>();
        }

        public LiveData<User> getUserLiveData() {
            return userLiveData;
        }

        public LiveData<String> getErrorLiveData() {
            return errorLiveData;
        }

        public void loadUserData() {
            if (firebaseUser == null) {
                errorLiveData.setValue("Người dùng chưa đăng nhập");
                return;
            }

            DocumentReference userRef = db.collection("Users").document(firebaseUser.getUid());
            userRef.addSnapshotListener((document, error) -> {
                if (error != null) {
                    errorLiveData.setValue("Lỗi tải thông tin: " + error.getMessage());
                    return;
                }
                if (document != null && document.exists()) {
                    User user = document.toObject(User.class);
                    userLiveData.setValue(user);
                } else {
                    errorLiveData.setValue("Không tìm thấy thông tin người dùng");
                }
            });
        }
    }
}

```

### src\main\java\com\uit\carrental\Service\UserAuthentication\ValidatePhoneActivity.java
```java
/**package com.example.carrenting.Service.UserAuthentication;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import com.example.carrenting.R;
import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.OnSuccessListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.FirebaseException;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.PhoneAuthCredential;
import com.google.firebase.auth.PhoneAuthOptions;
import com.google.firebase.auth.PhoneAuthProvider;
import com.google.firebase.firestore.DocumentReference;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.firestore.FirebaseFirestoreSettings;

import java.util.concurrent.TimeUnit;

public class ValidatePhoneActivity extends AppCompatActivity {

    private EditText otpNumberOne, getOtpNumberTwo, getOtpNumberThree, getOtpNumberFour, getOtpNumberFive, otpNumberSix;
    private Button btnSendCode;
    private TextView tvResend;
    private String mVerificationId;
    PhoneAuthProvider.ForceResendingToken mResendToken;
    String phoneNumber;
    Boolean otpValid = true;
    private FirebaseAuth mAuth;
    FirebaseAuth firebaseAuth;
    private FirebaseFirestore mDb;
    PhoneAuthCredential phoneAuthCredential;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_validate_phone);

        initUI();
        Intent data = getIntent();
        phoneNumber = data.getStringExtra("phone");

        firebaseAuth = FirebaseAuth.getInstance();
        mAuth = FirebaseAuth.getInstance();
        mDb = FirebaseFirestore.getInstance();

        if (phoneNumber.startsWith("0")) {
            phoneNumber = "+84" + phoneNumber.substring(1, phoneNumber.length());
        }
        Log.wtf("Phone Number", "Phone number is : " + phoneNumber);
        btnSendCode.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {

                validateField(otpNumberOne);
                validateField(getOtpNumberTwo);
                validateField(getOtpNumberThree);
                validateField(getOtpNumberFour);
                validateField(getOtpNumberFive);
                validateField(otpNumberSix);

                if(otpValid) {
                    // send otp to the user
                    String otp = otpNumberOne.getText().toString() + getOtpNumberTwo.getText().toString() + getOtpNumberThree.getText().toString() + getOtpNumberFour.getText().toString() + getOtpNumberFive.getText().toString() + otpNumberSix.getText().toString();

                    PhoneAuthCredential credential = PhoneAuthProvider.getCredential(mVerificationId, otp);

                    verifyAuthentication(credential);

                    FirebaseFirestoreSettings settings = new FirebaseFirestoreSettings.Builder()
                            .build();
                    mDb.setFirestoreSettings(settings);
                    DocumentReference newUserRef = mDb
                            .collection(getString(R.string.collection_users))
                            .document(FirebaseAuth.getInstance().getUid());

                    newUserRef.update("phoneNumber", phoneNumber).addOnCompleteListener(new OnCompleteListener<Void>() {
                        @Override
                        public void onComplete(@NonNull Task<Void> task) {
                            if(task.isSuccessful()){


                                //Toast.makeText(ValidatePhoneActivity.this, "Update phone number successful", Toast.LENGTH_LONG).show();

                                Intent intent = new Intent(ValidatePhoneActivity.this, CCCDActivity.class);
                                startActivity(intent);
                            }
                        }
                    });
                }
            }
        });


        SendOtpCode(phoneNumber);

        tvResend.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ReSendOtpCode(phoneNumber);
          }

        });

    }

    private void VerifyPhoneNumber(String phoneNumber){
        PhoneAuthOptions options = PhoneAuthOptions.newBuilder(mAuth)
                .setPhoneNumber(phoneNumber)
                .setTimeout(15L, TimeUnit.SECONDS)
                .setActivity(this)
                .setCallbacks(new PhoneAuthProvider.OnVerificationStateChangedCallbacks() {
                    @Override
                    public void onVerificationCompleted(@NonNull PhoneAuthCredential phoneAuthCredential) {
                        verifyAuthentication(phoneAuthCredential);
                        tvResend.setVisibility(View.GONE);
                    }
                    @Override
                    public void onVerificationFailed(@NonNull FirebaseException e) {
                        Toast.makeText(ValidatePhoneActivity.this, "OTP Verification Failed.", Toast.LENGTH_SHORT).show();
                    }
                    @Override
                    public void onCodeSent(@NonNull String verificationId, @NonNull PhoneAuthProvider.ForceResendingToken forceResendingToken) {
                        super.onCodeSent(verificationId, forceResendingToken);
                        Toast.makeText(ValidatePhoneActivity.this, "Đã gửi OTP xác thực", Toast.LENGTH_SHORT).show();
                        mVerificationId = verificationId;
                        mResendToken = forceResendingToken;
                        tvResend.setVisibility(View.GONE);

                    }
                    @Override
                    public void onCodeAutoRetrievalTimeOut(@NonNull String s) {
                        super.onCodeAutoRetrievalTimeOut(s);
                        tvResend.setVisibility(View.VISIBLE);
                    }
                })
                .build();
        PhoneAuthProvider.verifyPhoneNumber(options);
    }
    private void ReSendOtpCode(String phoneNumber) {
        VerifyPhoneNumber(phoneNumber);
    }

    private void SendOtpCode(String phoneNumber) {
        VerifyPhoneNumber(phoneNumber);
    }
    public void verifyAuthentication(PhoneAuthCredential credential){
        firebaseAuth.getCurrentUser()
                .linkWithCredential(credential)
                .addOnSuccessListener(new OnSuccessListener<AuthResult>() {
            @Override
            public void onSuccess(AuthResult authResult) {
                // send to dashboard.
                Toast.makeText(ValidatePhoneActivity.this, "Đã gửi OTP xác thực", Toast.LENGTH_SHORT).show();
            }
        });
    }

    public void validateField(EditText field){
        if(field.getText().toString().isEmpty()){
            field.setError("Cần nhập OTP");
            otpValid = false;
        }else {
            otpValid = true;
        }
    }
    private void initUI() {
        otpNumberOne = findViewById(R.id.otpNumberOne);
        getOtpNumberTwo = findViewById(R.id.otpNumberTwo);
        getOtpNumberThree = findViewById(R.id.otpNumberThree);
        getOtpNumberFour = findViewById(R.id.otpNumberFour);
        getOtpNumberFive = findViewById(R.id.otpNumberFive);
        otpNumberSix = findViewById(R.id.optNumberSix);
        btnSendCode = findViewById(R.id.btn_signup);
        tvResend = findViewById(R.id.tvResend);
    }
}
**/

package com.uit.carrental.Service.UserAuthentication;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import com.uit.carrental.R;
import com.google.android.gms.tasks.OnSuccessListener;
import com.google.firebase.FirebaseException;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.PhoneAuthCredential;
import com.google.firebase.auth.PhoneAuthOptions;
import com.google.firebase.auth.PhoneAuthProvider;
import com.google.firebase.firestore.FirebaseFirestore;

import java.util.concurrent.TimeUnit;

public class ValidatePhoneActivity extends AppCompatActivity {

    private EditText otpNumberOne, getOtpNumberTwo, getOtpNumberThree, getOtpNumberFour, getOtpNumberFive, otpNumberSix;
    private Button btnSendCode;
    private TextView tvResend;
    private String mVerificationId;
    PhoneAuthProvider.ForceResendingToken mResendToken;
    String phoneNumber;
    Boolean otpValid = true;
    private FirebaseAuth mAuth;
    FirebaseAuth firebaseAuth;
    private FirebaseFirestore mDb;
    PhoneAuthCredential phoneAuthCredential;

    boolean bypassTestMode = false; // Dùng để bỏ qua xác thực OTP khi cần test

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_validate_phone);

        initUI();
        Intent data = getIntent();
        phoneNumber = data.getStringExtra("phone");

        firebaseAuth = FirebaseAuth.getInstance();
        mAuth = FirebaseAuth.getInstance();
        mDb = FirebaseFirestore.getInstance();

        if (phoneNumber.startsWith("0")) {
            phoneNumber = "+84" + phoneNumber.substring(1);
        }

        if (phoneNumber.equals("+84965853014")) {
            bypassTestMode = true;
            Toast.makeText(this, "Test mode enabled, skipping OTP", Toast.LENGTH_SHORT).show();

            mDb.collection(getString(R.string.collection_users))
                    .document(FirebaseAuth.getInstance().getUid())
                    .update("phoneNumber", phoneNumber)
                    .addOnCompleteListener(task -> {
                        if (task.isSuccessful()) {
                            startActivity(new Intent(this, CCCDActivity.class));
                            finish();
                        }
                    });
            return;
        }

        SendOtpCode(phoneNumber);

        btnSendCode.setOnClickListener(view -> {
            if (bypassTestMode) return;

            validateField(otpNumberOne);
            validateField(getOtpNumberTwo);
            validateField(getOtpNumberThree);
            validateField(getOtpNumberFour);
            validateField(getOtpNumberFive);
            validateField(otpNumberSix);

            if (otpValid) {
                String otp = otpNumberOne.getText().toString()
                        + getOtpNumberTwo.getText().toString()
                        + getOtpNumberThree.getText().toString()
                        + getOtpNumberFour.getText().toString()
                        + getOtpNumberFive.getText().toString()
                        + otpNumberSix.getText().toString();

                if (mVerificationId == null || otp.isEmpty()) {
                    Toast.makeText(this, "Không thể tạo PhoneAuthCredential: thiếu mã OTP.", Toast.LENGTH_SHORT).show();
                    return;
                }

                PhoneAuthCredential credential = PhoneAuthProvider.getCredential(mVerificationId, otp);
                verifyAuthentication(credential);

                mDb.collection(getString(R.string.collection_users))
                        .document(FirebaseAuth.getInstance().getUid())
                        .update("phoneNumber", phoneNumber)
                        .addOnCompleteListener(task -> {
                            if (task.isSuccessful()) {
                                startActivity(new Intent(this, CCCDActivity.class));
                            }
                        });
            }
        });

        tvResend.setOnClickListener(view -> ReSendOtpCode(phoneNumber));
    }

    private void VerifyPhoneNumber(String phoneNumber){
        PhoneAuthOptions options = PhoneAuthOptions.newBuilder(mAuth)
                .setPhoneNumber(phoneNumber)
                .setTimeout(15L, TimeUnit.SECONDS)
                .setActivity(this)
                .setCallbacks(new PhoneAuthProvider.OnVerificationStateChangedCallbacks() {
                    @Override
                    public void onVerificationCompleted(@NonNull PhoneAuthCredential phoneAuthCredential) {
                        verifyAuthentication(phoneAuthCredential);
                        tvResend.setVisibility(View.GONE);
                    }
                    @Override
                    public void onVerificationFailed(@NonNull FirebaseException e) {
                        Toast.makeText(ValidatePhoneActivity.this, "OTP Verification Failed.", Toast.LENGTH_SHORT).show();
                    }
                    @Override
                    public void onCodeSent(@NonNull String verificationId, @NonNull PhoneAuthProvider.ForceResendingToken forceResendingToken) {
                        super.onCodeSent(verificationId, forceResendingToken);
                        Toast.makeText(ValidatePhoneActivity.this, "Đã gửi OTP xác thực", Toast.LENGTH_SHORT).show();
                        mVerificationId = verificationId;
                        mResendToken = forceResendingToken;
                        tvResend.setVisibility(View.GONE);
                    }
                    @Override
                    public void onCodeAutoRetrievalTimeOut(@NonNull String s) {
                        super.onCodeAutoRetrievalTimeOut(s);
                        tvResend.setVisibility(View.VISIBLE);
                    }
                })
                .build();
        PhoneAuthProvider.verifyPhoneNumber(options);
    }

    private void ReSendOtpCode(String phoneNumber) {
        VerifyPhoneNumber(phoneNumber);
    }

    private void SendOtpCode(String phoneNumber) {
        VerifyPhoneNumber(phoneNumber);
    }

    public void verifyAuthentication(PhoneAuthCredential credential){
        firebaseAuth.getCurrentUser()
                .linkWithCredential(credential)
                .addOnSuccessListener(new OnSuccessListener<AuthResult>() {
                    @Override
                    public void onSuccess(AuthResult authResult) {
                        Toast.makeText(ValidatePhoneActivity.this, "Đã gửi OTP xác thực", Toast.LENGTH_SHORT).show();
                    }
                });
    }

    public void validateField(EditText field){
        if(field.getText().toString().isEmpty()){
            field.setError("Cần nhập OTP");
            otpValid = false;
        }else {
            otpValid = true;
        }
    }

    private void initUI() {
        otpNumberOne = findViewById(R.id.otpNumberOne);
        getOtpNumberTwo = findViewById(R.id.otpNumberTwo);
        getOtpNumberThree = findViewById(R.id.otpNumberThree);
        getOtpNumberFour = findViewById(R.id.otpNumberFour);
        getOtpNumberFive = findViewById(R.id.otpNumberFive);
        otpNumberSix = findViewById(R.id.optNumberSix);
        btnSendCode = findViewById(R.id.btn_signup);
        tvResend = findViewById(R.id.tvResend);
    }
}
```

### src\main\java\com\uit\carrental\Service\Vehicle\AddVehicleActivity.java
```java
package com.uit.carrental.Service.Vehicle;

import android.app.ProgressDialog;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.text.TextUtils;
import android.util.Log;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.Toast;
import androidx.activity.result.ActivityResultCallback;
import androidx.activity.result.ActivityResultLauncher;
import androidx.activity.result.contract.ActivityResultContracts;
import androidx.appcompat.app.AppCompatActivity;
import com.google.firebase.Timestamp;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.firestore.DocumentReference;
import com.google.firebase.firestore.FirebaseFirestore;
import com.uit.carrental.Model.Vehicle;
import com.uit.carrental.R;
import com.uit.carrental.Service.Api.CloudinaryApi;
import java.util.HashMap;
import java.util.Map;

public class AddVehicleActivity extends AppCompatActivity {

    private static final String TAG = "AddVehicleActivity";
    private FirebaseUser firebaseUser;
    private String vehicleImageUrl, documentImageUrl;
    private Uri vehicleImageUri, documentImageUri;
    private EditText vehicleName, vehicleSeats, vehiclePrice, vehicleNumber, vehicleBrand, fuelType, maxSpeed, transmission, doorsAndSeats;
    private Button btnAdd;
    private ImageButton btnBack;
    private ImageView vehicleImgView, documentImgView;
    private FirebaseFirestore db;
    private Vehicle vehicle;
    private ProgressDialog progressDialog;

    ActivityResultLauncher<String> pickVehicleImage = registerForActivityResult(
            new ActivityResultContracts.GetContent(),
            new ActivityResultCallback<Uri>() {
                @Override
                public void onActivityResult(Uri result) {
                    if (result != null) {
                        vehicleImageUri = result;
                        vehicleImgView.setImageURI(result);
                    }
                }
            });

    ActivityResultLauncher<String> pickDocumentImage = registerForActivityResult(
            new ActivityResultContracts.GetContent(),
            new ActivityResultCallback<Uri>() {
                @Override
                public void onActivityResult(Uri result) {
                    if (result != null) {
                        documentImageUri = result;
                        documentImgView.setImageURI(result);
                    }
                }
            });

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_add_vehicle);
        if (getSupportActionBar() != null) getSupportActionBar().hide();

        init();

        btnBack.setOnClickListener(v -> finish());
        btnAdd.setOnClickListener(view -> {
            if (fullFill()) {
                if (vehicleImageUri != null && documentImageUri != null) {
                    uploadImagesAndAddVehicle();
                } else {
                    toast("Vui lòng chọn cả ảnh xe và giấy tờ xe.");
                }
            } else {
                toast("Vui lòng nhập đầy đủ thông tin.");
            }
        });

        vehicleImgView.setOnClickListener(v -> pickVehicleImage.launch("image/*"));
        documentImgView.setOnClickListener(v -> pickDocumentImage.launch("image/*"));
    }

    private void init() {
        vehicleName = findViewById(R.id.et_name);
        vehicleSeats = findViewById(R.id.et_seats);
        vehiclePrice = findViewById(R.id.et_price);
        vehicleNumber = findViewById(R.id.et_number);
        vehicleBrand = findViewById(R.id.et_brand);
        fuelType = findViewById(R.id.et_fuel_type);
        maxSpeed = findViewById(R.id.et_max_speed);
        transmission = findViewById(R.id.et_transmission);
        doorsAndSeats = findViewById(R.id.et_doors_and_seats);
        vehicleImgView = findViewById(R.id.vehicle_img_view);
        documentImgView = findViewById(R.id.document_img_view);
        btnAdd = findViewById(R.id.btn_add);
        btnBack = findViewById(R.id.btn_back);

        try {
            db = FirebaseFirestore.getInstance();
            firebaseUser = FirebaseAuth.getInstance().getCurrentUser();
            if (firebaseUser == null) {
                toast("Người dùng chưa đăng nhập");
                finish();
            }
            vehicle = new Vehicle();
        } catch (Exception e) {
            Log.e(TAG, "Lỗi khởi tạo Firebase: " + e.getMessage());
            toast("Lỗi khởi tạo Firebase: " + e.getMessage());
            finish();
        }

        CloudinaryApi.init(this);
    }

    private void uploadImagesAndAddVehicle() {
        if (vehicleImageUri == null || documentImageUri == null) {
            toast("Vui lòng chọn cả ảnh xe và giấy tờ xe.");
            return;
        }

        progressDialog = ProgressDialog.show(this, "Đang tải ảnh", "Vui lòng chờ...", true);

        // Tải ảnh xe
        CloudinaryApi.uploadImage(this, vehicleImageUri, new CloudinaryApi.UploadCallbackCustom() {
            @Override
            public void onSuccess(String url) {
                vehicleImageUrl = url;
                uploadDocumentImage();
            }

            @Override
            public void onFailure(Exception e) {
                if (progressDialog != null) progressDialog.dismiss();
                Log.e(TAG, "Lỗi tải ảnh xe: " + e.getMessage());
                toast("Lỗi tải ảnh xe: " + e.getMessage());
            }
        });
    }

    private void uploadDocumentImage() {
        CloudinaryApi.uploadImage(this, documentImageUri, new CloudinaryApi.UploadCallbackCustom() {
            @Override
            public void onSuccess(String url) {
                documentImageUrl = url;
                if (progressDialog != null) progressDialog.dismiss();
                if (vehicleImageUrl != null && documentImageUrl != null) {
                    addVehicle();
                } else {
                    toast("Lỗi: Không nhận được URL ảnh.");
                }
            }

            @Override
            public void onFailure(Exception e) {
                if (progressDialog != null) progressDialog.dismiss();
                Log.e(TAG, "Lỗi tải ảnh giấy tờ: " + e.getMessage());
                toast("Lỗi tải ảnh giấy tờ: " + e.getMessage());
            }
        });
    }

    private void addVehicle() {
        if (db == null) {
            toast("Lỗi Firebase Firestore, không thể thêm xe.");
            return;
        }

        vehicle.setVehicleName(vehicleName.getText().toString().trim());
        vehicle.setVehicleSeats(vehicleSeats.getText().toString().trim());
        vehicle.setVehiclePrice(vehiclePrice.getText().toString().trim() + " VND");
        vehicle.setVehicleNumber(vehicleNumber.getText().toString().trim());
        vehicle.setVehicleBrand(vehicleBrand.getText().toString().trim());
        vehicle.setFuelType(fuelType.getText().toString().trim());
        vehicle.setMaxSpeed(maxSpeed.getText().toString().trim());
        vehicle.setTransmission(transmission.getText().toString().trim());
        vehicle.setDoorsAndSeats(doorsAndSeats.getText().toString().trim());
        vehicle.setVehicleAvailability("pending");
        vehicle.setVehicleImageUrl(vehicleImageUrl);
        vehicle.setDocumentImageUrl(documentImageUrl);
        vehicle.setVerificationStatus("pending");
        vehicle.setCreatedAt(Timestamp.now());
        if (firebaseUser != null) {
            vehicle.setOwnerId(firebaseUser.getUid());
        } else {
            toast("Không thể thêm xe: Người dùng chưa đăng nhập.");
            return;
        }

        progressDialog = ProgressDialog.show(this, "Đang thêm xe", "Vui lòng chờ...", true);

        db.collection("Vehicles")
                .add(vehicle)
                .addOnSuccessListener(documentReference -> {
                    String vehicleId = documentReference.getId();
                    vehicle.setVehicleId(vehicleId);
                    updateVehicleId(vehicleId);
                    createAdminNotification(vehicleId);
                    if (progressDialog != null) progressDialog.dismiss();
                    toast("Xe đã được thêm thành công, đang chờ duyệt.");
                    setResult(RESULT_OK); // Gửi tín hiệu thành công
                    finish(); // Kết thúc activity
                })
                .addOnFailureListener(e -> {
                    if (progressDialog != null) progressDialog.dismiss();
                    Log.e(TAG, "Thêm xe thất bại: " + e.getMessage());
                    toast("Thêm xe thất bại: " + e.getMessage());
                });
    }

    private void updateVehicleId(String vehicleId) {
        Map<String, Object> data = new HashMap<>();
        data.put("vehicleId", vehicleId);

        db.collection("Vehicles").document(vehicleId)
                .update(data)
                .addOnSuccessListener(aVoid -> Log.d(TAG, "Cập nhật ID xe thành công"))
                .addOnFailureListener(e -> Log.e(TAG, "Cập nhật ID xe thất bại: " + e.getMessage()));
    }

    private void createAdminNotification(String vehicleId) {
        Map<String, Object> notification = new HashMap<>();
        notification.put("title", "Xe mới chờ duyệt");
        notification.put("content", "Một xe mới (" + vehicle.getVehicleName() + ") đã được thêm, đang chờ duyệt.");
        notification.put("timestamp", Timestamp.now());
        notification.put("status", "unread");
        notification.put("type", "vehicle_verification");
        notification.put("vehicleId", vehicleId);
        notification.put("recipient", "admin");

        db.collection("Notifications")
                .add(notification)
                .addOnSuccessListener(documentReference -> Log.d(TAG, "Tạo thông báo cho admin thành công"))
                .addOnFailureListener(e -> Log.e(TAG, "Tạo thông báo cho admin thất bại: " + e.getMessage()));
    }

    private boolean fullFill() {
        boolean valid = true;
        if (TextUtils.isEmpty(vehicleName.getText().toString().trim())) {
            vehicleName.setError("Tên xe bắt buộc.");
            valid = false;
        }
        if (TextUtils.isEmpty(vehicleSeats.getText().toString().trim())) {
            vehicleSeats.setError("Số chỗ bắt buộc.");
            valid = false;
        } else {
            try {
                int seats = Integer.parseInt(vehicleSeats.getText().toString().trim());
                if (seats <= 0) {
                    vehicleSeats.setError("Số chỗ phải lớn hơn 0.");
                    valid = false;
                }
            } catch (NumberFormatException e) {
                vehicleSeats.setError("Số chỗ phải là số.");
                valid = false;
            }
        }
        if (TextUtils.isEmpty(vehiclePrice.getText().toString().trim())) {
            vehiclePrice.setError("Giá bắt buộc.");
            valid = false;
        } else {
            try {
                float price = Float.parseFloat(vehiclePrice.getText().toString().trim());
                if (price <= 0) {
                    vehiclePrice.setError("Giá phải lớn hơn 0.");
                    valid = false;
                }
            } catch (NumberFormatException e) {
                vehiclePrice.setError("Giá phải là số.");
                valid = false;
            }
        }
        if (TextUtils.isEmpty(vehicleNumber.getText().toString().trim())) {
            vehicleNumber.setError("Biển số xe bắt buộc.");
            valid = false;
        } else if (!vehicleNumber.getText().toString().trim().matches("^[0-9A-Z]{7,9}$")) {
            vehicleNumber.setError("Biển số xe không hợp lệ (7-9 ký tự số hoặc chữ).");
            valid = false;
        }
        if (TextUtils.isEmpty(vehicleBrand.getText().toString().trim())) {
            vehicleBrand.setError("Thương hiệu bắt buộc.");
            valid = false;
        }
        if (TextUtils.isEmpty(fuelType.getText().toString().trim())) {
            fuelType.setError("Loại nhiên liệu bắt buộc.");
            valid = false;
        }
        if (TextUtils.isEmpty(maxSpeed.getText().toString().trim())) {
            maxSpeed.setError("Tốc độ tối đa bắt buộc.");
            valid = false;
        } else {
            try {
                int speed = Integer.parseInt(maxSpeed.getText().toString().trim());
                if (speed <= 0) {
                    maxSpeed.setError("Tốc độ phải lớn hơn 0.");
                    valid = false;
                }
            } catch (NumberFormatException e) {
                maxSpeed.setError("Tốc độ phải là số.");
                valid = false;
            }
        }
        if (TextUtils.isEmpty(transmission.getText().toString().trim())) {
            transmission.setError("Hộp số bắt buộc.");
            valid = false;
        }
        if (TextUtils.isEmpty(doorsAndSeats.getText().toString().trim())) {
            doorsAndSeats.setError("Số cửa và ghế bắt buộc.");
            valid = false;
        }
        return valid;
    }

    private void toast(String txt) {
        Toast.makeText(getApplicationContext(), txt, Toast.LENGTH_LONG).show();
    }
}
```

### src\main\java\com\uit\carrental\Service\Vehicle\AdminVehicleDetailActivity.java
```java
package com.uit.carrental.Service.Vehicle;

import android.app.ProgressDialog;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;
import com.bumptech.glide.Glide;
import com.google.firebase.Timestamp;
import com.google.firebase.firestore.DocumentReference;
import com.google.firebase.firestore.FirebaseFirestore;
import com.uit.carrental.FragmentPages.Admin.RequestSupplementDialogFragment;
import com.uit.carrental.Model.User;
import com.uit.carrental.Model.Vehicle;
import com.uit.carrental.R;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;

public class AdminVehicleDetailActivity extends AppCompatActivity {

    private static final String TAG = "AdminVehicleDetail";
    private FirebaseFirestore db;
    private ProgressDialog progressDialog;
    private String vehicleId;
    private Vehicle vehicle;
    private TextView vehicleName, vehicleNumber, registrationDate, ownerName, verificationStatus;
    private TextView approveButtonText, rejectButtonText;
    private ImageView vehicleImage, documentImage, backButton; // Thêm backButton
    private LinearLayout approveButton, rejectButton;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_admin_vehicle_detail);

        initViews();
        db = FirebaseFirestore.getInstance();

        Intent intent = getIntent();
        vehicleId = intent.getStringExtra("vehicleId");
        if (vehicleId == null) {
            Toast.makeText(this, R.string.vehicle_not_found, Toast.LENGTH_SHORT).show();
            finish();
            return;
        }

        loadVehicleData();
    }

    private void initViews() {
        vehicleName = findViewById(R.id.ry1qg0h2dho);
        vehicleNumber = findViewById(R.id.ru72c47csbt);
        registrationDate = findViewById(R.id.r898i1ih4yvt);
        ownerName = findViewById(R.id.rucikt3pzv6);
        verificationStatus = findViewById(R.id.rac1kcrnb8f);
        vehicleImage = findViewById(R.id.rag6uycqqw4a);
        documentImage = findViewById(R.id.r9mpttg5k7eo);
        backButton = findViewById(R.id.rx7d0apsish); // Khởi tạo ImageView back
        approveButton = findViewById(R.id.r55jpwn8v3im);
        rejectButton = findViewById(R.id.rqczrg8gtglj);
        approveButtonText = findViewById(R.id.rnm7adnyh58b);
        rejectButtonText = findViewById(R.id.ruxnan76tqd);

        // Thêm sự kiện nhấn cho nút back
        backButton.setOnClickListener(v -> {
            Log.d(TAG, "Nút back được nhấn");
            finish(); // Quay lại giao diện trước
        });
    }

    private void loadVehicleData() {
        progressDialog = ProgressDialog.show(this, "Đang tải dữ liệu", "Vui lòng chờ...", true);

        DocumentReference vehicleRef = db.collection("Vehicles").document(vehicleId);
        vehicleRef.get().addOnSuccessListener(documentSnapshot -> {
            if (documentSnapshot.exists()) {
                vehicle = documentSnapshot.toObject(Vehicle.class);
                if (vehicle != null) {
                    displayVehicleData();
                    setupButtons();
                    loadOwnerData();
                } else {
                    Toast.makeText(this, "Không thể ánh xạ dữ liệu xe", Toast.LENGTH_SHORT).show();
                    finish();
                }
            } else {
                Toast.makeText(this, R.string.vehicle_not_found, Toast.LENGTH_SHORT).show();
                finish();
            }
            if (progressDialog != null) progressDialog.dismiss();
        }).addOnFailureListener(e -> {
            Log.e(TAG, "Lỗi tải dữ liệu xe: " + e.getMessage());
            Toast.makeText(this, R.string.load_vehicle_error, Toast.LENGTH_SHORT).show();
            if (progressDialog != null) progressDialog.dismiss();
            finish();
        });
    }

    private void displayVehicleData() {
        vehicleName.setText(vehicle.getVehicleName() != null ? vehicle.getVehicleName() : "Xe không tên");
        vehicleNumber.setText(vehicle.getVehicleNumber() != null ? vehicle.getVehicleNumber() : "Không có biển số");
        verificationStatus.setText(getVerificationStatusText(vehicle.getVerificationStatus()));
        if (vehicle.getCreatedAt() != null) {
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy", Locale.getDefault());
            registrationDate.setText(sdf.format(vehicle.getCreatedAt().toDate()));
        } else {
            registrationDate.setText("Không có ngày đăng");
        }

        if (vehicle.getVehicleImageUrl() != null && !vehicle.getVehicleImageUrl().isEmpty()) {
            Glide.with(this)
                    .load(vehicle.getVehicleImageUrl())
                    .placeholder(R.drawable.ic_car)
                    .into(vehicleImage);
        } else {
            vehicleImage.setImageResource(R.drawable.ic_car);
        }

        if (vehicle.getDocumentImageUrl() != null && !vehicle.getDocumentImageUrl().isEmpty()) {
            Glide.with(this)
                    .load(vehicle.getDocumentImageUrl())
                    .placeholder(R.drawable.ic_car).into(documentImage);
        } else {
            documentImage.setImageResource(R.drawable.ic_car);
        }
    }

    private void setupButtons() {
        if (vehicle.getVerificationStatus() != null && vehicle.getVerificationStatus().equals("verified")) {
            approveButtonText.setText("Ẩn xe");
            rejectButtonText.setText("Cảnh báo vi phạm");
            approveButton.setOnClickListener(v -> hideVehicle());
            rejectButton.setOnClickListener(v -> showViolationDialog());
        } else {
            approveButtonText.setText(R.string.confirm);
            rejectButtonText.setText(R.string.reject);
            approveButton.setOnClickListener(v -> approveVehicle());
            rejectButton.setOnClickListener(v -> showSupplementDialog());
        }
    }

    private void loadOwnerData() {
        if (vehicle.getOwnerId() == null) {
            ownerName.setText("Không có chủ xe");
            return;
        }

        DocumentReference ownerRef = db.collection("Users").document(vehicle.getOwnerId());
        ownerRef.get().addOnSuccessListener(documentSnapshot -> {
            if (documentSnapshot.exists()) {
                User owner = documentSnapshot.toObject(User.class);
                ownerName.setText(owner != null && owner.getUsername() != null ? owner.getUsername() : "Không có tên");
            } else {
                ownerName.setText("Không tìm thấy chủ xe");
            }
        }).addOnFailureListener(e -> {
            Log.e(TAG, "Lỗi tải dữ liệu chủ xe: " + e.getMessage());
            ownerName.setText("Lỗi tải chủ xe");
        });
    }

    private void approveVehicle() {
        progressDialog = ProgressDialog.show(this, "Đang duyệt xe", "Vui lòng chờ...", true);

        Map<String, Object> updates = new HashMap<>();
        updates.put("verificationStatus", "verified");
        updates.put("vehicleAvailability", "available");

        DocumentReference vehicleRef = db.collection("Vehicles").document(vehicleId);
        vehicleRef.update(updates).addOnSuccessListener(aVoid -> {
            sendNotification(vehicle.getOwnerId(), "Xe đã được duyệt",
                    "Xe " + vehicle.getVehicleName() + " của bạn đã được duyệt và sẵn sàng cho thuê.",
                    "vehicle_verification", vehicleId);
            Toast.makeText(this, "Xe đã được duyệt", Toast.LENGTH_SHORT).show();
            if (progressDialog != null) progressDialog.dismiss();
            finish();
        }).addOnFailureListener(e -> {
            Log.e(TAG, "Lỗi duyệt xe: " + e.getMessage());
            Toast.makeText(this, "Lỗi duyệt xe: " + e.getMessage(), Toast.LENGTH_SHORT).show();
            if (progressDialog != null) progressDialog.dismiss();
        });
    }

    private void hideVehicle() {
        progressDialog = ProgressDialog.show(this, "Đang ẩn xe", "Vui lòng chờ...", true);

        Map<String, Object> updates = new HashMap<>();
        updates.put("vehicleAvailability", "hidden");

        DocumentReference vehicleRef = db.collection("Vehicles").document(vehicleId);
        vehicleRef.update(updates).addOnSuccessListener(aVoid -> {
            sendNotification(vehicle.getOwnerId(), "Xe đã bị ẩn",
                    "Xe " + vehicle.getVehicleName() + " của bạn đã bị ẩn khỏi nền tảng.",
                    "vehicle_verification", vehicleId);
            Toast.makeText(this, "Xe đã bị ẩn", Toast.LENGTH_SHORT).show();
            if (progressDialog != null) progressDialog.dismiss();
            finish();
        }).addOnFailureListener(e -> {
            Log.e(TAG, "Lỗi ẩn xe: " + e.getMessage());
            Toast.makeText(this, "Lỗi ẩn xe: " + e.getMessage(), Toast.LENGTH_SHORT).show();
            if (progressDialog != null) progressDialog.dismiss();
        });
    }

    private void showSupplementDialog() {
        RequestSupplementDialogFragment dialog = RequestSupplementDialogFragment.newInstance(vehicle.getOwnerId(), vehicleId, "supplement_request_vehicle");
        dialog.setOnSubmitListener(message -> {
            Map<String, Object> updates = new HashMap<>();
            updates.put("verificationStatus", "rejected");
            db.collection("Vehicles").document(vehicleId)
                    .update(updates)
                    .addOnSuccessListener(aVoid -> {
                        Map<String, Object> notification = new HashMap<>();
                        notification.put("userId", vehicle.getOwnerId());
                        notification.put("title", "Yêu cầu bổ sung thông tin xe");
                        notification.put("message", "Xe " + vehicle.getVehicleName() + " cần bổ sung: " + message);
                        notification.put("type", "supplement_request_vehicle");
                        notification.put("vehicleId", vehicleId);
                        notification.put("createdAt", Timestamp.now());
                        notification.put("isRead", false);
                        notification.put("role", "owner");

                        db.collection("Notifications")
                                .add(notification)
                                .addOnSuccessListener(doc -> db.collection("Notifications").document(doc.getId()).update("notificationId", doc.getId()));
                        Toast.makeText(this, "Đã gửi yêu cầu bổ sung", Toast.LENGTH_SHORT).show();
                        finish();
                    })
                    .addOnFailureListener(e -> {
                        Log.e(TAG, "Lỗi cập nhật trạng thái xe: ", e);
                        Toast.makeText(this, "Lỗi gửi yêu cầu: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                    });
        });
        dialog.show(getSupportFragmentManager(), "RequestSupplementDialog");
    }

    private void showViolationDialog() {
        RequestSupplementDialogFragment dialog = RequestSupplementDialogFragment.newInstance(vehicle.getOwnerId(), vehicleId, "violation_warning");
        dialog.setOnSubmitListener(message -> {
            sendNotification(vehicle.getOwnerId(), "Cảnh báo vi phạm",
                    "Xe " + vehicle.getVehicleName() + " vi phạm: " + message,
                    "vehicle_verification", vehicleId);
            Toast.makeText(this, "Đã gửi cảnh báo vi phạm", Toast.LENGTH_SHORT).show();
            finish();
        });
        dialog.show(getSupportFragmentManager(), "RequestSupplementDialog");
    }

    private void sendNotification(String userId, String title, String message, String type, String vehicleId) {
        Map<String, Object> notification = new HashMap<>();
        notification.put("userId", userId);
        notification.put("title", title);
        notification.put("message", message);
        notification.put("type", type);
        notification.put("vehicleId", vehicleId != null ? vehicleId : "");
        notification.put("createdAt", Timestamp.now());
        notification.put("isRead", false);

        db.collection("Notifications")
                .add(notification)
                .addOnSuccessListener(documentReference -> {
                    String notificationId = documentReference.getId();
                    db.collection("Notifications").document(notificationId)
                            .update("notificationId", notificationId);
                    Log.d(TAG, "Gửi thông báo thành công");
                })
                .addOnFailureListener(e -> Log.e(TAG, "Lỗi gửi thông báo: " + e.getMessage()));
    }

    private String getVerificationStatusText(String verificationStatus) {
        if (verificationStatus == null) return "Không xác định";
        switch (verificationStatus) {
            case "verified": return getString(R.string.confirm);
            case "pending": return "Chưa duyệt";
            case "rejected": return getString(R.string.reject);
            default: return "Không xác định";
        }
    }
}
```

### src\main\java\com\uit\carrental\Service\Vehicle\UpdateVehicleActivity.java
```java
package com.uit.carrental.Service.Vehicle;

import android.app.ProgressDialog;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.text.TextUtils;
import android.util.Log;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.Toast;
import androidx.activity.result.ActivityResultCallback;
import androidx.activity.result.ActivityResultLauncher;
import androidx.activity.result.contract.ActivityResultContracts;
import androidx.appcompat.app.AppCompatActivity;
import com.bumptech.glide.Glide;
import com.google.firebase.Timestamp;
import com.google.firebase.firestore.DocumentSnapshot;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.firestore.SetOptions;
import com.uit.carrental.Model.Vehicle;
import com.uit.carrental.R;
import com.uit.carrental.Service.Api.CloudinaryApi;
import java.util.HashMap;
import java.util.Map;

public class UpdateVehicleActivity extends AppCompatActivity {

    private static final String TAG = "UpdateVehicleActivity";
    private ImageView vehicleImage, documentImage;
    private ImageButton btnBack;
    private EditText editTextVehicleName, editTextVehiclePrice, editTextVehicleNumber, editTextVehicleSeats;
    private EditText editTextVehicleBrand, editTextFuelType, editTextMaxSpeed, editTextTransmission, editTextDoorsAndSeats;
    private Button btnUpdate;
    private String vehicleId;
    private FirebaseFirestore dbVehicle;
    private Vehicle vehicle = new Vehicle();
    private Uri vehicleImageUri, documentImageUri;
    private String vehicleImageUrl, documentImageUrl;
    private ProgressDialog progressDialog;

    ActivityResultLauncher<String> pickVehicleImage = registerForActivityResult(
            new ActivityResultContracts.GetContent(),
            new ActivityResultCallback<Uri>() {
                @Override
                public void onActivityResult(Uri result) {
                    if (result != null) {
                        vehicleImageUri = result;
                        vehicleImage.setImageURI(result);
                    }
                }
            });

    ActivityResultLauncher<String> pickDocumentImage = registerForActivityResult(
            new ActivityResultContracts.GetContent(),
            new ActivityResultCallback<Uri>() {
                @Override
                public void onActivityResult(Uri result) {
                    if (result != null) {
                        documentImageUri = result;
                        documentImage.setImageURI(result);
                    }
                }
            });

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_update_vehicle);
        if (getSupportActionBar() != null) {
            getSupportActionBar().hide();
        }

        Intent intent = getIntent();
        vehicleId = intent.getStringExtra("vehicleId");
        if (vehicleId == null || vehicleId.isEmpty()) {
            Toast.makeText(this, "Không tìm thấy ID xe", Toast.LENGTH_SHORT).show();
            finish();
            return;
        }
        vehicle.setVehicleId(vehicleId);

        init();
        getDetail();

        btnBack.setOnClickListener(v -> finish());
        btnUpdate.setOnClickListener(view -> update());
        vehicleImage.setOnClickListener(v -> pickVehicleImage.launch("image/*"));
        documentImage.setOnClickListener(v -> pickDocumentImage.launch("image/*"));
    }

    private void init() {
        btnBack = findViewById(R.id.btn_back);
        btnUpdate = findViewById(R.id.btn_updatevehicle);
        editTextVehicleName = findViewById(R.id.et_vehiclename);
        editTextVehicleNumber = findViewById(R.id.et_platenumber);
        editTextVehicleSeats = findViewById(R.id.et_vehicleseats);
        editTextVehiclePrice = findViewById(R.id.et_vehicleprice);
        editTextVehicleBrand = findViewById(R.id.et_brand);
        editTextFuelType = findViewById(R.id.et_fuel_type);
        editTextMaxSpeed = findViewById(R.id.et_max_speed);
        editTextTransmission = findViewById(R.id.et_transmission);
        editTextDoorsAndSeats = findViewById(R.id.et_doors_and_seats);
        vehicleImage = findViewById(R.id.vehicle_img_view);
        documentImage = findViewById(R.id.document_img_view);
        dbVehicle = FirebaseFirestore.getInstance();
        editTextVehicleName.setEnabled(false); // Tên xe không chỉnh sửa
        CloudinaryApi.init(this);
    }

    private void getDetail() {
        progressDialog = ProgressDialog.show(this, "Đang tải dữ liệu", "Vui lòng chờ...", true);

        dbVehicle.collection("Vehicles").document(vehicleId)
                .get()
                .addOnSuccessListener(documentSnapshot -> {
                    progressDialog.dismiss();
                    if (documentSnapshot.exists()) {
                        vehicle = documentSnapshot.toObject(Vehicle.class);
                        if (vehicle != null) {
                            vehicle.setVehicleId(vehicleId); // Đảm bảo vehicleId được set
                            // Set UI
                            editTextVehicleName.setText(vehicle.getVehicleName() != null ? vehicle.getVehicleName() : "");
                            editTextVehiclePrice.setText(vehicle.getVehiclePrice() != null ? vehicle.getVehiclePrice().replace(" VND", "") : "");
                            editTextVehicleSeats.setText(vehicle.getVehicleSeats() != null ? vehicle.getVehicleSeats() : "");
                            editTextVehicleNumber.setText(vehicle.getVehicleNumber() != null ? vehicle.getVehicleNumber() : "");
                            editTextVehicleBrand.setText(vehicle.getVehicleBrand() != null ? vehicle.getVehicleBrand() : "");
                            editTextFuelType.setText(vehicle.getFuelType() != null ? vehicle.getFuelType() : "");
                            editTextMaxSpeed.setText(vehicle.getMaxSpeed() != null ? vehicle.getMaxSpeed() : "");
                            editTextTransmission.setText(vehicle.getTransmission() != null ? vehicle.getTransmission() : "");
                            editTextDoorsAndSeats.setText(vehicle.getDoorsAndSeats() != null ? vehicle.getDoorsAndSeats() : "");
                            if (vehicle.getVehicleImageUrl() != null && !vehicle.getVehicleImageUrl().isEmpty()) {
                                Glide.with(this)
                                        .load(vehicle.getVehicleImageUrl())
                                        .placeholder(R.drawable.ic_car)
                                        .into(vehicleImage);
                            } else {
                                vehicleImage.setImageResource(R.drawable.ic_car);
                            }
                            if (vehicle.getDocumentImageUrl() != null && !vehicle.getDocumentImageUrl().isEmpty()) {
                                Glide.with(this)
                                        .load(vehicle.getDocumentImageUrl())
                                        .placeholder(R.drawable.ic_car)
                                        .into(documentImage);
                            } else {
                                documentImage.setImageResource(R.drawable.ic_car);
                            }
                            Log.d(TAG, "Tải chi tiết xe thành công: " + vehicle.toString());
                        } else {
                            Toast.makeText(this, "Không thể ánh xạ dữ liệu xe", Toast.LENGTH_SHORT).show();
                            finish();
                        }
                    } else {
                        Toast.makeText(this, "Không tìm thấy xe", Toast.LENGTH_SHORT).show();
                        finish();
                    }
                })
                .addOnFailureListener(e -> {
                    progressDialog.dismiss();
                    Log.e(TAG, "Lỗi lấy chi tiết xe: " + e.getMessage());
                    Toast.makeText(this, "Lỗi lấy chi tiết xe: " + e.getMessage(), Toast.LENGTH_LONG).show();
                    finish();
                });
    }

    private void update() {
        if (!validateInputs()) {
            return;
        }

        Map<String, Object> data = new HashMap<>();
        boolean flag = false;
        String plateNumber = editTextVehicleNumber.getText().toString().trim();
        String seats = editTextVehicleSeats.getText().toString().trim();
        String price = editTextVehiclePrice.getText().toString().trim();
        String brand = editTextVehicleBrand.getText().toString().trim();
        String fuelType = editTextFuelType.getText().toString().trim();
        String maxSpeed = editTextMaxSpeed.getText().toString().trim();
        String transmission = editTextTransmission.getText().toString().trim();
        String doorsAndSeats = editTextDoorsAndSeats.getText().toString().trim();

        // Check for changes
        if (!plateNumber.equals(vehicle.getVehicleNumber())) {
            data.put("vehicleNumber", plateNumber);
            flag = true;
        }
        if (!seats.equals(vehicle.getVehicleSeats())) {
            data.put("vehicleSeats", seats);
            flag = true;
        }
        if (!price.equals(vehicle.getVehiclePrice() != null ? vehicle.getVehiclePrice().replace(" VND", "") : "")) {
            data.put("vehiclePrice", price + " VND");
            flag = true;
        }
        if (!brand.equals(vehicle.getVehicleBrand())) {
            data.put("vehicleBrand", brand);
            flag = true;
        }
        if (!fuelType.equals(vehicle.getFuelType())) {
            data.put("fuelType", fuelType);
            flag = true;
        }
        if (!maxSpeed.equals(vehicle.getMaxSpeed())) {
            data.put("maxSpeed", maxSpeed);
            flag = true;
        }
        if (!transmission.equals(vehicle.getTransmission())) {
            data.put("transmission", transmission);
            flag = true;
        }
        if (!doorsAndSeats.equals(vehicle.getDoorsAndSeats())) {
            data.put("doorsAndSeats", doorsAndSeats);
            flag = true;
        }

        if (vehicleImageUri != null || documentImageUri != null) {
            uploadImagesAndUpdate(data, flag);
        } else if (flag) {
            updateFirestore(data);
        } else {
            Toast.makeText(this, "Không có thay đổi để cập nhật", Toast.LENGTH_SHORT).show();
        }
    }

    private void uploadImagesAndUpdate(Map<String, Object> data, boolean flag) {
        progressDialog = ProgressDialog.show(this, "Đang tải ảnh", "Vui lòng chờ...", true);

        if (vehicleImageUri != null) {
            CloudinaryApi.uploadImage(this, vehicleImageUri, new CloudinaryApi.UploadCallbackCustom() {
                @Override
                public void onSuccess(String url) {
                    vehicleImageUrl = url;
                    data.put("vehicleImageUrl", vehicleImageUrl);
                    if (documentImageUri != null) {
                        uploadDocumentImage(data, flag);
                    } else {
                        updateFirestore(data);
                    }
                }

                @Override
                public void onFailure(Exception e) {
                    if (progressDialog != null) progressDialog.dismiss();
                    Log.e(TAG, "Lỗi tải ảnh xe: " + e.getMessage());
                    toast("Lỗi tải ảnh xe: " + e.getMessage());
                }
            });
        } else if (documentImageUri != null) {
            uploadDocumentImage(data, flag);
        }
    }

    private void uploadDocumentImage(Map<String, Object> data, boolean flag) {
        CloudinaryApi.uploadImage(this, documentImageUri, new CloudinaryApi.UploadCallbackCustom() {
            @Override
            public void onSuccess(String url) {
                documentImageUrl = url;
                data.put("documentImageUrl", documentImageUrl);
                updateFirestore(data);
            }

            @Override
            public void onFailure(Exception e) {
                if (progressDialog != null) progressDialog.dismiss();
                Log.e(TAG, "Lỗi tải ảnh giấy tờ: " + e.getMessage());
                toast("Lỗi tải ảnh giấy tờ: " + e.getMessage());
            }
        });
    }

    private void updateFirestore(Map<String, Object> data) {
        data.put("verificationStatus", "pending");
        data.put("vehicleAvailability", "pending");

        dbVehicle.collection("Vehicles")
                .document(vehicleId)
                .set(data, SetOptions.merge())
                .addOnSuccessListener(aVoid -> {
                    createAdminNotification();
                    if (progressDialog != null) progressDialog.dismiss();
                    Toast.makeText(this, "Cập nhật thông tin thành công, đang chờ admin duyệt.", Toast.LENGTH_LONG).show();
                    finish();
                })
                .addOnFailureListener(e -> {
                    if (progressDialog != null) progressDialog.dismiss();
                    Log.e(TAG, "Không thể cập nhật thông tin: " + e.getMessage());
                    Toast.makeText(this, "Không thể cập nhật thông tin: " + e.getMessage(), Toast.LENGTH_LONG).show();
                });
    }

    private boolean validateInputs() {
        boolean valid = true;
        String plateNumber = editTextVehicleNumber.getText().toString().trim();
        String seats = editTextVehicleSeats.getText().toString().trim();
        String price = editTextVehiclePrice.getText().toString().trim();
        String brand = editTextVehicleBrand.getText().toString().trim();
        String fuelType = editTextFuelType.getText().toString().trim();
        String maxSpeed = editTextMaxSpeed.getText().toString().trim();
        String transmission = editTextTransmission.getText().toString().trim();
        String doorsAndSeats = editTextDoorsAndSeats.getText().toString().trim();

        if (TextUtils.isEmpty(plateNumber)) {
            editTextVehicleNumber.setError("Biển số xe bắt buộc.");
            valid = false;
        } else if (!plateNumber.matches("^[0-9A-Z]{7,9}$")) {
            editTextVehicleNumber.setError("Biển số xe không hợp lệ (7-9 ký tự số hoặc chữ).");
            valid = false;
        }

        if (TextUtils.isEmpty(seats)) {
            editTextVehicleSeats.setError("Số chỗ bắt buộc.");
            valid = false;
        } else {
            try {
                int seatCount = Integer.parseInt(seats);
                if (seatCount <= 0) {
                    editTextVehicleSeats.setError("Số chỗ phải lớn hơn 0.");
                    valid = false;
                }
            } catch (NumberFormatException e) {
                editTextVehicleSeats.setError("Số chỗ phải là số.");
                valid = false;
            }
        }

        if (TextUtils.isEmpty(price)) {
            editTextVehiclePrice.setError("Giá bắt buộc.");
            valid = false;
        } else {
            try {
                float priceValue = Float.parseFloat(price);
                if (priceValue <= 0) {
                    editTextVehiclePrice.setError("Giá phải lớn hơn 0.");
                    valid = false;
                }
            } catch (NumberFormatException e) {
                editTextVehiclePrice.setError("Giá phải là số.");
                valid = false;
            }
        }

        if (TextUtils.isEmpty(brand)) {
            editTextVehicleBrand.setError("Thương hiệu bắt buộc.");
            valid = false;
        }

        if (TextUtils.isEmpty(fuelType)) {
            editTextFuelType.setError("Loại nhiên liệu bắt buộc.");
            valid = false;
        }

        if (TextUtils.isEmpty(maxSpeed)) {
            editTextMaxSpeed.setError("Tốc độ tối đa bắt buộc.");
            valid = false;
        } else {
            try {
                int speed = Integer.parseInt(maxSpeed);
                if (speed <= 0) {
                    editTextMaxSpeed.setError("Tốc độ phải lớn hơn 0.");
                    valid = false;
                }
            } catch (NumberFormatException e) {
                editTextMaxSpeed.setError("Tốc độ phải là số.");
                valid = false;
            }
        }

        if (TextUtils.isEmpty(transmission)) {
            editTextTransmission.setError("Hộp số bắt buộc.");
            valid = false;
        }

        if (TextUtils.isEmpty(doorsAndSeats)) {
            editTextDoorsAndSeats.setError("Số cửa và ghế bắt buộc.");
            valid = false;
        }

        return valid;
    }

    private void createAdminNotification() {
        Map<String, Object> notification = new HashMap<>();
        notification.put("title", "Xe cập nhật chờ duyệt");
        notification.put("content", "Xe " + vehicle.getVehicleName() + " đã được cập nhật, đang chờ duyệt.");
        notification.put("timestamp", Timestamp.now());
        notification.put("status", "unread");
        notification.put("type", "vehicle_verification");
        notification.put("vehicleId", vehicleId);
        notification.put("recipient", "admin");

        dbVehicle.collection("Notifications")
                .add(notification)
                .addOnSuccessListener(documentReference -> {
                    // Silent success
                })
                .addOnFailureListener(e -> {
                    Toast.makeText(this, "Lỗi gửi thông báo cho admin: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                });
    }

    private void toast(String txt) {
        Toast.makeText(getApplicationContext(), txt, Toast.LENGTH_LONG).show();
    }
}

```

### src\main\java\com\uit\carrental\Service\Vehicle\VehicleCardActivity.java
```java
package com.uit.carrental.Service.Vehicle;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import com.bumptech.glide.Glide;
import com.uit.carrental.Model.Vehicle;
import com.uit.carrental.R;
import com.google.android.gms.tasks.OnSuccessListener;
import com.google.firebase.firestore.DocumentSnapshot;
import com.google.firebase.firestore.FirebaseFirestore;

public class VehicleCardActivity extends AppCompatActivity {

    private FirebaseFirestore dbVehicle;
    private String vehicleId;
    private TextView textViewVehicleName, textViewVehiclePrice;
    private ImageView imageViewVehicle;
    private Vehicle vehicle = new Vehicle();

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.vehicle_card);

        vehicleId = getIntent().getStringExtra("vehicleId");
        if (vehicleId == null) {
            Toast.makeText(this, "Không tìm thấy ID xe", Toast.LENGTH_LONG).show();
            finish();
            return;
        }

        init();
        getDetail();
    }

    private void init() {
        dbVehicle = FirebaseFirestore.getInstance();
        textViewVehicleName = findViewById(R.id.vehicle_name);
        textViewVehiclePrice = findViewById(R.id.tv_vehicle_price);
        imageViewVehicle = findViewById(R.id.img_vehicle);
    }

    private void getDetail() {
        dbVehicle.collection("Vehicles")
                .document(vehicleId)
                .get()
                .addOnSuccessListener(documentSnapshot -> {
                    if (documentSnapshot.exists()) {
                        vehicle = documentSnapshot.toObject(Vehicle.class);
                        if (vehicle != null) {
                            textViewVehicleName.setText(vehicle.getVehicleName() != null ? vehicle.getVehicleName() : "Xe không tên");
                            textViewVehiclePrice.setText(vehicle.getVehiclePrice() != null ? vehicle.getVehiclePrice() : "0 VNĐ");
                            if (vehicle.getVehicleImageUrl() != null && !vehicle.getVehicleImageUrl().isEmpty()) {
                                Glide.with(this)
                                        .load(vehicle.getVehicleImageUrl())
                                        .placeholder(R.drawable.ic_car)
                                        .into(imageViewVehicle);
                            } else {
                                imageViewVehicle.setImageResource(R.drawable.ic_car);
                            }
                        }
                    } else {
                        Toast.makeText(this, "Không tìm thấy xe", Toast.LENGTH_LONG).show();
                        finish();
                    }
                })
                .addOnFailureListener(e -> {
                    Toast.makeText(this, "Lỗi lấy chi tiết xe: " + e.getMessage(), Toast.LENGTH_LONG).show();
                    finish();
                });
    }
}
```

### src\main\java\com\uit\carrental\Service\Vehicle\VehicleDetailActivity.java
```java
package com.uit.carrental.Service.Vehicle;

import android.app.AlertDialog;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;
import androidx.lifecycle.LiveData;
import androidx.lifecycle.MutableLiveData;
import androidx.lifecycle.ViewModel;
import androidx.lifecycle.ViewModelProvider;

import com.bumptech.glide.Glide;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.firestore.DocumentReference;
import com.google.firebase.firestore.FirebaseFirestore;
import com.uit.carrental.ActivityPages.CustomerMainActivity;
import com.uit.carrental.Model.User;
import com.uit.carrental.Model.Vehicle;
import com.uit.carrental.R;
import com.uit.carrental.Service.Booking.ScheduleSelect;
import com.uit.carrental.Service.UserAuthentication.CCCDActivity;

public class VehicleDetailActivity extends AppCompatActivity {

    private static final String TAG = "VehicleDetailActivity";
    private ImageView imageViewVehicle, backButton;
    private TextView textViewName, textViewPrice, textViewFuel, textViewSpeed, textViewTransmission, textViewSeats, textViewNumber;
    private TextView textViewProviderName, textViewProviderPhone, textViewProviderEmail, textViewProviderAddress, textViewOwner;
    private Button btnBook;
    private String vehicleId;
    private VehicleDetailViewModel viewModel;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_detail_car);

        vehicleId = getIntent().getStringExtra("vehicleId");
        if (vehicleId == null) {
            Toast.makeText(this, "Không tìm thấy xe", Toast.LENGTH_SHORT).show();
            finish();
            return;
        }

        initViews();
        initViewModel();
        observeLiveData();

        btnBook.setOnClickListener(v -> checkCccdAndBook());
    }

    private void initViews() {
        btnBook = findViewById(R.id.btn_book);
        imageViewVehicle = findViewById(R.id.vehicle_img);
        backButton = findViewById(R.id.back_button);
        textViewName = findViewById(R.id.vehicle_name);
        textViewPrice = findViewById(R.id.tv_vehicle_price);
        textViewFuel = findViewById(R.id.fuel_value);
        textViewSpeed = findViewById(R.id.speed_value);
        textViewTransmission = findViewById(R.id.transmission_value);
        textViewSeats = findViewById(R.id.seats_value);
        textViewNumber = findViewById(R.id.tv_vehicle_number);
        textViewProviderName = findViewById(R.id.tv_provider_name);
        textViewProviderPhone = findViewById(R.id.tv_provider_phone);
        textViewProviderEmail = findViewById(R.id.tv_provider_gmail);
        textViewProviderAddress = findViewById(R.id.tv_provider_address);
        textViewOwner = findViewById(R.id.tv_vehicle_owner);

        backButton.setOnClickListener(v -> {
            Log.d(TAG, "Nút Back giao diện được nhấn");
            navigateBackToHome();
        });
    }

    private void initViewModel() {
        viewModel = new ViewModelProvider(this).get(VehicleDetailViewModel.class);
        viewModel.loadVehicleData(vehicleId);
    }

    private void observeLiveData() {
        viewModel.getVehicleLiveData().observe(this, vehicle -> {
            if (vehicle != null) {
                textViewName.setText(vehicle.getVehicleName() != null ? vehicle.getVehicleName() : "Mercedes C300 AMG");
                textViewPrice.setText(vehicle.getVehiclePrice() != null ? vehicle.getVehiclePrice() : "999.000VNĐ/Ngày");
                textViewFuel.setText(vehicle.getFuelType() != null ? vehicle.getFuelType() : "Xăng không chì 95+");
                textViewSpeed.setText(vehicle.getMaxSpeed() != null ? vehicle.getMaxSpeed() : "250 km/h");
                textViewTransmission.setText(vehicle.getTransmission() != null ? vehicle.getTransmission() : "Tự động 9 cấp");
                textViewSeats.setText(vehicle.getDoorsAndSeats() != null ? vehicle.getDoorsAndSeats() : "2 Cửa và 4 Ghế");
                textViewNumber.setText(vehicle.getVehicleNumber() != null ? vehicle.getVehicleNumber() : "60C2-88888");

                if (vehicle.getVehicleImageUrl() != null && !vehicle.getVehicleImageUrl().isEmpty()) {
                    Glide.with(this)
                            .load(vehicle.getVehicleImageUrl())
                            .placeholder(R.drawable.ic_car)
                            .into(imageViewVehicle);
                }

                if (vehicle.getOwnerId() != null) {
                    viewModel.loadOwnerData(vehicle.getOwnerId());
                }
            }
        });

        viewModel.getOwnerLiveData().observe(this, owner -> {
            if (owner != null) {
                textViewProviderName.setText(owner.getUsername() != null ? owner.getUsername() : "Công ty ABC");
                textViewProviderPhone.setText(owner.getPhoneNumber() != null ? owner.getPhoneNumber() : "0123456789");
                textViewProviderEmail.setText(owner.getEmail() != null ? owner.getEmail() : "abc@example.com");
                textViewProviderAddress.setText(owner.getAddress() != null ? owner.getAddress() : "123 Đường ABC, Đồng Nai");
                textViewOwner.setText(owner.getUsername() != null ? owner.getUsername() : "Nguyễn Văn A");
            }
        });

        viewModel.getErrorLiveData().observe(this, error -> {
            if (error != null) {
                Toast.makeText(this, error, Toast.LENGTH_LONG).show();
                finish();
            }
        });

        viewModel.getUserLiveData().observe(this, user -> {
            // Dữ liệu người dùng đã tải, sẵn sàng để kiểm tra CCCD
        });
    }

    private void checkCccdAndBook() {
        FirebaseUser firebaseUser = FirebaseAuth.getInstance().getCurrentUser();
        if (firebaseUser == null) {
            Toast.makeText(this, "Vui lòng đăng nhập để đặt xe", Toast.LENGTH_SHORT).show();
            return;
        }

        User user = viewModel.getUserLiveData().getValue();
        if (user == null ||
                user.getCiCardFront() == null || user.getCiCardFront().isEmpty() ||
                user.getCiCardBehind() == null || user.getCiCardBehind().isEmpty() ||
                user.getLicenseUrl() == null || user.getLicenseUrl().isEmpty() ||
                !"verified".equals(user.getVerificationStatus())) {
            showVerificationRequiredDialog();
        } else {
            Intent intent = new Intent(VehicleDetailActivity.this, ScheduleSelect.class);
            intent.putExtra("vehicleId", vehicleId);
            startActivity(intent);
        }
    }

    private void showVerificationRequiredDialog() {
        new AlertDialog.Builder(this)
                .setTitle("Yêu cầu xác minh")
                .setMessage("Bạn cần cập nhật căn cước công dân và bằng lái xe, đồng thời được admin duyệt để thuê xe. Bạn có muốn cập nhật ngay không?")
                .setPositiveButton("Cập nhật", (dialog, which) -> {
                    Intent intent = new Intent(VehicleDetailActivity.this, CCCDActivity.class);
                    intent.putExtra("fromVehicleDetail", true); // Thêm extra để theo dõi
                    startActivity(intent);
                })
                .setNegativeButton("Hủy", (dialog, which) -> dialog.dismiss())
                .create()
                .show();
    }

    private void navigateBackToHome() {
        Intent intent = new Intent(this, CustomerMainActivity.class);
        intent.putExtra("fragment", "home");
        intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
        startActivity(intent);
        finish();
    }

    @Override
    public void onBackPressed() {
        Log.d(TAG, "Nút Back vật lý được nhấn");
        navigateBackToHome();
    }

    public static class VehicleDetailViewModel extends ViewModel {
        private final FirebaseFirestore db;
        private final FirebaseUser firebaseUser;
        private final MutableLiveData<Vehicle> vehicleLiveData;
        private final MutableLiveData<User> userLiveData;
        private final MutableLiveData<User> ownerLiveData;
        private final MutableLiveData<String> errorLiveData;

        public VehicleDetailViewModel() {
            db = FirebaseFirestore.getInstance();
            firebaseUser = FirebaseAuth.getInstance().getCurrentUser();
            vehicleLiveData = new MutableLiveData<>();
            userLiveData = new MutableLiveData<>();
            ownerLiveData = new MutableLiveData<>();
            errorLiveData = new MutableLiveData<>();
        }

        public LiveData<Vehicle> getVehicleLiveData() {
            return vehicleLiveData;
        }

        public LiveData<User> getUserLiveData() {
            return userLiveData;
        }

        public LiveData<User> getOwnerLiveData() {
            return ownerLiveData;
        }

        public LiveData<String> getErrorLiveData() {
            return errorLiveData;
        }

        public void loadVehicleData(String vehicleId) {
            DocumentReference vehicleRef = db.collection("Vehicles").document(vehicleId);
            vehicleRef.addSnapshotListener((document, error) -> {
                if (error != null) {
                    errorLiveData.setValue("Lỗi lấy chi tiết xe: " + error.getMessage());
                    return;
                }
                if (document != null && document.exists()) {
                    Vehicle vehicle = document.toObject(Vehicle.class);
                    vehicleLiveData.setValue(vehicle);
                } else {
                    errorLiveData.setValue("Không tìm thấy xe");
                }
            });

            if (firebaseUser != null) {
                DocumentReference userRef = db.collection("Users").document(firebaseUser.getUid());
                userRef.addSnapshotListener((document, error) -> {
                    if (error != null) {
                        errorLiveData.setValue("Lỗi tải thông tin người dùng: " + error.getMessage());
                        return;
                    }
                    if (document != null && document.exists()) {
                        User user = document.toObject(User.class);
                        userLiveData.setValue(user);
                    }
                });
            }
        }

        public void loadOwnerData(String ownerId) {
            DocumentReference ownerRef = db.collection("Users").document(ownerId);
            ownerRef.addSnapshotListener((document, error) -> {
                if (error != null) {
                    errorLiveData.setValue("Lỗi tải thông tin chủ xe: " + error.getMessage());
                    return;
                }
                if (document != null && document.exists()) {
                    User owner = document.toObject(User.class);
                    ownerLiveData.setValue(owner);
                }
            });
        }
    }
}
```

### src\main\java\com\uit\carrental\Service\ZaloPay\Api\CreateOrder.java
```java
package com.uit.carrental.Service.ZaloPay.Api;

import com.uit.carrental.Service.ZaloPay.Constant.AppInfo;
import com.uit.carrental.Service.ZaloPay.Helper.Helpers;

import org.json.JSONObject;

import java.util.Date;

import okhttp3.FormBody;
import okhttp3.RequestBody;

public class CreateOrder {
    private class CreateOrderData {
        String AppId;
        String AppUser;
        String AppTime;
        String Amount;
        String AppTransId;
        String EmbedData;
        String Items;
        String BankCode;
        String Description;
        String Mac;

        private CreateOrderData(String amount) throws Exception {
            long appTime = new Date().getTime();
            AppId = String.valueOf(AppInfo.APP_ID);
            AppUser = "Android_Demo";
            AppTime = String.valueOf(appTime);
            Amount = amount;
            AppTransId = Helpers.getAppTransId();
            EmbedData = "{}";
            Items = "[]";
            BankCode = "zalopayapp";
            Description = "Merchant pay for order #" + Helpers.getAppTransId();
            String inputHMac = String.format("%s|%s|%s|%s|%s|%s|%s",
                    this.AppId,
                    this.AppTransId,
                    this.AppUser,
                    this.Amount,
                    this.AppTime,
                    this.EmbedData,
                    this.Items);

            Mac = Helpers.getMac(AppInfo.MAC_KEY, inputHMac);
        }
    }

     public JSONObject createOrder(String amount) throws Exception {
        CreateOrderData input = new CreateOrderData(amount);

        RequestBody formBody = new FormBody.Builder()
                .add("appid", input.AppId)
                .add("appuser", input.AppUser)
                .add("apptime", input.AppTime)
                .add("amount", input.Amount)
                .add("apptransid", input.AppTransId)
                .add("embeddata", input.EmbedData)
                .add("item", input.Items)
                .add("bankcode", input.BankCode)
                .add("description", input.Description)
                .add("mac", input.Mac)
                .build();

        JSONObject data = HttpProvider.sendPost(AppInfo.URL_CREATE_ORDER, formBody);
        return data;
    }
}


```

### src\main\java\com\uit\carrental\Service\ZaloPay\Api\HttpProvider.java
```java
package com.uit.carrental.Service.ZaloPay.Api;

import android.util.Log;

import org.json.JSONException;
import org.json.JSONObject;

import java.io.IOException;
import java.util.Collections;
import java.util.concurrent.TimeUnit;

import okhttp3.CipherSuite;
import okhttp3.ConnectionSpec;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;
import okhttp3.TlsVersion;

public class HttpProvider {
     public static JSONObject sendPost(String URL, RequestBody formBody) {
        JSONObject data = new JSONObject();
        try {
            ConnectionSpec spec = new ConnectionSpec.Builder(ConnectionSpec.MODERN_TLS)
                    .tlsVersions(TlsVersion.TLS_1_2)
                    .cipherSuites(
                            CipherSuite.TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,
                            CipherSuite.TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,
                            CipherSuite.TLS_DHE_RSA_WITH_AES_128_GCM_SHA256)
                    .build();

            OkHttpClient client = new OkHttpClient.Builder()
                    .connectionSpecs(Collections.singletonList(spec))
                    .callTimeout(5000, TimeUnit.MILLISECONDS)
                    .build();

            Request request = new Request.Builder()
                    .url(URL)
                    .addHeader("Content-Type", "application/x-www-form-urlencoded")
                    .post(formBody)
                    .build();

            Response response = client.newCall(request).execute();

            if (!response.isSuccessful()) {
                Log.println(Log.ERROR, "BAD_REQUEST", response.body().string());
                data = null;
            } else {
                data = new JSONObject(response.body().string());
            }

        }  catch (IOException | JSONException e) {
            e.printStackTrace();
        }

        return data;
    }
}

```

### src\main\java\com\uit\carrental\Service\ZaloPay\Constant\AppInfo.java
```java
package com.uit.carrental.Service.ZaloPay.Constant;

public class AppInfo {
    public static final int APP_ID = 553;
    public static final String MAC_KEY = "9phuAOYhan4urywHTh0ndEXiV3pKHr5Q";
    public static final String URL_CREATE_ORDER = "https://sandbox.zalopay.com.vn/v001/tpe/createorder";
}

```

### src\main\java\com\uit\carrental\Service\ZaloPay\Helper\Helpers.java
```java
package com.uit.carrental.Service.ZaloPay.Helper;

import android.annotation.SuppressLint;

import com.uit.carrental.Service.ZaloPay.Helper.HMac.HMacUtil;

import org.jetbrains.annotations.NotNull;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Objects;

public class Helpers {
    private static int transIdDefault = 1;

    @NotNull
    @SuppressLint("DefaultLocale")
     public static String getAppTransId() {
        if (transIdDefault >= 100000) {
            transIdDefault = 1;
        }

        transIdDefault += 1;
        @SuppressLint("SimpleDateFormat") SimpleDateFormat formatDateTime = new SimpleDateFormat("yyMMdd_hhmmss");
        String timeString = formatDateTime.format(new Date());
        return String.format("%s%06d", timeString, transIdDefault);
    }

    @NotNull
    public static String getMac(@NotNull String key, @NotNull String data) throws NoSuchAlgorithmException, InvalidKeyException {
        return Objects.requireNonNull(HMacUtil.HMacHexStringEncode(HMacUtil.HMACSHA256, key, data));
     }
}

```

### src\main\java\com\uit\carrental\Service\ZaloPay\Helper\HMac\HexStringUtil.java
```java
package com.uit.carrental.Service.ZaloPay.Helper.HMac;

import java.util.Locale;

public class HexStringUtil {
    private static final byte[] HEX_CHAR_TABLE = {
            (byte) '0', (byte) '1', (byte) '2', (byte) '3',
            (byte) '4', (byte) '5', (byte) '6', (byte) '7',
            (byte) '8', (byte) '9', (byte) 'a', (byte) 'b',
            (byte) 'c', (byte) 'd', (byte) 'e', (byte) 'f'
    };
    // @formatter:on

    /**
     * Convert a byte array to a hexadecimal string
     *
     * @param raw
     *            A raw byte array
     *
     * @return Hexadecimal string
     */
    public static String byteArrayToHexString(byte[] raw) {
        byte[] hex = new byte[2 * raw.length];
        int index = 0;

        for (byte b : raw) {
            int v = b & 0xFF;
            hex[index++] = HEX_CHAR_TABLE[v >>> 4];
            hex[index++] = HEX_CHAR_TABLE[v & 0xF];
        }
        return new String(hex);
    }

    /**
     * Convert a hexadecimal string to a byte array
     *
     * @param hex
     *            A hexadecimal string
     *
     * @return The byte array
     */
    public static byte[] hexStringToByteArray(String hex) {
        String hexstandard = hex.toLowerCase(Locale.ENGLISH);
        int sz = hexstandard.length() / 2;
        byte[] bytesResult = new byte[sz];

        int idx = 0;
        for (int i = 0; i < sz; i++) {
            bytesResult[i] = (byte) (hexstandard.charAt(idx));
            ++idx;
            byte tmp = (byte) (hexstandard.charAt(idx));
            ++idx;

            if (bytesResult[i] > HEX_CHAR_TABLE[9]) {
                bytesResult[i] -= ((byte) ('a') - 10);
            } else {
                bytesResult[i] -= (byte) ('0');
            }
            if (tmp > HEX_CHAR_TABLE[9]) {
                tmp -= ((byte) ('a') - 10);
            } else {
                tmp -= (byte) ('0');
            }

            bytesResult[i] = (byte) (bytesResult[i] * 16 + tmp);
        }
        return bytesResult;
    }
}

```

### src\main\java\com\uit\carrental\Service\ZaloPay\Helper\HMac\HMacUtil.java
```java
package com.uit.carrental.Service.ZaloPay.Helper.HMac;

import android.os.Build;

import androidx.annotation.RequiresApi;

import java.io.UnsupportedEncodingException;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import java.util.Arrays;
import java.util.Base64;
import java.util.LinkedList;

import javax.crypto.Mac;
import javax.crypto.spec.SecretKeySpec;

public class HMacUtil {
    public final static String HMACMD5 = "HmacMD5";
    public final static String HMACSHA1 = "HmacSHA1";
    public final static String HMACSHA256 = "HmacSHA256";
    public final static String HMACSHA512 = "HmacSHA512";
    public final static Charset UTF8CHARSET = StandardCharsets.UTF_8;

    public final static LinkedList<String> HMACS = new LinkedList<String>(Arrays.asList("UnSupport", "HmacSHA256", "HmacMD5", "HmacSHA384", "HMacSHA1", "HmacSHA512"));
    // @formatter:on

    private static byte[] HMacEncode(final String algorithm, final String key, final String data) {
        Mac macGenerator = null;
        try {
            macGenerator = Mac.getInstance(algorithm);
            SecretKeySpec signingKey = new SecretKeySpec(key.getBytes(StandardCharsets.UTF_8), algorithm);
            macGenerator.init(signingKey);
        } catch (Exception ex) {
        }

        if (macGenerator == null) {
            return null;
        }

        byte[] dataByte = null;
        try {
            dataByte = data.getBytes("UTF-8");
        } catch (UnsupportedEncodingException e) {
        }

        return macGenerator.doFinal(dataByte);
    }

    /**
     * Calculating a message authentication code (MAC) involving a cryptographic
     * hash function in combination with a secret cryptographic key.
     *
     * The result will be represented base64-encoded string.
     *
     * @param algorithm A cryptographic hash function (such as MD5 or SHA-1)
     *
     * @param key A secret cryptographic key
     *
     * @param data The message to be authenticated
     *
     * @return Base64-encoded HMAC String
     */
    @RequiresApi(api = Build.VERSION_CODES.O)
    public static String HMacBase64Encode(final String algorithm, final String key, final String data) {
        byte[] hmacEncodeBytes = HMacEncode(algorithm, key, data);
        if (hmacEncodeBytes == null) {
            return null;
        }
        return Base64.getEncoder().encodeToString(hmacEncodeBytes);
    }

    /**
     * Calculating a message authentication code (MAC) involving a cryptographic
     * hash function in combination with a secret cryptographic key.
     *
     * The result will be represented hex string.
     *
     * @param algorithm A cryptographic hash function (such as MD5 or SHA-1)
     *
     * @param key A secret cryptographic key
     *
     * @param data The message to be authenticated
     *
     * @return Hex HMAC String
     */
    public static String HMacHexStringEncode(final String algorithm, final String key, final String data) {
        byte[] hmacEncodeBytes = HMacEncode(algorithm, key, data);
        if (hmacEncodeBytes == null) {
            return null;
        }
        return HexStringUtil.byteArrayToHexString(hmacEncodeBytes);
    }
}

```

### src\main\res\anim\anim_in_left.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<set xmlns:android="http://schemas.android.com/apk/res/android">
    <translate
        android:duration="@android:integer/config_mediumAnimTime"
        android:fromXDelta="100%p"
        android:toXDelta="0" />
    <alpha
        android:duration="@android:integer/config_mediumAnimTime"
        android:fromAlpha="1.0"
        android:startOffset="100"
        android:toAlpha="1.0"/>
</set>
```

### src\main\res\anim\anim_in_right.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<set xmlns:android="http://schemas.android.com/apk/res/android">
    <translate
        android:duration="@android:integer/config_mediumAnimTime"
        android:fromXDelta="-100%p"
        android:toXDelta="0" />
    <alpha
        android:duration="@android:integer/config_mediumAnimTime"
        android:toAlpha="1.0"
        android:startOffset="100"
        android:fromAlpha="1.0"/>
</set>
```

### src\main\res\anim\anim_out_left.xml
```xml
<?xml version="1.0" encoding="utf-8"?>

<set xmlns:android="http://schemas.android.com/apk/res/android">
    <translate
        android:duration="@android:integer/config_mediumAnimTime"
        android:fromXDelta="0"
        android:toXDelta="-100%p" />
    <alpha
        android:duration="@android:integer/config_mediumAnimTime"
        android:fromAlpha="1.0"
        android:startOffset="100"
        android:toAlpha="1.0"/>
</set>
```

### src\main\res\anim\anim_out_right.xml
```xml
<?xml version="1.0" encoding="utf-8"?>

<set xmlns:android="http://schemas.android.com/apk/res/android">
    <translate
        android:duration="@android:integer/config_mediumAnimTime"
        android:fromXDelta="0"
        android:toXDelta="100%p" />
    <alpha
        android:duration="@android:integer/config_mediumAnimTime"
        android:fromAlpha="1.0"
        android:startOffset="100"
        android:toAlpha="1.0"/>


</set>
```

### src\main\res\anim\slide_in_up.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<translate xmlns:android="http://schemas.android.com/apk/res/android"
    android:duration="@android:integer/config_shortAnimTime"
    android:fromYDelta="100%p"
    android:toYDelta="0%p" />
```

### src\main\res\anim\slide_out_up.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<translate xmlns:android="http://schemas.android.com/apk/res/android"
    android:duration="@android:integer/config_shortAnimTime"
    android:fromYDelta="0%p"
    android:toYDelta="-100%p" />
```

### src\main\res\drawable\background1_car_details.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="151dp"
    android:height="134dp"
    android:viewportWidth="151"
    android:viewportHeight="134">
  <path
      android:pathData="M0,7C0,3.13 3.13,0 7,0H144C147.87,0 151,3.13 151,7V127C151,130.87 147.87,134 144,134H7C3.13,134 0,130.87 0,127V7Z"
      android:fillColor="#ffffff"/>
</vector>

```

### src\main\res\drawable\background2_car_details.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="151dp"
    android:height="133dp"
    android:viewportWidth="151"
    android:viewportHeight="133">
  <path
      android:pathData="M0,7C0,3.13 3.13,0 7,0H144C147.87,0 151,3.13 151,7V126C151,129.87 147.87,133 144,133H7C3.13,133 0,129.87 0,126V7Z"
      android:fillColor="#ffffff"/>
</vector>

```

### src\main\res\drawable\background3_car_details.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="151dp"
    android:height="133dp"
    android:viewportWidth="151"
    android:viewportHeight="133">
  <path
      android:pathData="M0,6C0,2.69 2.69,0 6,0H145C148.31,0 151,2.69 151,6V127C151,130.31 148.31,133 145,133H6C2.69,133 0,130.31 0,127V6Z"
      android:fillColor="#FEFEFE"
      android:fillAlpha="0.996078"/>
</vector>

```

### src\main\res\drawable\background_car_details.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="151dp"
    android:height="134dp"
    android:viewportWidth="151"
    android:viewportHeight="134">
  <path
      android:pathData="M0,7C0,3.13 3.13,0 7,0H144C147.87,0 151,3.13 151,7V127C151,130.87 147.87,134 144,134H7C3.13,134 0,130.87 0,127V7Z"
      android:fillColor="#FEFEFE"/>
</vector>

```

### src\main\res\drawable\background_main.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="42dp"
    android:height="52dp"
    android:viewportWidth="42"
    android:viewportHeight="52">
  <path
      android:pathData="M0,6.5C0,2.91 2.91,0 6.5,0H42V52H4.5C2.015,52 0,49.985 0,47.5V6.5Z"
      android:fillColor="#FEFEFE"/>
</vector>

```

### src\main\res\drawable\bg_gradient_login.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<selector xmlns:android="http://schemas.android.com/apk/res/android">
    <item>
        <shape android:shape="rectangle">
            <corners android:radius="28dp" />
            <gradient
                android:angle="0"
                android:startColor="@color/gradient_login_start"
                android:endColor="@color/gradient_login_end" />
        </shape>
    </item>
</selector>
```

### src\main\res\drawable\bg_gradient_register.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<selector xmlns:android="http://schemas.android.com/apk/res/android">
    <item>
        <shape android:shape="rectangle">
            <corners android:radius="28dp" />
            <gradient
                android:angle="0"
                android:startColor="@color/gradient_register_start"
                android:endColor="@color/gradient_register_end" />
        </shape>
    </item>
</selector>
```

### src\main\res\drawable\bg_gradient_social.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<selector xmlns:android="http://schemas.android.com/apk/res/android">
    <item>
        <shape android:shape="rectangle">
            <corners android:radius="24dp" />
            <gradient
                android:angle="0"
                android:startColor="@color/gradient_social_start"
                android:endColor="@color/gradient_social_end" />
        </shape>
    </item>
</selector>
```

### src\main\res\drawable\bg_gradient_splash_button.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<selector xmlns:android="http://schemas.android.com/apk/res/android">
    <item>
        <shape android:shape="rectangle">
            <corners android:radius="48dp" />
            <gradient
                android:angle="0"
                android:startColor="@color/gradient_login_start"
                android:endColor="@color/gradient_login_end" />
        </shape>
    </item>
</selector>
```

### src\main\res\drawable\bg_light_settings.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
  <path
      android:pathData="M0,0H24V24H0V0Z"
      android:fillColor="#123094"/>
</vector>

```

### src\main\res\drawable\blue_circle_line.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android"
    android:shape="rectangle">
    <gradient
        android:angle="0"
        android:centerColor="@color/white"
        android:startColor="@color/white"
        android:endColor="@color/white"/>
    <stroke
        android:color="@color/sky"
        android:width="3sp"/>
    <corners
        android:radius="360dp"/>
</shape>
```

### src\main\res\drawable\blue_line.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android"
    android:shape="rectangle">
    <gradient
        android:angle="0"
        android:centerColor="@color/white"
        android:startColor="@color/white"
        android:endColor="@color/white"/>
    <stroke
        android:color="@color/sky"
        android:width="2dp"/>
</shape>
```

### src\main\res\drawable\blue_round_border.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android"
    android:shape="rectangle">
    <gradient
        android:angle="0"
        android:centerColor="@color/sky"
        android:startColor="@color/sky"
        android:endColor="@color/sky"/>
    <corners
        android:radius="360dp"/>
</shape>
```

### src\main\res\drawable\blue_round_button.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <corners android:radius="@dimen/_15sdp" />
    <solid android:color="@color/sky" />
</shape>
```

### src\main\res\drawable\blue_round_card.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <corners android:radius="@dimen/_15sdp" />
    <solid android:color="@color/sky" />
</shape>
```

### src\main\res\drawable\button_gradient_account.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <gradient
        android:startColor="#7F8AEF"
        android:endColor="#00A3FF"
        android:angle="0" />
    <corners android:radius="48dp" />
</shape>
```

### src\main\res\drawable\button_gradient_cccd.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <gradient
        android:startColor="#7F8AEF"
        android:endColor="#00A3FF"
        android:angle="0" />
    <corners android:radius="48dp" />
</shape>
```

### src\main\res\drawable\button_gradient_update_profile.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <gradient
        android:startColor="#7F8AEF"
        android:endColor="#00A3FF"
        android:angle="0" />
    <corners android:radius="48dp" />
</shape>
```

### src\main\res\drawable\combined_shape.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="2dp"
    android:height="4dp"
    android:viewportWidth="2"
    android:viewportHeight="4">
  <path
      android:pathData="M0,0V4C0.8047,3.6612 1.328,2.8731 1.328,2C1.328,1.1269 0.8047,0.3388 0,0Z"
      android:strokeAlpha="0.4"
      android:fillColor="#131A34"
      android:fillAlpha="0.4"/>
</vector>

```

### src\main\res\drawable\combined_shape_car_details.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="2dp"
    android:height="4dp"
    android:viewportWidth="2"
    android:viewportHeight="4">
  <path
      android:pathData="M0,0V4C0.8047,3.6612 1.328,2.8731 1.328,2C1.328,1.1269 0.8047,0.3388 0,0Z"
      android:strokeAlpha="0.4"
      android:fillColor="#131A34"
      android:fillAlpha="0.4"/>
</vector>

```

### src\main\res\drawable\combined_shape_main.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="2dp"
    android:height="4dp"
    android:viewportWidth="2"
    android:viewportHeight="4">
  <path
      android:pathData="M0,0V4C0.8047,3.6612 1.328,2.8731 1.328,2C1.328,1.1269 0.8047,0.3388 0,0Z"
      android:strokeAlpha="0.4"
      android:fillColor="#131A34"
      android:fillAlpha="0.4"/>
</vector>

```

### src\main\res\drawable\combined_shape_settings.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="2dp"
    android:height="4dp"
    android:viewportWidth="2"
    android:viewportHeight="4">
  <path
      android:pathData="M0,0V4C0.8047,3.6612 1.328,2.8731 1.328,2C1.328,1.1269 0.8047,0.3388 0,0Z"
      android:strokeAlpha="0.4"
      android:fillColor="#131A34"
      android:fillAlpha="0.4"/>
</vector>

```

### src\main\res\drawable\combined_shape_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="2dp"
    android:height="4dp"
    android:viewportWidth="2"
    android:viewportHeight="4">
  <path
      android:pathData="M0,0V4C0.8047,3.6612 1.328,2.8731 1.328,2C1.328,1.1269 0.8047,0.3388 0,0Z"
      android:strokeAlpha="0.4"
      android:fillColor="#131A34"
      android:fillAlpha="0.4"/>
</vector>

```

### src\main\res\drawable\cr10bffffff.xml
```xml
<?xml version="1.0" encoding="UTF-8"?>
<shape
    xmlns:android="http://schemas.android.com/apk/res/android">
    <solid
        android:color="#FFFFFF"
        />
    <corners
        android:radius="10dp"
        />
</shape>

```

### src\main\res\drawable\cr12b003087.xml
```xml
<?xml version="1.0" encoding="UTF-8"?>
<shape
    xmlns:android="http://schemas.android.com/apk/res/android">
    <solid
        android:color="#003087"
        />
    <corners
        android:radius="12dp"
        />
</shape>

```

### src\main\res\drawable\cr12b0030873b.xml
```xml
<?xml version="1.0" encoding="UTF-8"?>
<shape
    xmlns:android="http://schemas.android.com/apk/res/android">
    <solid
        android:color="#3B003087"
        />
    <corners
        android:radius="12dp"
        />
</shape>

```

### src\main\res\drawable\cr12b123094.xml
```xml
<?xml version="1.0" encoding="UTF-8"?>
<shape
    xmlns:android="http://schemas.android.com/apk/res/android">
    <solid
        android:color="#123094"
        />
    <corners
        android:radius="12dp"
        />
</shape>

```

### src\main\res\drawable\cr12bffffff.xml
```xml
<?xml version="1.0" encoding="UTF-8"?>
<shape
    xmlns:android="http://schemas.android.com/apk/res/android">
    <solid
        android:color="#FFFFFF"
        />
    <corners
        android:radius="12dp"
        />
</shape>

```

### src\main\res\drawable\cr12lr270c5f5f4eaf9f9.xml
```xml
<?xml version="1.0" encoding="UTF-8"?>
<shape
    xmlns:android="http://schemas.android.com/apk/res/android">
    <gradient
        android:startColor="#C5F5F4"
        android:endColor="#EAF9F9"
        android:angle="270"
        />
    <corners
        android:radius="12dp"
        />
</shape>

```

### src\main\res\drawable\cr15b003087.xml
```xml
<?xml version="1.0" encoding="UTF-8"?>
<shape
    xmlns:android="http://schemas.android.com/apk/res/android">
    <solid
        android:color="#003087"
        />
    <corners
        android:radius="15dp"
        />
</shape>

```

### src\main\res\drawable\cr3b19b800.xml
```xml
<?xml version="1.0" encoding="UTF-8"?>
<shape
    xmlns:android="http://schemas.android.com/apk/res/android">
    <solid
        android:color="#19B800"
        />
    <corners
        android:radius="3dp"
        />
</shape>

```

### src\main\res\drawable\cr3be53535.xml
```xml
<?xml version="1.0" encoding="UTF-8"?>
<shape
    xmlns:android="http://schemas.android.com/apk/res/android">
    <solid
        android:color="#E53535"
        />
    <corners
        android:radius="3dp"
        />
</shape>

```

### src\main\res\drawable\cr48b003087.xml
```xml
<?xml version="1.0" encoding="UTF-8"?>
<shape
    xmlns:android="http://schemas.android.com/apk/res/android">
    <solid
        android:color="#003087"
        />
    <corners
        android:radius="48dp"
        />
</shape>

```

### src\main\res\drawable\cr48bcacaca.xml
```xml
<?xml version="1.0" encoding="UTF-8"?>
<shape
    xmlns:android="http://schemas.android.com/apk/res/android">
    <solid
        android:color="#CACACA"
        />
    <corners
        android:radius="48dp"
        />
</shape>

```

### src\main\res\drawable\cr48bff4500.xml
```xml
<?xml version="1.0" encoding="UTF-8"?>
<shape
    xmlns:android="http://schemas.android.com/apk/res/android">
    <solid
        android:color="#FF4500"
        />
    <corners
        android:radius="48dp"
        />
</shape>

```

### src\main\res\drawable\cr4bfbfbfb.xml
```xml
<?xml version="1.0" encoding="UTF-8"?>
<shape
    xmlns:android="http://schemas.android.com/apk/res/android">
    <solid
        android:color="#FBFBFB"
        />
    <corners
        android:radius="4dp"
        />
</shape>

```

### src\main\res\drawable\cr8b00308726.xml
```xml
<?xml version="1.0" encoding="UTF-8"?>
<shape
    xmlns:android="http://schemas.android.com/apk/res/android">
    <solid
        android:color="#26003087"
        />
    <corners
        android:radius="8dp"
        />
</shape>

```

### src\main\res\drawable\cr8b0b54da5e.xml
```xml
<?xml version="1.0" encoding="UTF-8"?>
<shape
    xmlns:android="http://schemas.android.com/apk/res/android">
    <solid
        android:color="#5E0B54DA"
        />
    <corners
        android:radius="8dp"
        />
</shape>

```

### src\main\res\drawable\cr8b6da9f1.xml
```xml
<?xml version="1.0" encoding="UTF-8"?>
<shape
    xmlns:android="http://schemas.android.com/apk/res/android">
    <solid
        android:color="#6DA9F1"
        />
    <corners
        android:radius="8dp"
        />
</shape>

```

### src\main\res\drawable\cr8bd5e9fe.xml
```xml
<?xml version="1.0" encoding="UTF-8"?>
<shape
    xmlns:android="http://schemas.android.com/apk/res/android">
    <solid
        android:color="#D5E9FE"
        />
    <corners
        android:radius="8dp"
        />
</shape>

```

### src\main\res\drawable\cr8bd9d9d957.xml
```xml
<?xml version="1.0" encoding="UTF-8"?>
<shape
    xmlns:android="http://schemas.android.com/apk/res/android">
    <solid
        android:color="#57D9D9D9"
        />
    <corners
        android:radius="8dp"
        />
</shape>

```

### src\main\res\drawable\cr8be6eefb.xml
```xml
<?xml version="1.0" encoding="UTF-8"?>
<shape
    xmlns:android="http://schemas.android.com/apk/res/android">
    <solid
        android:color="#003087"
        />
    <corners
        android:radius="15dp"
        />
</shape>

```

### src\main\res\drawable\cr8bff450080.xml
```xml
<?xml version="1.0" encoding="UTF-8"?>
<shape
    xmlns:android="http://schemas.android.com/apk/res/android">
    <solid
        android:color="#80FF4500"
        />
    <corners
        android:radius="8dp"
        />
</shape>

```

### src\main\res\drawable\ellipse_27_update_profile.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="8dp"
    android:height="8dp"
    android:viewportWidth="8"
    android:viewportHeight="8">
  <path
      android:pathData="M4,4m-4,0a4,4 0,1 1,8 0a4,4 0,1 1,-8 0"
      android:fillColor="#555555"/>
</vector>

```

### src\main\res\drawable\ellipse_28_update_profile.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="8dp"
    android:height="8dp"
    android:viewportWidth="8"
    android:viewportHeight="8">
  <path
      android:pathData="M4,4m-4,0a4,4 0,1 1,8 0a4,4 0,1 1,-8 0"
      android:fillColor="#555555"/>
</vector>

```

### src\main\res\drawable\ellipse_29_update_profile.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="8dp"
    android:height="8dp"
    android:viewportWidth="8"
    android:viewportHeight="8">
  <path
      android:pathData="M4,4m-4,0a4,4 0,1 1,8 0a4,4 0,1 1,-8 0"
      android:fillColor="#555555"/>
</vector>

```

### src\main\res\drawable\ellipse_30_update_profile.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="8dp"
    android:height="8dp"
    android:viewportWidth="8"
    android:viewportHeight="8">
  <path
      android:pathData="M4,4m-4,0a4,4 0,1 1,8 0a4,4 0,1 1,-8 0"
      android:fillColor="#555555"/>
</vector>

```

### src\main\res\drawable\ellipse_31_update_profile.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="8dp"
    android:height="8dp"
    android:viewportWidth="8"
    android:viewportHeight="8">
  <path
      android:pathData="M4,4m-4,0a4,4 0,1 1,8 0a4,4 0,1 1,-8 0"
      android:fillColor="#555555"/>
</vector>

```

### src\main\res\drawable\ellipse_32_update_profile.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="8dp"
    android:height="8dp"
    android:viewportWidth="8"
    android:viewportHeight="8">
  <path
      android:pathData="M4,4m-4,0a4,4 0,1 1,8 0a4,4 0,1 1,-8 0"
      android:fillColor="#555555"/>
</vector>

```

### src\main\res\drawable\ellipse_33_update_profile.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="8dp"
    android:height="8dp"
    android:viewportWidth="8"
    android:viewportHeight="8">
  <path
      android:pathData="M4,4m-4,0a4,4 0,1 1,8 0a4,4 0,1 1,-8 0"
      android:fillColor="#555555"/>
</vector>

```

### src\main\res\drawable\ellipse_34_update_profile.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="8dp"
    android:height="8dp"
    android:viewportWidth="8"
    android:viewportHeight="8">
  <path
      android:pathData="M4,4m-4,0a4,4 0,1 1,8 0a4,4 0,1 1,-8 0"
      android:fillColor="#555555"/>
</vector>

```

### src\main\res\drawable\field.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="330dp"
    android:height="50dp"
    android:viewportWidth="330"
    android:viewportHeight="50">
  <path
      android:strokeWidth="1"
      android:pathData="M9,0.5L321,0.5A8.5,8.5 0,0 1,329.5 9L329.5,41A8.5,8.5 0,0 1,321 49.5L9,49.5A8.5,8.5 0,0 1,0.5 41L0.5,9A8.5,8.5 0,0 1,9 0.5z"
      android:fillColor="#ffffff"
      android:strokeColor="#E3E5E6"/>
</vector>

```

### src\main\res\drawable\field1.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="330dp"
    android:height="50dp"
    android:viewportWidth="330"
    android:viewportHeight="50">
  <path
      android:strokeWidth="1"
      android:pathData="M9,0.5L321,0.5A8.5,8.5 0,0 1,329.5 9L329.5,41A8.5,8.5 0,0 1,321 49.5L9,49.5A8.5,8.5 0,0 1,0.5 41L0.5,9A8.5,8.5 0,0 1,9 0.5z"
      android:fillColor="#ffffff"
      android:strokeColor="#E3E5E6"/>
</vector>

```

### src\main\res\drawable\field1_account.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="220dp"
    android:height="31dp"
    android:viewportWidth="220"
    android:viewportHeight="31">
  <path
      android:strokeWidth="1"
      android:pathData="M9,0.5L211,0.5A8.5,8.5 0,0 1,219.5 9L219.5,22A8.5,8.5 0,0 1,211 30.5L9,30.5A8.5,8.5 0,0 1,0.5 22L0.5,9A8.5,8.5 0,0 1,9 0.5z"
      android:fillColor="#ffffff"
      android:strokeColor="#D3D6D8"/>
</vector>

```

### src\main\res\drawable\field1_cccd.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="330dp"
    android:height="50dp"
    android:viewportWidth="330"
    android:viewportHeight="50">
  <path
      android:strokeWidth="1"
      android:pathData="M9,0.5L321,0.5A8.5,8.5 0,0 1,329.5 9L329.5,41A8.5,8.5 0,0 1,321 49.5L9,49.5A8.5,8.5 0,0 1,0.5 41L0.5,9A8.5,8.5 0,0 1,9 0.5z"
      android:fillColor="#ffffff"
      android:strokeColor="#F1F1F1"/>
</vector>

```

### src\main\res\drawable\field1_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="330dp"
    android:height="50dp"
    android:viewportWidth="330"
    android:viewportHeight="50">
  <path
      android:strokeWidth="1"
      android:pathData="M9,0.5L321,0.5A8.5,8.5 0,0 1,329.5 9L329.5,41A8.5,8.5 0,0 1,321 49.5L9,49.5A8.5,8.5 0,0 1,0.5 41L0.5,9A8.5,8.5 0,0 1,9 0.5z"
      android:fillColor="#ffffff"
      android:strokeColor="#E3E5E6"/>
</vector>

```

### src\main\res\drawable\field1_update_profile.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="331dp"
    android:height="50dp"
    android:viewportWidth="331"
    android:viewportHeight="50">
  <path
      android:strokeWidth="1"
      android:pathData="M9,0.5L322,0.5A8.5,8.5 0,0 1,330.5 9L330.5,41A8.5,8.5 0,0 1,322 49.5L9,49.5A8.5,8.5 0,0 1,0.5 41L0.5,9A8.5,8.5 0,0 1,9 0.5z"
      android:fillColor="#ffffff"
      android:strokeColor="#E3E5E6"/>
</vector>

```

### src\main\res\drawable\field2_account.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="220dp"
    android:height="31dp"
    android:viewportWidth="220"
    android:viewportHeight="31">
  <path
      android:strokeWidth="1"
      android:pathData="M9,0.5L211,0.5A8.5,8.5 0,0 1,219.5 9L219.5,22A8.5,8.5 0,0 1,211 30.5L9,30.5A8.5,8.5 0,0 1,0.5 22L0.5,9A8.5,8.5 0,0 1,9 0.5z"
      android:fillColor="#ffffff"
      android:strokeColor="#D3D6D8"/>
</vector>

```

### src\main\res\drawable\field2_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="330dp"
    android:height="50dp"
    android:viewportWidth="330"
    android:viewportHeight="50">
  <path
      android:strokeWidth="1"
      android:pathData="M9,0.5L321,0.5A8.5,8.5 0,0 1,329.5 9L329.5,41A8.5,8.5 0,0 1,321 49.5L9,49.5A8.5,8.5 0,0 1,0.5 41L0.5,9A8.5,8.5 0,0 1,9 0.5z"
      android:fillColor="#ffffff"
      android:strokeColor="#E3E5E6"/>
</vector>

```

### src\main\res\drawable\field2_update_profile.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="331dp"
    android:height="50dp"
    android:viewportWidth="331"
    android:viewportHeight="50">
  <path
      android:strokeWidth="1"
      android:pathData="M9,0.5L322,0.5A8.5,8.5 0,0 1,330.5 9L330.5,41A8.5,8.5 0,0 1,322 49.5L9,49.5A8.5,8.5 0,0 1,0.5 41L0.5,9A8.5,8.5 0,0 1,9 0.5z"
      android:fillColor="#ffffff"
      android:strokeColor="#E3E5E6"/>
</vector>

```

### src\main\res\drawable\field3_account.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="219dp"
    android:height="31dp"
    android:viewportWidth="219"
    android:viewportHeight="31">
  <path
      android:strokeWidth="1"
      android:pathData="M9,0.5L210,0.5A8.5,8.5 0,0 1,218.5 9L218.5,22A8.5,8.5 0,0 1,210 30.5L9,30.5A8.5,8.5 0,0 1,0.5 22L0.5,9A8.5,8.5 0,0 1,9 0.5z"
      android:fillColor="#ffffff"
      android:strokeColor="#D3D6D8"/>
</vector>

```

### src\main\res\drawable\field3_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="330dp"
    android:height="50dp"
    android:viewportWidth="330"
    android:viewportHeight="50">
  <path
      android:strokeWidth="1"
      android:pathData="M9,0.5L321,0.5A8.5,8.5 0,0 1,329.5 9L329.5,41A8.5,8.5 0,0 1,321 49.5L9,49.5A8.5,8.5 0,0 1,0.5 41L0.5,9A8.5,8.5 0,0 1,9 0.5z"
      android:fillColor="#ffffff"
      android:strokeColor="#E3E5E6"/>
</vector>

```

### src\main\res\drawable\field3_update_profile.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="331dp"
    android:height="50dp"
    android:viewportWidth="331"
    android:viewportHeight="50">
  <path
      android:strokeWidth="1"
      android:pathData="M9,0.5L322,0.5A8.5,8.5 0,0 1,330.5 9L330.5,41A8.5,8.5 0,0 1,322 49.5L9,49.5A8.5,8.5 0,0 1,0.5 41L0.5,9A8.5,8.5 0,0 1,9 0.5z"
      android:fillColor="#ffffff"
      android:strokeColor="#E3E5E6"/>
</vector>

```

### src\main\res\drawable\field4_account.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="220dp"
    android:height="31dp"
    android:viewportWidth="220"
    android:viewportHeight="31">
  <path
      android:strokeWidth="1"
      android:pathData="M9,0.5L211,0.5A8.5,8.5 0,0 1,219.5 9L219.5,22A8.5,8.5 0,0 1,211 30.5L9,30.5A8.5,8.5 0,0 1,0.5 22L0.5,9A8.5,8.5 0,0 1,9 0.5z"
      android:fillColor="#ffffff"
      android:strokeColor="#D3D6D8"/>
</vector>

```

### src\main\res\drawable\field4_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="330dp"
    android:height="50dp"
    android:viewportWidth="330"
    android:viewportHeight="50">
  <path
      android:strokeWidth="1"
      android:pathData="M9,0.5L321,0.5A8.5,8.5 0,0 1,329.5 9L329.5,41A8.5,8.5 0,0 1,321 49.5L9,49.5A8.5,8.5 0,0 1,0.5 41L0.5,9A8.5,8.5 0,0 1,9 0.5z"
      android:fillColor="#ffffff"
      android:strokeColor="#E3E5E6"/>
</vector>

```

### src\main\res\drawable\field4_update_profile.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="331dp"
    android:height="50dp"
    android:viewportWidth="331"
    android:viewportHeight="50">
  <path
      android:strokeWidth="1"
      android:pathData="M9,0.5L322,0.5A8.5,8.5 0,0 1,330.5 9L330.5,41A8.5,8.5 0,0 1,322 49.5L9,49.5A8.5,8.5 0,0 1,0.5 41L0.5,9A8.5,8.5 0,0 1,9 0.5z"
      android:fillColor="#ffffff"
      android:strokeColor="#E3E5E6"/>
</vector>

```

### src\main\res\drawable\field5_update_profile.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="331dp"
    android:height="50dp"
    android:viewportWidth="331"
    android:viewportHeight="50">
  <path
      android:strokeWidth="1"
      android:pathData="M9,0.5L322,0.5A8.5,8.5 0,0 1,330.5 9L330.5,41A8.5,8.5 0,0 1,322 49.5L9,49.5A8.5,8.5 0,0 1,0.5 41L0.5,9A8.5,8.5 0,0 1,9 0.5z"
      android:fillColor="#ffffff"
      android:strokeColor="#E3E5E6"/>
</vector>

```

### src\main\res\drawable\field_account.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="220dp"
    android:height="31dp"
    android:viewportWidth="220"
    android:viewportHeight="31">
  <path
      android:strokeWidth="1"
      android:pathData="M9,0.5L211,0.5A8.5,8.5 0,0 1,219.5 9L219.5,22A8.5,8.5 0,0 1,211 30.5L9,30.5A8.5,8.5 0,0 1,0.5 22L0.5,9A8.5,8.5 0,0 1,9 0.5z"
      android:fillColor="#ffffff"
      android:strokeColor="#D3D6D8"/>
</vector>

```

### src\main\res\drawable\field_cccd.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="330dp"
    android:height="50dp"
    android:viewportWidth="330"
    android:viewportHeight="50">
  <path
      android:strokeWidth="1"
      android:pathData="M9,0.5L321,0.5A8.5,8.5 0,0 1,329.5 9L329.5,41A8.5,8.5 0,0 1,321 49.5L9,49.5A8.5,8.5 0,0 1,0.5 41L0.5,9A8.5,8.5 0,0 1,9 0.5z"
      android:fillColor="#ffffff"
      android:strokeColor="#F1F1F1"/>
</vector>

```

### src\main\res\drawable\field_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="330dp"
    android:height="50dp"
    android:viewportWidth="330"
    android:viewportHeight="50">
  <path
      android:strokeWidth="1"
      android:pathData="M9,0.5L321,0.5A8.5,8.5 0,0 1,329.5 9L329.5,41A8.5,8.5 0,0 1,321 49.5L9,49.5A8.5,8.5 0,0 1,0.5 41L0.5,9A8.5,8.5 0,0 1,9 0.5z"
      android:fillColor="#ffffff"
      android:strokeColor="#E3E5E6"/>
</vector>

```

### src\main\res\drawable\field_update_profile.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="331dp"
    android:height="50dp"
    android:viewportWidth="331"
    android:viewportHeight="50">
  <path
      android:strokeWidth="1"
      android:pathData="M9,0.5L322,0.5A8.5,8.5 0,0 1,330.5 9L330.5,41A8.5,8.5 0,0 1,322 49.5L9,49.5A8.5,8.5 0,0 1,0.5 41L0.5,9A8.5,8.5 0,0 1,9 0.5z"
      android:fillColor="#ffffff"
      android:strokeColor="#E3E5E6"/>
</vector>

```

### src\main\res\drawable\floating_chat_icon.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<bitmap xmlns:android="http://schemas.android.com/apk/res/android"
    android:src="@drawable/image_56_ai"
    android:gravity="center" />
```

### src\main\res\drawable\gradient_button.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <gradient
        android:startColor="@color/gradient_login_start"
        android:endColor="@color/blue1"
        android:angle="0" />
    <corners android:radius="48dp" />
</shape>
```

### src\main\res\drawable\grey_border_top.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
    <item>
        <shape android:shape="rectangle">
            <solid android:color="@color/Grey" />
        </shape>
    </item>
    <item android:top="1dp">
        <shape android:shape="rectangle">
            <solid android:color="@color/white" />
        </shape>
    </item>
</layer-list>
```

### src\main\res\drawable\icon1_ai.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="32dp"
    android:height="25dp"
    android:viewportWidth="32"
    android:viewportHeight="25">
  <path
      android:pathData="M31.244,0.756L12.911,11.599M31.244,0.756L16.733,23.788L12.911,11.599M31.244,0.756L0.756,4.337L12.911,11.599"
      android:strokeLineJoin="round"
      android:strokeWidth="1.5"
      android:fillColor="#00000000"
      android:strokeColor="#ffffff"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\icons_colorizer_main.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="32dp"
    android:height="32dp"
    android:viewportWidth="32"
    android:viewportHeight="32">
  <path
      android:pathData="M0,0h32v32h-32z"
      android:fillColor="#5F5F5F"/>
</vector>

```

### src\main\res\drawable\icon_ai.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="35dp"
    android:height="35dp"
    android:viewportWidth="35"
    android:viewportHeight="35">
  <path
      android:pathData="M17.5,10.802V24.199M10.802,17.5H24.199M34.246,17.5C34.246,26.749 26.749,34.246 17.5,34.246C8.251,34.246 0.754,26.749 0.754,17.5C0.754,8.251 8.251,0.754 17.5,0.754C26.749,0.754 34.246,8.251 34.246,17.5Z"
      android:strokeLineJoin="round"
      android:strokeWidth="1.5"
      android:fillColor="#00000000"
      android:strokeColor="#ffffff"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\icon_next.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="48dp"
    android:height="48dp"
    android:viewportWidth="48"
    android:viewportHeight="48"
    android:tint="?attr/colorControlNormal"
    android:autoMirrored="true">
  <path
      android:fillColor="@android:color/white"
      android:pathData="M24,40 L21.9,37.85 34.25,25.5H8V22.5H34.25L21.9,10.15L24,8L40,24Z"/>
</vector>

```

### src\main\res\drawable\ic_activity.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="16dp"
    android:height="20dp"
    android:viewportWidth="16"
    android:viewportHeight="20">
  <path
      android:pathData="M5,9.5a1,1 0,1 0,-1 -1A1,1 0,0 0,5 9.5ZM7,8.5a1,1 0,0 1,1 -1h3a1,1 0,0 1,0 2L8,9.5A1,1 0,0 1,7 8.5ZM8,10.5a1,1 0,0 0,0 2h3a1,1 0,0 0,0 -2ZM8,13.5a1,1 0,0 0,0 2h3a1,1 0,0 0,0 -2ZM6,11.5a1,1 0,1 1,-1 -1A1,1 0,0 1,6 11.5ZM5,15.5a1,1 0,1 0,-1 -1A1,1 0,0 0,5 15.5Z"
      android:fillColor="#375e97"/>
  <path
      android:pathData="M5,0A1,1 0,0 0,4 1L2,1A2,2 0,0 0,0 3L0,18a2,2 0,0 0,2 2L14,20a2,2 0,0 0,2 -2L16,3a2,2 0,0 0,-2 -2L12,1a1,1 0,0 0,-1 -1ZM12,3h2L14,18L2,18L2,3L4,3L4,4A1,1 0,0 0,5 5h6a1,1 0,0 0,1 -1ZM6,3L6,2h4L10,3Z"
      android:fillColor="#375e97"/>
</vector>

```

### src\main\res\drawable\ic_add_white_24dp.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
        android:width="24dp"
        android:height="24dp"
        android:viewportWidth="24.0"
        android:viewportHeight="24.0">
    <path
        android:fillColor="#ffffffff"
        android:pathData="M19,13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"/>
</vector>

```

### src\main\res\drawable\ic_admin_account.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<vector
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#333333"
        android:pathData="M12,12c2.21,0 4,-1.79 4,-4s-1.79,-4 -4,-4 -4,1.79 -4,4 1.79,4 4,4zM12,14c-2.67,0 -8,1.34 -8,4v2h16v-2c0,-2.66 -5.33,-4 -8,-4z"/>
</vector>
```

### src\main\res\drawable\ic_car.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="431.79dp"
    android:height="314.54dp"
    android:viewportWidth="431.79"
    android:viewportHeight="314.54">
  <path
      android:pathData="M422.44,93.3L390.77,93.3a9.39,9.39 0,0 0,-6.47 2.6l-6.76,6.48C366.14,76 349.8,49.94 327.72,23A62.35,62.35 0,0 0,279.29 0L152.5,0a62.28,62.28 0,0 0,-48.42 23C81.3,50.79 65.28,76.24 54.15,102.29L47.49,95.9A9.39,9.39 0,0 0,41 93.3L9.35,93.3A9.36,9.36 0,0 0,0 102.66v21.65a9.35,9.35 0,0 0,8.77 9.33l32.54,2.05c-4.91,14.37 -8.75,35.79 -8.75,66 0,26.2 5.23,43.43 14.34,54.58v50.45a7.84,7.84 0,0 0,7.83 7.83h36a7.84,7.84 0,0 0,7.84 -7.83L98.57,275.38L333.19,275.38v31.33a7.84,7.84 0,0 0,7.84 7.83h36a7.84,7.84 0,0 0,7.83 -7.83L384.86,256.26c9.11,-11.15 14.34,-28.37 14.34,-54.58 0,-30.2 -3.84,-51.62 -8.75,-66L423,133.64a9.35,9.35 0,0 0,8.76 -9.33L431.76,102.66A9.36,9.36 0,0 0,422.44 93.3ZM130.81,44.82A27.9,27.9 0,0 1,152.5 34.53L279.29,34.53A27.9,27.9 0,0 1,301 44.82c15.45,18.88 27.65,36.95 37.08,55l-244.54,0C102.74,82.22 115,64.13 130.81,44.82ZM104.16,237.07c-17.94,0 -32.47,-5.86 -32.47,-20.07s5.27,-25.73 23.2,-25.73 41.73,11.52 41.73,25.73S122.09,237.07 104.16,237.07ZM249.93,234.07L181.86,234.07a18.63,18.63 0,0 1,-18.61 -18.61,5.21 5.21,0 0,1 5.21,-5.21h94.87a5.21,5.21 0,0 1,5.21 5.21A18.63,18.63 0,0 1,249.93 234.11ZM327.63,237.07c-17.93,0 -32.47,-5.86 -32.47,-20.07s23.8,-25.73 41.73,-25.73S360.1,202.79 360.1,217 345.57,237.07 327.63,237.07Z"
      android:fillColor="#375e97"/>
</vector>

```

### src\main\res\drawable\ic_check_green_24dp.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
        android:width="24dp"
        android:height="24dp"
        android:viewportWidth="24.0"
        android:viewportHeight="24.0">
    <path
        android:fillColor="#1E8449"
        android:pathData="M9,16.17L4.83,12l-1.42,1.41L9,19 21,7l-1.41,-1.41z"/>
</vector>

```

### src\main\res\drawable\ic_commission.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<vector
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#333333"
        android:pathData="M12,2C6.48,2 2,6.48 2,12s4.48,10 10,10 10,-4.48 10,-10S17.52,2 12,2zM13,17h-2v-2h2v2zM13,13h-2V7h2v6z"/>
</vector>
```

### src\main\res\drawable\ic_delete.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#000000"
        android:pathData="M6,19c0,1.1 0.9,2 2,2h8c1.1,0 2,-0.9 2,-2V7H6v12zM19,4h-3.5l-1,-1h-5l-1,1H5v2h14V4z"/>
</vector>
```

### src\main\res\drawable\ic_edit.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<vector
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#5FB0FF"
        android:pathData="M3,17.25V21h3.75L17.81,9.94l-3.75,-3.75L3,17.25zM20.71,7.04c0.39,-0.39 0.39,-1.02 0,-1.41l-2.34,-2.34c-0.39,-0.39 -1.02,-0.39 -1.41,0l-1.83,1.83 3.75,3.75 1.83,-1.83z"/>
</vector>
```

### src\main\res\drawable\ic_full_screen_black_24dp.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
        android:width="24dp"
        android:height="24dp"
        android:viewportWidth="24.0"
        android:viewportHeight="24.0">
    <path
        android:fillColor="#FF000000"
        android:pathData="M5,15L3,15v4c0,1.1 0.9,2 2,2h4v-2L5,19v-4zM5,5h4L9,3L5,3c-1.1,0 -2,0.9 -2,2v4h2L5,5zM19,3h-4v2h4v4h2L21,5c0,-1.1 -0.9,-2 -2,-2zM19,19h-4v2h4c1.1,0 2,-0.9 2,-2v-4h-2v4zM12,8c-2.21,0 -4,1.79 -4,4s1.79,4 4,4 4,-1.79 4,-4 -1.79,-4 -4,-4zM12,14c-1.1,0 -2,-0.9 -2,-2s0.9,-2 2,-2 2,0.9 2,2 -0.9,2 -2,2z"/>
</vector>

```

### src\main\res\drawable\ic_history.xml
```xml
<vector android:height="3dp" android:viewportHeight="18"
    android:viewportWidth="18" android:width="3dp" xmlns:android="http://schemas.android.com/apk/res/android">
    <path android:fillColor="#fff" android:pathData="M9,0A9,9 0,1 1,4.23 16.63a8.45,8.45 0,0 1,-1.59 -1.27,9.29 9.29,0 0,1 -1.28,-1.59A9,9 0,0 1,0 9a7.5,7.5 0,0 1,0 -0.82,1 1,0 0,1 2,0.18C2,8.57 2,8.79 2,9a7,7 0,0 0,1.06 3.71,6.91 6.91,0 0,0 1,1.24 7.38,7.38 0,0 0,1.24 1A7,7 0,1 0,4.1 4H5.5a1,1 0,0 1,0.11 2H1.5a1,1 0,0 1,-1 -0.88V1a1,1 0,0 1,2 -0.11V2.78A9,9 0,0 1,9 0ZM8.25,4A0.75,0.75 0,0 1,9 4.65V9h2.25a0.76,0.76 0,0 1,0.75 0.75,0.75 0.75,0 0,1 -0.65,0.74H8.25a0.75,0.75 0,0 1,-0.74 -0.65V4.75A0.76,0.76 0,0 1,8.25 4Z"/>
</vector>

```

### src\main\res\drawable\ic_home.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="373.4dp"
    android:height="288.28dp"
    android:viewportWidth="373.4"
    android:viewportHeight="288.28">
  <path
      android:pathData="M45.38,129.44h285.31v158.83h-285.31z"
      android:fillColor="#375e97"/>
  <path
      android:pathData="M188,47.09l-142.62,82.35l142.62,0l142.63,0l-142.63,-82.35z"
      android:fillColor="#375e97"/>
  <path
      android:pathData="M175.21,19.95l11.51,-19.94l186.71,107.79l-11.51,19.94z"
      android:fillColor="#375e97"/>
  <path
      android:pathData="M0,107.8l186.71,-107.79l11.51,19.94l-186.71,107.79z"
      android:fillColor="#375e97"/>
  <path
      android:pathData="M156.2,172.99h63.67v115.29h-63.67z"
      android:fillColor="#fff"/>
  <path
      android:pathData="M282.65,8.11h39.16v70.59h-39.16z"
      android:fillColor="#375e97"/>
</vector>

```

### src\main\res\drawable\ic_launcher_background.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="108dp"
    android:height="108dp"
    android:viewportHeight="108"
    android:viewportWidth="108">
    <path
        android:fillColor="#26A69A"
        android:pathData="M0,0h108v108h-108z" />
    <path
        android:fillColor="#00000000"
        android:pathData="M9,0L9,108"
        android:strokeColor="#33FFFFFF"
        android:strokeWidth="0.8" />
    <path
        android:fillColor="#00000000"
        android:pathData="M19,0L19,108"
        android:strokeColor="#33FFFFFF"
        android:strokeWidth="0.8" />
    <path
        android:fillColor="#00000000"
        android:pathData="M29,0L29,108"
        android:strokeColor="#33FFFFFF"
        android:strokeWidth="0.8" />
    <path
        android:fillColor="#00000000"
        android:pathData="M39,0L39,108"
        android:strokeColor="#33FFFFFF"
        android:strokeWidth="0.8" />
    <path
        android:fillColor="#00000000"
        android:pathData="M49,0L49,108"
        android:strokeColor="#33FFFFFF"
        android:strokeWidth="0.8" />
    <path
        android:fillColor="#00000000"
        android:pathData="M59,0L59,108"
        android:strokeColor="#33FFFFFF"
        android:strokeWidth="0.8" />
    <path
        android:fillColor="#00000000"
        android:pathData="M69,0L69,108"
        android:strokeColor="#33FFFFFF"
        android:strokeWidth="0.8" />
    <path
        android:fillColor="#00000000"
        android:pathData="M79,0L79,108"
        android:strokeColor="#33FFFFFF"
        android:strokeWidth="0.8" />
    <path
        android:fillColor="#00000000"
        android:pathData="M89,0L89,108"
        android:strokeColor="#33FFFFFF"
        android:strokeWidth="0.8" />
    <path
        android:fillColor="#00000000"
        android:pathData="M99,0L99,108"
        android:strokeColor="#33FFFFFF"
        android:strokeWidth="0.8" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,9L108,9"
        android:strokeColor="#33FFFFFF"
        android:strokeWidth="0.8" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,19L108,19"
        android:strokeColor="#33FFFFFF"
        android:strokeWidth="0.8" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,29L108,29"
        android:strokeColor="#33FFFFFF"
        android:strokeWidth="0.8" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,39L108,39"
        android:strokeColor="#33FFFFFF"
        android:strokeWidth="0.8" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,49L108,49"
        android:strokeColor="#33FFFFFF"
        android:strokeWidth="0.8" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,59L108,59"
        android:strokeColor="#33FFFFFF"
        android:strokeWidth="0.8" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,69L108,69"
        android:strokeColor="#33FFFFFF"
        android:strokeWidth="0.8" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,79L108,79"
        android:strokeColor="#33FFFFFF"
        android:strokeWidth="0.8" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,89L108,89"
        android:strokeColor="#33FFFFFF"
        android:strokeWidth="0.8" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,99L108,99"
        android:strokeColor="#33FFFFFF"
        android:strokeWidth="0.8" />
    <path
        android:fillColor="#00000000"
        android:pathData="M19,29L89,29"
        android:strokeColor="#33FFFFFF"
        android:strokeWidth="0.8" />
    <path
        android:fillColor="#00000000"
        android:pathData="M19,39L89,39"
        android:strokeColor="#33FFFFFF"
        android:strokeWidth="0.8" />
    <path
        android:fillColor="#00000000"
        android:pathData="M19,49L89,49"
        android:strokeColor="#33FFFFFF"
        android:strokeWidth="0.8" />
    <path
        android:fillColor="#00000000"
        android:pathData="M19,59L89,59"
        android:strokeColor="#33FFFFFF"
        android:strokeWidth="0.8" />
    <path
        android:fillColor="#00000000"
        android:pathData="M19,69L89,69"
        android:strokeColor="#33FFFFFF"
        android:strokeWidth="0.8" />
    <path
        android:fillColor="#00000000"
        android:pathData="M19,79L89,79"
        android:strokeColor="#33FFFFFF"
        android:strokeWidth="0.8" />
    <path
        android:fillColor="#00000000"
        android:pathData="M29,19L29,89"
        android:strokeColor="#33FFFFFF"
        android:strokeWidth="0.8" />
    <path
        android:fillColor="#00000000"
        android:pathData="M39,19L39,89"
        android:strokeColor="#33FFFFFF"
        android:strokeWidth="0.8" />
    <path
        android:fillColor="#00000000"
        android:pathData="M49,19L49,89"
        android:strokeColor="#33FFFFFF"
        android:strokeWidth="0.8" />
    <path
        android:fillColor="#00000000"
        android:pathData="M59,19L59,89"
        android:strokeColor="#33FFFFFF"
        android:strokeWidth="0.8" />
    <path
        android:fillColor="#00000000"
        android:pathData="M69,19L69,89"
        android:strokeColor="#33FFFFFF"
        android:strokeWidth="0.8" />
    <path
        android:fillColor="#00000000"
        android:pathData="M79,19L79,89"
        android:strokeColor="#33FFFFFF"
        android:strokeWidth="0.8" />
</vector>

```

### src\main\res\drawable\ic_launcher_foreground.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:aapt="http://schemas.android.com/aapt"
    android:width="108dp"
    android:height="108dp"
    android:viewportHeight="108"
    android:viewportWidth="108">
    <path
        android:fillType="evenOdd"
        android:pathData="M32,64C32,64 38.39,52.99 44.13,50.95C51.37,48.37 70.14,49.57 70.14,49.57L108.26,87.69L108,109.01L75.97,107.97L32,64Z"
        android:strokeColor="#00000000"
        android:strokeWidth="1">
        <aapt:attr name="android:fillColor">
            <gradient
                android:endX="78.5885"
                android:endY="90.9159"
                android:startX="48.7653"
                android:startY="61.0927"
                android:type="linear">
                <item
                    android:color="#44000000"
                    android:offset="0.0" />
                <item
                    android:color="#00000000"
                    android:offset="1.0" />
            </gradient>
        </aapt:attr>
    </path>
    <path
        android:fillColor="#FFFFFF"
        android:fillType="nonZero"
        android:pathData="M66.94,46.02L66.94,46.02C72.44,50.07 76,56.61 76,64L32,64C32,56.61 35.56,50.11 40.98,46.06L36.18,41.19C35.45,40.45 35.45,39.3 36.18,38.56C36.91,37.81 38.05,37.81 38.78,38.56L44.25,44.05C47.18,42.57 50.48,41.71 54,41.71C57.48,41.71 60.78,42.57 63.68,44.05L69.11,38.56C69.84,37.81 70.98,37.81 71.71,38.56C72.44,39.3 72.44,40.45 71.71,41.19L66.94,46.02ZM62.94,56.92C64.08,56.92 65,56.01 65,54.88C65,53.76 64.08,52.85 62.94,52.85C61.8,52.85 60.88,53.76 60.88,54.88C60.88,56.01 61.8,56.92 62.94,56.92ZM45.06,56.92C46.2,56.92 47.13,56.01 47.13,54.88C47.13,53.76 46.2,52.85 45.06,52.85C43.92,52.85 43,53.76 43,54.88C43,56.01 43.92,56.92 45.06,56.92Z"
        android:strokeColor="#00000000"
        android:strokeWidth="1" />
</vector>

```

### src\main\res\drawable\ic_lock.xml
```xml
<vector android:height="@dimen/_25sdp"
    android:tint="@color/sky"
    android:viewportHeight="25.0"
    android:viewportWidth="25.0"
    android:width="@dimen/_25sdp"
    xmlns:android="http://schemas.android.com/apk/res/android">
    <path
        android:fillColor="@color/sky"
        android:pathData="M18,8h-1L17,6c0,-2.76 -2.24,-5 -5,-5S7,3.24 7,6v2L6,8c-1.1,0 -2,0.9 -2,2v10c0,1.1 0.9,2 2,2h12c1.1,0 2,-0.9 2,-2L20,10c0,-1.1 -0.9,-2 -2,-2zM12,17c-1.1,0 -2,-0.9 -2,-2s0.9,-2 2,-2 2,0.9 2,2 -0.9,2 -2,2zM15.1,8L8.9,8L8.9,6c0,-1.71 1.39,-3.1 3.1,-3.1 1.71,0 3.1,1.39 3.1,3.1v2z"/>
</vector>

```

### src\main\res\drawable\ic_mail.xml
```xml
<vector android:height="@dimen/_25sdp"
    android:tint="@color/sky"
    android:viewportHeight="25.0"
    android:viewportWidth="25.0"
    android:width="@dimen/_25sdp"
    xmlns:android="http://schemas.android.com/apk/res/android">
    <path
        android:fillColor="@color/sky"
        android:pathData="M20,4L4,4c-1.1,0 -1.99,0.9 -1.99,2L2,18c0,1.1 0.9,2 2,2h16c1.1,0 2,-0.9 2,-2L22,6c0,-1.1 -0.9,-2 -2,-2zM20,8l-8,5 -8,-5L4,6l8,5 8,-5v2z"/>
</vector>

```

### src\main\res\drawable\ic_next_1.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="17dp"
    android:height="19dp"
    android:viewportWidth="17"
    android:viewportHeight="19">
  <path
      android:pathData="M0.5,19a0.51,0.51 0,0 1,-0.44 -0.25,0.51 0.51,0 0,1 0.19,-0.69L15.48,9.5 0.25,0.94A0.5,0.5 0,0 1,0.74 0.06l16,9a0.5,0.5 0,0 1,0 0.88l-16,9A0.5,0.5 0,0 1,0.5 19"
      android:fillColor="#375e97"
      android:fillType="evenOdd"/>
</vector>

```

### src\main\res\drawable\ic_notifications.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24.0"
    android:viewportHeight="24.0">
    <path
        android:fillColor="@color/sky"
        android:pathData="M12,22c1.1,0 2,-0.9 2,-2h-4c0,1.1 0.89,2 2,2zM18,16v-5c0,-3.07 -1.64,-5.64 -4.5,-6.32L13.5,4c0,-0.83 -0.67,-1.5 -1.5,-1.5s-1.5,0.67 -1.5,1.5v0.68C7.63,5.36 6,7.92 6,11v5l-2,2v1h16v-1l-2,-2z" />
</vector>

```

### src\main\res\drawable\ic_person.xml
```xml
<vector android:height="24dp"
    android:tint="@color/sky"
    android:viewportHeight="24"
    android:viewportWidth="24"
    android:width="24dp"
    xmlns:android="http://schemas.android.com/apk/res/android">
    <path
        android:fillColor="@android:color/white"
        android:pathData="M12,5.9c1.16,0 2.1,0.94 2.1,2.1s-0.94,2.1 -2.1,2.1S9.9,9.16 9.9,8s0.94,-2.1 2.1,-2.1m0,9c2.97,0 6.1,1.46 6.1,2.1v1.1L5.9,18.1L5.9,17c0,-0.64 3.13,-2.1 6.1,-2.1M12,4C9.79,4 8,5.79 8,8s1.79,4 4,4 4,-1.79 4,-4 -1.79,-4 -4,-4zM12,13c-2.67,0 -8,1.34 -8,4v3h16v-3c0,-2.66 -5.33,-4 -8,-4z"/>
</vector>

```

### src\main\res\drawable\ic_refresh_black_24dp.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
        android:width="24dp"
        android:height="24dp"
        android:viewportWidth="24.0"
        android:viewportHeight="24.0">
    <path
        android:fillColor="#FF000000"
        android:pathData="M17.65,6.35C16.2,4.9 14.21,4 12,4c-4.42,0 -7.99,3.58 -7.99,8s3.57,8 7.99,8c3.73,0 6.84,-2.55 7.73,-6h-2.08c-0.82,2.33 -3.04,4 -5.65,4 -3.31,0 -6,-2.69 -6,-6s2.69,-6 6,-6c1.66,0 3.14,0.69 4.22,1.78L13,11h7V4l-2.35,2.35z"/>
</vector>

```

### src\main\res\drawable\ic_search.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="10dp"
    android:height="10dp"
    android:viewportWidth="487.95"
    android:viewportHeight="487.55">
  <path
      android:pathData="M481.8,452.8l-140,-140.1A189.12,189.12 0,0 0,386 191.1C386,85.7 299.5,0 193.1,0S0,85.8 0,191.2 86.5,382.3 192.9,382.3a193.42,193.42 0,0 0,119.8 -41.4L453.2,481.4c8.2,8.2 20.4,8.2 28.6,0S490,461 481.8,452.8ZM41,191.2c0,-82.8 68.2,-150.1 151.9,-150.1s151.9,67.3 151.9,150.1S276.6,341.3 192.9,341.3 41,273.9 41,191.2Z"
      android:fillColor="#375e97"/>
</vector>

```

### src\main\res\drawable\ic_setting.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="847.46dp"
    android:height="894.74dp"
    android:viewportWidth="847.46"
    android:viewportHeight="894.74">
  <path
      android:pathData="M423.89,325.55a112,112 0,1 0,79.1 32.8,111 111,0 0,0 -79.1,-32.8ZM836.19,561.05 L770.79,505.15a356.53,356.53 0,0 0,0 -115.4l65.4,-55.9a32,32 0,0 0,9.3 -35.2l-0.9,-2.6A442.63,442.63 0,0 0,765 158.35l-1.8,-2.1a32.12,32.12 0,0 0,-35.1 -9.5l-81.2,28.9a349.18,349.18 0,0 0,-99.6 -57.5l-15.7,-84.9a32,32 0,0 0,-25.8 -25.7l-2.7,-0.5a450.64,450.64 0,0 0,-158.8 0l-2.7,0.5a32.06,32.06 0,0 0,-25.8 25.7L300,118.55a353.45,353.45 0,0 0,-98.9 57.3l-81.8,-29.1a32,32 0,0 0,-35.1 9.5l-1.8,2.1a446,446 0,0 0,-79.6 137.7l-0.9,2.6a32.12,32.12 0,0 0,9.3 35.2l66.2,56.5a351.53,351.53 0,0 0,-4.6 57,347.93 347.93,0 0,0 4.6,57l-66,56.5a32,32 0,0 0,-9.3 35.2l0.9,2.6a443.64,443.64 0,0 0,79.6 137.7l1.8,2.1a32.12,32.12 0,0 0,35.1 9.5l81.8,-29.1a346.29,346.29 0,0 0,98.9 57.3l15.8,85.3a32.06,32.06 0,0 0,25.8 25.7l2.7,0.5a448.3,448.3 0,0 0,158.8 0l2.7,-0.5a32,32 0,0 0,25.8 -25.7l15.7,-84.9a351.54,351.54 0,0 0,99.6 -57.5l81.2,28.9a32,32 0,0 0,35.1 -9.5l1.8,-2.1a445.93,445.93 0,0 0,79.6 -137.7l0.9,-2.6a32.28,32.28 0,0 0,-9.5 -35ZM423.89,613.25a175.8,175.8 0,1 1,175.8 -175.8A175.79,175.79 0,0 1,423.89 613.25Z"
      android:fillColor="#375e97"/>
</vector>

```

### src\main\res\drawable\ic_visibility_black_24dp.xml
```xml
<vector android:height="24dp" android:tint="@color/sky"
    android:viewportHeight="24.0" android:viewportWidth="24.0"
    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
    <path android:fillColor="@color/sky" android:pathData="M12,4.5C7,4.5 2.73,7.61 1,12c1.73,4.39 6,7.5 11,7.5s9.27,-3.11 11,-7.5c-1.73,-4.39 -6,-7.5 -11,-7.5zM12,17c-2.76,0 -5,-2.24 -5,-5s2.24,-5 5,-5 5,2.24 5,5 -2.24,5 -5,5zM12,9c-1.66,0 -3,1.34 -3,3s1.34,3 3,3 3,-1.34 3,-3 -1.34,-3 -3,-3z"/>
</vector>

```

### src\main\res\drawable\ic_visibility_off_black_24dp.xml
```xml
<vector android:height="24dp" android:tint="@color/sky"
    android:viewportHeight="24.0" android:viewportWidth="24.0"
    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
    <path android:fillColor="@color/sky" android:pathData="M12,7c2.76,0 5,2.24 5,5 0,0.65 -0.13,1.26 -0.36,1.83l2.92,2.92c1.51,-1.26 2.7,-2.89 3.43,-4.75 -1.73,-4.39 -6,-7.5 -11,-7.5 -1.4,0 -2.74,0.25 -3.98,0.7l2.16,2.16C10.74,7.13 11.35,7 12,7zM2,4.27l2.28,2.28 0.46,0.46C3.08,8.3 1.78,10.02 1,12c1.73,4.39 6,7.5 11,7.5 1.55,0 3.03,-0.3 4.38,-0.84l0.42,0.42L19.73,22 21,20.73 3.27,3 2,4.27zM7.53,9.8l1.55,1.55c-0.05,0.21 -0.08,0.43 -0.08,0.65 0,1.66 1.34,3 3,3 0.22,0 0.44,-0.03 0.65,-0.08l1.55,1.55c-0.67,0.33 -1.41,0.53 -2.2,0.53 -2.76,0 -5,-2.24 -5,-5 0,-0.79 0.2,-1.53 0.53,-2.2zM11.84,9.02l3.15,3.15 0.02,-0.16c0,-1.66 -1.34,-3 -3,-3l-0.17,0.01z"/>
</vector>

```

### src\main\res\drawable\image1_cccd.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="139dp"
    android:height="137dp"
    android:viewportWidth="139"
    android:viewportHeight="137">
  <path
      android:pathData="M0,0H139V137H0V0Z"
      android:fillColor="#4A4A4A"/>
</vector>

```

### src\main\res\drawable\image2_cccd.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="139dp"
    android:height="137dp"
    android:viewportWidth="139"
    android:viewportHeight="137">
  <path
      android:pathData="M0,0H139V137H0V0Z"
      android:fillColor="#4A4A4A"/>
</vector>

```

### src\main\res\drawable\image2_main.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="45dp"
    android:height="41dp"
    android:viewportWidth="45"
    android:viewportHeight="41">
  <path
      android:pathData="M0,20.5a22.5,20.5 0,1 0,45 0a22.5,20.5 0,1 0,-45 0z"
      android:fillColor="#4A4A4A"/>
</vector>

```

### src\main\res\drawable\image_account.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="100dp"
    android:height="100dp"
    android:viewportWidth="100"
    android:viewportHeight="100">
  <path
      android:pathData="M50,50m-50,0a50,50 0,1 1,100 0a50,50 0,1 1,-100 0"
      android:fillColor="#4A4A4A"/>
</vector>

```

### src\main\res\drawable\image_cccd.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="100dp"
    android:height="100dp"
    android:viewportWidth="100"
    android:viewportHeight="100">
  <path
      android:pathData="M50,50m-50,0a50,50 0,1 1,100 0a50,50 0,1 1,-100 0"
      android:fillColor="#4A4A4A"/>
</vector>

```

### src\main\res\drawable\image_settings.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="70dp"
    android:height="70dp"
    android:viewportWidth="70"
    android:viewportHeight="70">
  <path
      android:pathData="M35,35m-35,0a35,35 0,1 1,70 0a35,35 0,1 1,-70 0"
      android:fillColor="#4A4A4A"/>
</vector>

```

### src\main\res\drawable\image_update_profile.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="70dp"
    android:height="70dp"
    android:viewportWidth="70"
    android:viewportHeight="70">
  <path
      android:pathData="M35,35m-35,0a35,35 0,1 1,70 0a35,35 0,1 1,-70 0"
      android:fillColor="#4A4A4A"/>
</vector>

```

### src\main\res\drawable\line_8_settings.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="279dp"
    android:height="2dp"
    android:viewportWidth="279"
    android:viewportHeight="2">
  <path
      android:strokeWidth="1"
      android:pathData="M0,1.46L279,0.5"
      android:fillColor="#00000000"
      android:strokeColor="#B0B0B0"/>
</vector>

```

### src\main\res\drawable\line_8_stroke_account.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="291dp"
    android:height="2dp"
    android:viewportWidth="291"
    android:viewportHeight="2">
  <path
      android:pathData="M290.76,1L0,2L0,1L290.75,0L290.76,1Z"
      android:fillColor="#B0B0B0"
      android:fillType="evenOdd"/>
</vector>

```

### src\main\res\drawable\line_8_stroke_cccd.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="291dp"
    android:height="2dp"
    android:viewportWidth="291"
    android:viewportHeight="2">
  <path
      android:pathData="M290.75,1L0,2L0,1L290.75,0L290.75,1Z"
      android:fillColor="#B0B0B0"
      android:fillType="evenOdd"/>
</vector>

```

### src\main\res\drawable\line_8_update_profile.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="351dp"
    android:height="1dp"
    android:viewportWidth="351"
    android:viewportHeight="1">
  <path
      android:strokeWidth="1"
      android:pathData="M0,0.5L351,0.5"
      android:fillColor="#00000000"
      android:strokeColor="#B0B0B0"/>
</vector>

```

### src\main\res\drawable\message_bubble_background.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <solid android:color="@color/chat_bubble_background" />
    <corners android:radius="16dp" />
    <padding
        android:left="12dp"
        android:top="8dp"
        android:right="12dp"
        android:bottom="8dp" />
</shape>
```

### src\main\res\drawable\message_bubble_background_user.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <solid android:color="@color/input_area_background" />
    <corners android:radius="16dp" />
    <padding
        android:left="12dp"
        android:top="8dp"
        android:right="12dp"
        android:bottom="8dp" />
</shape>
```

### src\main\res\drawable\rectangle.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="22dp"
    android:height="12dp"
    android:viewportWidth="22"
    android:viewportHeight="12">
  <path
      android:strokeWidth="1"
      android:pathData="M2.667,0.5H19.333C20.53,0.5 21.5,1.47 21.5,2.667V8.667C21.5,9.863 20.529,10.833 19.333,10.833H2.667C1.47,10.833 0.5,9.863 0.5,8.667V2.667L0.511,2.445C0.622,1.353 1.545,0.5 2.667,0.5Z"
      android:strokeAlpha="0.35"
      android:fillColor="#00000000"
      android:strokeColor="#131A34"
      android:fillAlpha="0.35"/>
</vector>

```

### src\main\res\drawable\rectangle1.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="18dp"
    android:height="8dp"
    android:viewportWidth="18"
    android:viewportHeight="8">
  <path
      android:pathData="M0,1.333C0,0.597 0.597,0 1.333,0H16.667C17.403,0 18,0.597 18,1.333V6C18,6.736 17.403,7.333 16.667,7.333H1.333C0.597,7.333 0,6.736 0,6V1.333Z"
      android:fillColor="#131A34"/>
</vector>

```

### src\main\res\drawable\rectangle1_account.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="18dp"
    android:height="8dp"
    android:viewportWidth="18"
    android:viewportHeight="8">
  <path
      android:pathData="M0,1.333C0,0.597 0.597,0 1.333,0H16.667C17.403,0 18,0.597 18,1.333V6C18,6.736 17.403,7.333 16.667,7.333H1.333C0.597,7.333 0,6.736 0,6V1.333Z"
      android:fillColor="#131A34"/>
</vector>

```

### src\main\res\drawable\rectangle1_ai.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="18dp"
    android:height="8dp"
    android:viewportWidth="18"
    android:viewportHeight="8">
  <path
      android:pathData="M0,1.333C0,0.597 0.597,0 1.333,0H16.667C17.403,0 18,0.597 18,1.333V6C18,6.736 17.403,7.333 16.667,7.333H1.333C0.597,7.333 0,6.736 0,6V1.333Z"
      android:fillColor="#131A34"/>
</vector>

```

### src\main\res\drawable\rectangle1_car_details.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="18dp"
    android:height="8dp"
    android:viewportWidth="18"
    android:viewportHeight="8">
  <path
      android:pathData="M0,1.333C0,0.597 0.597,0 1.333,0H16.667C17.403,0 18,0.597 18,1.333V6C18,6.736 17.403,7.333 16.667,7.333H1.333C0.597,7.333 0,6.736 0,6V1.333Z"
      android:fillColor="#131A34"/>
</vector>

```

### src\main\res\drawable\rectangle1_cccd.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="18dp"
    android:height="8dp"
    android:viewportWidth="18"
    android:viewportHeight="8">
  <path
      android:pathData="M0,1.333C0,0.597 0.597,0 1.333,0H16.667C17.403,0 18,0.597 18,1.333V6C18,6.736 17.403,7.333 16.667,7.333H1.333C0.597,7.333 0,6.736 0,6V1.333Z"
      android:fillColor="#131A34"/>
</vector>

```

### src\main\res\drawable\rectangle1_main.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="18dp"
    android:height="8dp"
    android:viewportWidth="18"
    android:viewportHeight="8">
  <path
      android:pathData="M0,1.333C0,0.597 0.597,0 1.333,0H16.667C17.403,0 18,0.597 18,1.333V6C18,6.736 17.403,7.333 16.667,7.333H1.333C0.597,7.333 0,6.736 0,6V1.333Z"
      android:fillColor="#131A34"/>
</vector>

```

### src\main\res\drawable\rectangle1_settings.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="18dp"
    android:height="8dp"
    android:viewportWidth="18"
    android:viewportHeight="8">
  <path
      android:pathData="M0,1.333C0,0.597 0.597,0 1.333,0H16.667C17.403,0 18,0.597 18,1.333V6C18,6.736 17.403,7.333 16.667,7.333H1.333C0.597,7.333 0,6.736 0,6V1.333Z"
      android:fillColor="#131A34"/>
</vector>

```

### src\main\res\drawable\rectangle1_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="18dp"
    android:height="8dp"
    android:viewportWidth="18"
    android:viewportHeight="8">
  <path
      android:pathData="M0,1.333C0,0.597 0.597,0 1.333,0H16.667C17.403,0 18,0.597 18,1.333V6C18,6.736 17.403,7.333 16.667,7.333H1.333C0.597,7.333 0,6.736 0,6V1.333Z"
      android:fillColor="#131A34"/>
</vector>

```

### src\main\res\drawable\rectangle1_update_profile.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="18dp"
    android:height="8dp"
    android:viewportWidth="18"
    android:viewportHeight="8">
  <path
      android:pathData="M0,1.333C0,0.597 0.597,0 1.333,0H16.667C17.403,0 18,0.597 18,1.333V6C18,6.736 17.403,7.333 16.667,7.333H1.333C0.597,7.333 0,6.736 0,6V1.333Z"
      android:fillColor="#131A34"/>
</vector>

```

### src\main\res\drawable\rectangle_17_main.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="412dp"
    android:height="64dp"
    android:viewportWidth="412"
    android:viewportHeight="64">
  <path
      android:pathData="M0,0h412v64h-412z"
      android:fillColor="#003087"/>
</vector>

```

### src\main\res\drawable\rectangle_18_main.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="412dp"
    android:height="64dp"
    android:viewportWidth="412"
    android:viewportHeight="64">
  <path
      android:pathData="M0,0h412v64h-412z"
      android:fillColor="#003087"/>
</vector>

```

### src\main\res\drawable\rectangle_194.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="32dp"
    android:height="32dp"
    android:viewportWidth="32"
    android:viewportHeight="32">
  <path
      android:pathData="M10,0L22,0A10,10 0,0 1,32 10L32,22A10,10 0,0 1,22 32L10,32A10,10 0,0 1,0 22L0,10A10,10 0,0 1,10 0z"
      android:fillColor="#EEF2F9"/>
</vector>

```

### src\main\res\drawable\rectangle_194_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="32dp"
    android:height="32dp"
    android:viewportWidth="32"
    android:viewportHeight="32">
  <path
      android:pathData="M10,0L22,0A10,10 0,0 1,32 10L32,22A10,10 0,0 1,22 32L10,32A10,10 0,0 1,0 22L0,10A10,10 0,0 1,10 0z"
      android:fillColor="#EEF2F9"/>
</vector>

```

### src\main\res\drawable\rectangle_195.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="32dp"
    android:height="32dp"
    android:viewportWidth="32"
    android:viewportHeight="32">
  <path
      android:pathData="M10,0L22,0A10,10 0,0 1,32 10L32,22A10,10 0,0 1,22 32L10,32A10,10 0,0 1,0 22L0,10A10,10 0,0 1,10 0z"
      android:fillColor="#EEF2F9"/>
</vector>

```

### src\main\res\drawable\rectangle_195_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="511dp"
    android:height="320dp"
    android:viewportWidth="511"
    android:viewportHeight="320">
  <path
      android:pathData="M0,0H511V140C511,239.41 430.41,320 331,320H0V0Z"
      android:fillColor="#D2DFF4"/>
</vector>

```

### src\main\res\drawable\rectangle_196_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="32dp"
    android:height="32dp"
    android:viewportWidth="32"
    android:viewportHeight="32">
  <path
      android:pathData="M10,0L22,0A10,10 0,0 1,32 10L32,22A10,10 0,0 1,22 32L10,32A10,10 0,0 1,0 22L0,10A10,10 0,0 1,10 0z"
      android:fillColor="#EEF2F9"/>
</vector>

```

### src\main\res\drawable\rectangle_197_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="32dp"
    android:height="32dp"
    android:viewportWidth="32"
    android:viewportHeight="32">
  <path
      android:pathData="M10,0L22,0A10,10 0,0 1,32 10L32,22A10,10 0,0 1,22 32L10,32A10,10 0,0 1,0 22L0,10A10,10 0,0 1,10 0z"
      android:fillColor="#EEF2F9"/>
</vector>

```

### src\main\res\drawable\rectangle_198_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="32dp"
    android:height="32dp"
    android:viewportWidth="32"
    android:viewportHeight="32">
  <path
      android:pathData="M10,0L22,0A10,10 0,0 1,32 10L32,22A10,10 0,0 1,22 32L10,32A10,10 0,0 1,0 22L0,10A10,10 0,0 1,10 0z"
      android:fillColor="#EEF2F9"/>
</vector>

```

### src\main\res\drawable\rectangle_199_ai.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:aapt="http://schemas.android.com/aapt"
    android:width="412dp"
    android:height="880dp"
    android:viewportWidth="412"
    android:viewportHeight="880">
  <path
      android:pathData="M32,0L380,0A32,32 0,0 1,412 32L412,848A32,32 0,0 1,380 880L32,880A32,32 0,0 1,0 848L0,32A32,32 0,0 1,32 0z">
    <aapt:attr name="android:fillColor">
      <gradient 
          android:startX="206"
          android:startY="0"
          android:endX="206"
          android:endY="880"
          android:type="linear">
        <item android:offset="0.06" android:color="#FFD9D9D9"/>
        <item android:offset="0.17" android:color="#FFBDACD1"/>
        <item android:offset="0.38" android:color="#FFA07FC9"/>
        <item android:offset="0.59" android:color="#FF6F499D"/>
        <item android:offset="0.77" android:color="#FF513580"/>
        <item android:offset="1" android:color="#FF351E61"/>
      </gradient>
    </aapt:attr>
  </path>
</vector>

```

### src\main\res\drawable\rectangle_199_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="32dp"
    android:height="32dp"
    android:viewportWidth="32"
    android:viewportHeight="32">
  <path
      android:pathData="M10,0L22,0A10,10 0,0 1,32 10L32,22A10,10 0,0 1,22 32L10,32A10,10 0,0 1,0 22L0,10A10,10 0,0 1,10 0z"
      android:fillColor="#EEF2F9"/>
</vector>

```

### src\main\res\drawable\rectangle_19_main.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="239dp"
    android:height="41dp"
    android:viewportWidth="239"
    android:viewportHeight="41">
  <path
      android:strokeWidth="1"
      android:pathData="M8.5,0.5L230.5,0.5A8,8 0,0 1,238.5 8.5L238.5,32.5A8,8 0,0 1,230.5 40.5L8.5,40.5A8,8 0,0 1,0.5 32.5L0.5,8.5A8,8 0,0 1,8.5 0.5z"
      android:fillColor="#ffffff"
      android:strokeColor="#AFAFAF"/>
</vector>

```

### src\main\res\drawable\rectangle_200_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="32dp"
    android:height="32dp"
    android:viewportWidth="32"
    android:viewportHeight="32">
  <path
      android:pathData="M10,0L22,0A10,10 0,0 1,32 10L32,22A10,10 0,0 1,22 32L10,32A10,10 0,0 1,0 22L0,10A10,10 0,0 1,10 0z"
      android:fillColor="#EEF2F9"/>
</vector>

```

### src\main\res\drawable\rectangle_account.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="22dp"
    android:height="12dp"
    android:viewportWidth="22"
    android:viewportHeight="12">
  <path
      android:strokeWidth="1"
      android:pathData="M2.667,0.5H19.333C20.53,0.5 21.5,1.47 21.5,2.667V8.667C21.5,9.863 20.529,10.833 19.333,10.833H2.667C1.47,10.833 0.5,9.863 0.5,8.667V2.667L0.511,2.445C0.622,1.353 1.545,0.5 2.667,0.5Z"
      android:strokeAlpha="0.35"
      android:fillColor="#00000000"
      android:strokeColor="#131A34"
      android:fillAlpha="0.35"/>
</vector>

```

### src\main\res\drawable\rectangle_ai.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="22dp"
    android:height="12dp"
    android:viewportWidth="22"
    android:viewportHeight="12">
  <path
      android:strokeWidth="1"
      android:pathData="M2.667,0.5H19.333C20.53,0.5 21.5,1.47 21.5,2.667V8.667C21.5,9.863 20.529,10.833 19.333,10.833H2.667C1.47,10.833 0.5,9.863 0.5,8.667V2.667L0.511,2.445C0.622,1.353 1.545,0.5 2.667,0.5Z"
      android:strokeAlpha="0.35"
      android:fillColor="#00000000"
      android:strokeColor="#131A34"
      android:fillAlpha="0.35"/>
</vector>

```

### src\main\res\drawable\rectangle_car_details.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="22dp"
    android:height="12dp"
    android:viewportWidth="22"
    android:viewportHeight="12">
  <path
      android:strokeWidth="1"
      android:pathData="M2.667,0.5H19.333C20.53,0.5 21.5,1.47 21.5,2.667V8.667C21.5,9.863 20.529,10.833 19.333,10.833H2.667C1.47,10.833 0.5,9.863 0.5,8.667V2.667L0.511,2.445C0.622,1.353 1.545,0.5 2.667,0.5Z"
      android:strokeAlpha="0.35"
      android:fillColor="#00000000"
      android:strokeColor="#131A34"
      android:fillAlpha="0.35"/>
</vector>

```

### src\main\res\drawable\rectangle_cccd.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="22dp"
    android:height="12dp"
    android:viewportWidth="22"
    android:viewportHeight="12">
  <path
      android:strokeWidth="1"
      android:pathData="M2.667,0.5H19.333C20.53,0.5 21.5,1.47 21.5,2.667V8.667C21.5,9.863 20.529,10.833 19.333,10.833H2.667C1.47,10.833 0.5,9.863 0.5,8.667V2.667L0.511,2.445C0.622,1.353 1.545,0.5 2.667,0.5Z"
      android:strokeAlpha="0.35"
      android:fillColor="#00000000"
      android:strokeColor="#131A34"
      android:fillAlpha="0.35"/>
</vector>

```

### src\main\res\drawable\rectangle_main.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="22dp"
    android:height="12dp"
    android:viewportWidth="22"
    android:viewportHeight="12">
  <path
      android:strokeWidth="1"
      android:pathData="M2.667,0.5H19.333C20.53,0.5 21.5,1.47 21.5,2.667V8.667C21.5,9.863 20.529,10.833 19.333,10.833H2.667C1.47,10.833 0.5,9.863 0.5,8.667V2.667L0.511,2.445C0.622,1.353 1.545,0.5 2.667,0.5Z"
      android:strokeAlpha="0.35"
      android:fillColor="#00000000"
      android:strokeColor="#131A34"
      android:fillAlpha="0.35"/>
</vector>

```

### src\main\res\drawable\rectangle_quarter_radius.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android">
        <shape android:shape="rectangle"/>
            <corners
                android:topLeftRadius="0dp"
                android:topRightRadius="0dp"
                android:bottomLeftRadius="0dp"
                android:bottomRightRadius="80dp" />

</shape>
```

### src\main\res\drawable\rectangle_quarter_radius_top_right.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android">
        <shape android:shape="rectangle"/>
            <corners
                android:topLeftRadius="0dp"
                android:topRightRadius="80dp"
                android:bottomLeftRadius="0dp"
                android:bottomRightRadius="0dp" />

</shape>
```

### src\main\res\drawable\rectangle_settings.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="22dp"
    android:height="12dp"
    android:viewportWidth="22"
    android:viewportHeight="12">
  <path
      android:strokeWidth="1"
      android:pathData="M2.667,0.5H19.333C20.53,0.5 21.5,1.47 21.5,2.667V8.667C21.5,9.863 20.529,10.833 19.333,10.833H2.667C1.47,10.833 0.5,9.863 0.5,8.667V2.667L0.511,2.445C0.622,1.353 1.545,0.5 2.667,0.5Z"
      android:strokeAlpha="0.35"
      android:fillColor="#00000000"
      android:strokeColor="#131A34"
      android:fillAlpha="0.35"/>
</vector>

```

### src\main\res\drawable\rectangle_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="22dp"
    android:height="12dp"
    android:viewportWidth="22"
    android:viewportHeight="12">
  <path
      android:strokeWidth="1"
      android:pathData="M2.667,0.5H19.333C20.53,0.5 21.5,1.47 21.5,2.667V8.667C21.5,9.863 20.529,10.833 19.333,10.833H2.667C1.47,10.833 0.5,9.863 0.5,8.667V2.667L0.511,2.445C0.622,1.353 1.545,0.5 2.667,0.5Z"
      android:strokeAlpha="0.35"
      android:fillColor="#00000000"
      android:strokeColor="#131A34"
      android:fillAlpha="0.35"/>
</vector>

```

### src\main\res\drawable\rectangle_update_profile.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="22dp"
    android:height="12dp"
    android:viewportWidth="22"
    android:viewportHeight="12">
  <path
      android:strokeWidth="1"
      android:pathData="M2.667,0.5H19.333C20.53,0.5 21.5,1.47 21.5,2.667V8.667C21.5,9.863 20.529,10.833 19.333,10.833H2.667C1.47,10.833 0.5,9.863 0.5,8.667V2.667L0.511,2.445C0.622,1.353 1.545,0.5 2.667,0.5Z"
      android:strokeAlpha="0.35"
      android:fillColor="#00000000"
      android:strokeColor="#131A34"
      android:fillAlpha="0.35"/>
</vector>

```

### src\main\res\drawable\red_round_button.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <corners android:radius="25dp" />
    <solid android:color="@color/sunset" />
</shape>
```

### src\main\res\drawable\rounded_corner.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <corners android:radius="15dp" />
    <solid android:color="@android:color/transparent" />
</shape>
```

### src\main\res\drawable\round_card.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <corners android:radius="@dimen/_20sdp" />
    <solid android:color="@color/sky" />
</shape>
```

### src\main\res\drawable\round_line.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android"
    android:shape="rectangle">
    <corners android:radius="25dp"/>
    <gradient
        android:angle="0"
        android:centerColor="@color/white"
        android:startColor="@color/white"
        android:endColor="@color/white"/>
    <stroke
        android:color="@color/sunset"
        android:width="2dp"/>
</shape>
```

### src\main\res\drawable\s000000sw1bfffcfc.xml
```xml
<?xml version="1.0" encoding="UTF-8"?>
<shape
    xmlns:android="http://schemas.android.com/apk/res/android">
    <solid
        android:color="#FFFCFC"
        />
    <stroke
        android:color="#000000"
        android:width="1dp"
        />
</shape>

```

### src\main\res\drawable\s003087sw1bffffff.xml
```xml
<?xml version="1.0" encoding="UTF-8"?>
<shape
    xmlns:android="http://schemas.android.com/apk/res/android">
    <solid
        android:color="#FFFFFF"
        />
    <stroke
        android:color="#003087"
        android:width="1dp"
        />
</shape>

```

### src\main\res\drawable\s003087sw1cr100b0030871f.xml
```xml
<?xml version="1.0" encoding="UTF-8"?>
<shape
    xmlns:android="http://schemas.android.com/apk/res/android">
    <solid
        android:color="#1F003087"
        />
    <stroke
        android:color="#003087"
        android:width="1dp"
        />
    <corners
        android:radius="100dp"
        />
</shape>

```

### src\main\res\drawable\s003087sw1cr15bffffff.xml
```xml
<?xml version="1.0" encoding="UTF-8"?>
<shape
    xmlns:android="http://schemas.android.com/apk/res/android">
    <solid
        android:color="#FFFFFF"
        />
    <stroke
        android:color="#003087"
        android:width="1dp"
        />
    <corners
        android:radius="15dp"
        />
</shape>

```

### src\main\res\drawable\s3dd34csw3b3dd34c.xml
```xml
<?xml version="1.0" encoding="UTF-8"?>
<shape
    xmlns:android="http://schemas.android.com/apk/res/android">
    <solid
        android:color="#3DD34C"
        />
    <stroke
        android:color="#3DD34C"
        android:width="3dp"
        />
</shape>

```

### src\main\res\drawable\s4d3a4dsw1cr100.xml
```xml
<?xml version="1.0" encoding="UTF-8"?>
<shape
    xmlns:android="http://schemas.android.com/apk/res/android">
    <stroke
        android:color="#4D3A4D"
        android:width="1dp"
        />
    <corners
        android:radius="100dp"
        />
</shape>

```

### src\main\res\drawable\s4d3a4dsw1cr100bffbc7d33.xml
```xml
<?xml version="1.0" encoding="UTF-8"?>
<shape
    xmlns:android="http://schemas.android.com/apk/res/android">
    <solid
        android:color="#33FFBC7D"
        />
    <stroke
        android:color="#4D3A4D"
        android:width="1dp"
        />
    <corners
        android:radius="100dp"
        />
</shape>

```

### src\main\res\drawable\s4d3a4dsw1cr12.xml
```xml
<?xml version="1.0" encoding="UTF-8"?>
<shape
    xmlns:android="http://schemas.android.com/apk/res/android">
    <stroke
        android:color="#4D3A4D"
        android:width="1dp"
        />
    <corners
        android:radius="12dp"
        />
</shape>

```

### src\main\res\drawable\s4d3a4dsw1cr8bffffff.xml
```xml
<?xml version="1.0" encoding="UTF-8"?>
<shape
    xmlns:android="http://schemas.android.com/apk/res/android">
    <solid
        android:color="#FFFFFF"
        />
    <stroke
        android:color="#003087"
        android:width="1dp"
        />
    <corners
        android:radius="15dp"
        />
</shape>

```

### src\main\res\drawable\s6d62f7sw7b6d62f7.xml
```xml
<?xml version="1.0" encoding="UTF-8"?>
<shape
    xmlns:android="http://schemas.android.com/apk/res/android">
    <solid
        android:color="#6D62F7"
        />
    <stroke
        android:color="#6D62F7"
        android:width="7dp"
        />
</shape>

```

### src\main\res\drawable\sb60101sw1cr100bb6050233.xml
```xml
<?xml version="1.0" encoding="UTF-8"?>
<shape
    xmlns:android="http://schemas.android.com/apk/res/android">
    <solid
        android:color="#33B60502"
        />
    <stroke
        android:color="#B60101"
        android:width="1dp"
        />
    <corners
        android:radius="100dp"
        />
</shape>

```

### src\main\res\drawable\sb66e01sw1cr100bb64d0233.xml
```xml
<?xml version="1.0" encoding="UTF-8"?>
<shape
    xmlns:android="http://schemas.android.com/apk/res/android">
    <solid
        android:color="#33B64D02"
        />
    <stroke
        android:color="#B66E01"
        android:width="1dp"
        />
    <corners
        android:radius="100dp"
        />
</shape>

```

### src\main\res\drawable\sbbbbbbsw1.xml
```xml
<?xml version="1.0" encoding="UTF-8"?>
<shape
    xmlns:android="http://schemas.android.com/apk/res/android">
    <stroke
        android:color="#BBBBBB"
        android:width="1dp"
        />
</shape>

```

### src\main\res\drawable\select_button.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android"
    android:shape="rectangle">
    <corners
        android:topLeftRadius="@dimen/_15sdp"
        android:bottomRightRadius="@dimen/_10sdp" />
    <solid android:color="@color/white" />
    <stroke
        android:width="1dp"
        android:color="@color/sky" />
</shape>
```

### src\main\res\drawable\setting_button_gradient.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <gradient
        android:startColor="@color/setting_button_gradient_start"
        android:endColor="@color/setting_button_gradient_end"
        android:angle="45" />
    <corners android:radius="48dp" />
</shape>
```

### src\main\res\drawable\setting_button_ripple.xml
```xml
<selector xmlns:android="http://schemas.android.com/apk/res/android">
    <item android:state_pressed="true">
        <shape>
            <solid android:color="#1A00A3FF" />
            <corners android:radius="48dp" />
        </shape>
    </item>
    <item>
        <shape>
            <gradient
                android:startColor="@color/setting_button_gradient_start"
                android:endColor="@color/setting_button_gradient_end"
                android:angle="45" />
            <corners android:radius="48dp" />
        </shape>
    </item>
</selector>
```

### src\main\res\drawable\setting_sign_out_gradient.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <gradient
        android:startColor="@color/setting_sign_out_gradient_start"
        android:centerColor="@color/setting_sign_out_gradient_mid"
        android:endColor="@color/setting_sign_out_gradient_end"
        android:angle="0" />
    <corners android:radius="48dp" />
</shape>
```

### src\main\res\drawable\show_password_selector.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<selector xmlns:android="http://schemas.android.com/apk/res/android">
    <item android:drawable="@drawable/ic_visibility_black_24dp" android:state_checked="true"/>
    <item android:drawable="@drawable/ic_visibility_off_black_24dp" />
</selector>
```

### src\main\res\drawable\splash_scroll_inactive.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android"
    android:shape="rectangle">
    <corners android:radius="3.3dp" />
    <stroke
        android:width="1.1dp"
        android:color="#E1E1E2" />
</shape>
```

### src\main\res\drawable\stroke.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<layer-list xmlns:android="http://schemas.android.com/apk/res/android">

    <item>
        <shape android:shape="rectangle">
            <solid android:color="@color/transparent"/>
        </shape>
    </item>

    <item android:right="2dp" android:left="2dp" android:top="2dp" android:bottom="2dp">
        <shape android:shape="rectangle">
            <stroke
                android:width="2dp"
                android:color="@color/sky" />
        </shape>
    </item>

</layer-list>

```

### src\main\res\drawable\time_9_41_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="29dp"
    android:height="12dp"
    android:viewportWidth="29"
    android:viewportHeight="12">
  <path
      android:pathData="M3.945,11.313C6.688,11.313 8.316,9.168 8.316,5.537C8.316,4.169 8.055,3.019 7.554,2.13C6.829,0.747 5.582,0 4.005,0C1.659,0 0,1.577 0,3.788C0,5.866 1.494,7.375 3.549,7.375C4.812,7.375 5.836,6.785 6.344,5.761H6.366C6.366,5.761 6.396,5.761 6.404,5.761C6.419,5.761 6.471,5.761 6.471,5.761C6.471,8.227 5.537,9.699 3.96,9.699C3.034,9.699 2.316,9.191 2.07,8.376H0.149C0.471,10.147 1.973,11.313 3.945,11.313ZM4.012,5.843C2.772,5.843 1.89,4.961 1.89,3.729C1.89,2.526 2.817,1.607 4.02,1.607C5.223,1.607 6.15,2.541 6.15,3.758C6.15,4.961 5.245,5.843 4.012,5.843Z"
      android:fillColor="#131A34"/>
  <path
      android:pathData="M11.47,11.208C12.18,11.208 12.665,10.7 12.665,10.028C12.665,9.348 12.18,8.847 11.47,8.847C10.768,8.847 10.274,9.348 10.274,10.028C10.274,10.7 10.768,11.208 11.47,11.208ZM11.47,5.604C12.18,5.604 12.665,5.103 12.665,4.431C12.665,3.751 12.18,3.25 11.47,3.25C10.768,3.25 10.274,3.751 10.274,4.431C10.274,5.103 10.768,5.604 11.47,5.604Z"
      android:fillColor="#131A34"/>
  <path
      android:pathData="M19.66,11.051H21.505V9.041H22.962V7.412H21.505V0.269H18.785C16.88,3.138 15.363,5.537 14.392,7.323V9.041H19.66V11.051ZM16.178,7.345C17.433,5.133 18.554,3.362 19.585,1.838H19.69V7.457H16.178V7.345Z"
      android:fillColor="#131A34"/>
  <path
      android:pathData="M27.072,11.051H29V0.269H27.08L24.263,2.242V4.095L26.945,2.212H27.072V11.051Z"
      android:fillColor="#131A34"/>
</vector>

```

### src\main\res\drawable\vector.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="28dp"
    android:height="28dp"
    android:viewportWidth="28"
    android:viewportHeight="28">
  <path
      android:pathData="M14.55,21.849L20.851,25.849C21.664,26.362 22.664,25.599 22.426,24.662L20.601,17.485C20.552,17.287 20.559,17.078 20.624,16.883C20.688,16.688 20.806,16.516 20.963,16.385L26.614,11.672C27.352,11.059 26.977,9.822 26.014,9.759L18.638,9.284C18.437,9.273 18.243,9.202 18.081,9.083C17.919,8.963 17.796,8.798 17.726,8.609L14.975,1.683C14.902,1.483 14.77,1.31 14.595,1.188C14.421,1.066 14.213,1 14,1C13.787,1 13.579,1.066 13.405,1.188C13.23,1.31 13.098,1.483 13.025,1.683L10.274,8.609C10.204,8.798 10.081,8.963 9.919,9.083C9.757,9.202 9.563,9.273 9.362,9.284L1.986,9.759C1.023,9.822 0.648,11.059 1.386,11.672L7.036,16.385C7.194,16.516 7.312,16.688 7.376,16.883C7.441,17.078 7.448,17.287 7.399,17.485L5.711,24.136C5.424,25.262 6.624,26.174 7.587,25.562L13.45,21.849C13.614,21.744 13.805,21.688 14,21.688C14.195,21.688 14.386,21.744 14.55,21.849V21.849Z"
      android:strokeLineJoin="round"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#FFFF00"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector1.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="19dp"
    android:height="21dp"
    android:viewportWidth="19"
    android:viewportHeight="21">
  <path
      android:pathData="M18.062,20.222V18.062C18.062,16.916 17.607,15.817 16.796,15.006C15.986,14.196 14.887,13.741 13.741,13.741H5.099C3.953,13.741 2.854,14.196 2.043,15.006C1.233,15.817 0.778,16.916 0.778,18.062V20.222"
      android:strokeLineJoin="round"
      android:strokeWidth="1.5"
      android:fillColor="#00000000"
      android:strokeColor="#B0B0B0"
      android:strokeLineCap="round"/>
  <path
      android:pathData="M9.42,9.42C11.806,9.42 13.741,7.485 13.741,5.099C13.741,2.712 11.806,0.778 9.42,0.778C7.033,0.778 5.099,2.712 5.099,5.099C5.099,7.485 7.033,9.42 9.42,9.42Z"
      android:strokeLineJoin="round"
      android:strokeWidth="1.5"
      android:fillColor="#00000000"
      android:strokeColor="#B0B0B0"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector10_ai.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="28dp"
    android:height="28dp"
    android:viewportWidth="28"
    android:viewportHeight="28">
  <path
      android:pathData="M14.55,21.848L20.851,25.849C21.664,26.361 22.664,25.599 22.426,24.661L20.601,17.485C20.552,17.286 20.559,17.078 20.624,16.883C20.688,16.688 20.806,16.516 20.963,16.385L26.614,11.672C27.352,11.059 26.977,9.822 26.014,9.759L18.638,9.284C18.437,9.272 18.243,9.202 18.081,9.082C17.919,8.963 17.796,8.798 17.726,8.609L14.975,1.683C14.902,1.483 14.77,1.31 14.595,1.188C14.421,1.066 14.213,1 14,1C13.787,1 13.579,1.066 13.405,1.188C13.23,1.31 13.098,1.483 13.025,1.683L10.274,8.609C10.204,8.798 10.081,8.963 9.919,9.082C9.757,9.202 9.563,9.272 9.362,9.284L1.986,9.759C1.023,9.822 0.648,11.059 1.386,11.672L7.037,16.385C7.194,16.516 7.312,16.688 7.376,16.883C7.441,17.078 7.448,17.286 7.399,17.485L5.711,24.136C5.424,25.261 6.624,26.174 7.587,25.561L13.45,21.848C13.614,21.744 13.805,21.688 14,21.688C14.195,21.688 14.386,21.744 14.55,21.848V21.848Z"
      android:strokeLineJoin="round"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#FFFF00"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector10_settings.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="2dp"
    android:height="8dp"
    android:viewportWidth="2"
    android:viewportHeight="8">
  <path
      android:pathData="M1,1V6.25"
      android:strokeLineJoin="round"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#000000"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector10_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="22dp"
    android:height="22dp"
    android:viewportWidth="22"
    android:viewportHeight="22">
  <path
      android:pathData="M7.128,10.88C6.782,10.031 6.606,9.123 6.61,8.206C6.61,6.785 7.031,5.396 7.82,4.215C8.61,3.033 9.732,2.112 11.045,1.569C12.357,1.025 13.802,0.883 15.196,1.16C16.589,1.437 17.869,2.121 18.874,3.126C19.879,4.131 20.563,5.411 20.84,6.805C21.117,8.198 20.975,9.643 20.431,10.955C19.888,12.268 18.967,13.39 17.785,14.18C16.604,14.969 15.215,15.39 13.794,15.39C12.877,15.394 11.969,15.218 11.12,14.872V14.872L9.803,16.189H7.408V18.583H5.013V20.978H1.022V16.987L7.128,10.88Z"
      android:strokeLineJoin="round"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#B0B0B0"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector11_ai.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="272dp"
    android:height="156dp"
    android:viewportWidth="272"
    android:viewportHeight="156">
  <path
      android:pathData="M186.06,0.49L270.8,48.97C272.07,49.7 271.91,50.97 270.44,51.82L90.56,155.3C89.09,156.14 86.87,156.24 85.59,155.51L0.86,107.03C-0.41,106.3 -0.25,105.03 1.21,104.18L181.1,0.7C182.57,-0.14 184.79,-0.24 186.06,0.49Z"
      android:fillColor="#180D5B"/>
</vector>

```

### src\main\res\drawable\vector11_settings.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="20dp"
    android:height="20dp"
    android:viewportWidth="20"
    android:viewportHeight="20">
  <path
      android:pathData="M13.422,1H6.578C6.481,1 6.384,1.019 6.294,1.056C6.204,1.093 6.122,1.147 6.053,1.216L1.216,6.053C1.147,6.122 1.093,6.204 1.056,6.294C1.019,6.384 1,6.481 1,6.578V13.422C1,13.519 1.019,13.616 1.056,13.706C1.093,13.796 1.147,13.878 1.216,13.947L6.053,18.784C6.122,18.853 6.204,18.907 6.294,18.944C6.384,18.982 6.481,19 6.578,19H13.422C13.519,19 13.616,18.982 13.706,18.944C13.796,18.907 13.878,18.853 13.947,18.784L18.784,13.947C18.853,13.878 18.907,13.796 18.944,13.706C18.982,13.616 19,13.519 19,13.422V6.578C19,6.481 18.982,6.384 18.944,6.294C18.907,6.204 18.853,6.122 18.784,6.053L13.947,1.216C13.878,1.147 13.796,1.093 13.706,1.056C13.616,1.019 13.519,1 13.422,1V1Z"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#000000"/>
</vector>

```

### src\main\res\drawable\vector11_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="3dp"
    android:height="3dp"
    android:viewportWidth="3"
    android:viewportHeight="3">
  <path
      android:pathData="M1.5,3C2.3284,3 3,2.3284 3,1.5C3,0.6716 2.3284,0 1.5,0C0.6716,0 0,0.6716 0,1.5C0,2.3284 0.6716,3 1.5,3Z"
      android:fillColor="#B0B0B0"/>
</vector>

```

### src\main\res\drawable\vector12_settings.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="3dp"
    android:height="3dp"
    android:viewportWidth="3"
    android:viewportHeight="3">
  <path
      android:pathData="M1.5,3C2.3284,3 3,2.3284 3,1.5C3,0.6716 2.3284,0 1.5,0C0.6716,0 0,0.6716 0,1.5C0,2.3284 0.6716,3 1.5,3Z"
      android:fillColor="#000000"/>
</vector>

```

### src\main\res\drawable\vector12_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="22dp"
    android:height="22dp"
    android:viewportWidth="22"
    android:viewportHeight="22">
  <path
      android:pathData="M7.128,10.88C6.782,10.031 6.606,9.123 6.61,8.206C6.61,6.785 7.031,5.396 7.82,4.215C8.61,3.033 9.732,2.112 11.045,1.569C12.357,1.025 13.802,0.883 15.196,1.16C16.589,1.437 17.869,2.121 18.874,3.126C19.879,4.131 20.563,5.411 20.84,6.805C21.117,8.198 20.975,9.643 20.431,10.955C19.888,12.268 18.967,13.39 17.785,14.18C16.604,14.969 15.215,15.39 13.794,15.39C12.877,15.394 11.969,15.218 11.12,14.872V14.872L9.803,16.189H7.408V18.583H5.013V20.978H1.022V16.987L7.128,10.88Z"
      android:strokeLineJoin="round"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#B0B0B0"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector13_settings.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="26dp"
    android:height="26dp"
    android:viewportWidth="26"
    android:viewportHeight="26">
  <path
      android:pathData="M13,16.337C14.843,16.337 16.337,14.843 16.337,13C16.337,11.157 14.843,9.663 13,9.663C11.157,9.663 9.663,11.157 9.663,13C9.663,14.843 11.157,16.337 13,16.337Z"
      android:strokeLineJoin="round"
      android:strokeWidth="1.5"
      android:fillColor="#00000000"
      android:strokeColor="#090A0A"
      android:strokeLineCap="round"/>
  <path
      android:pathData="M21.231,16.337C21.083,16.672 21.039,17.045 21.104,17.405C21.17,17.766 21.342,18.099 21.598,18.361L21.665,18.428C21.872,18.635 22.036,18.88 22.148,19.15C22.26,19.42 22.317,19.71 22.317,20.002C22.317,20.294 22.26,20.584 22.148,20.854C22.036,21.124 21.872,21.369 21.665,21.576C21.458,21.783 21.213,21.947 20.943,22.059C20.673,22.171 20.383,22.228 20.091,22.228C19.799,22.228 19.509,22.171 19.239,22.059C18.969,21.947 18.724,21.783 18.517,21.576L18.45,21.509C18.188,21.253 17.855,21.081 17.494,21.015C17.133,20.95 16.761,20.994 16.426,21.142C16.097,21.283 15.816,21.517 15.619,21.816C15.421,22.114 15.315,22.464 15.314,22.822V23.011C15.314,23.601 15.079,24.167 14.662,24.584C14.245,25.001 13.679,25.235 13.089,25.235C12.499,25.235 11.933,25.001 11.516,24.584C11.099,24.167 10.864,23.601 10.864,23.011V22.911C10.856,22.542 10.737,22.185 10.522,21.886C10.308,21.586 10.009,21.358 9.663,21.231C9.328,21.083 8.955,21.039 8.595,21.104C8.234,21.17 7.901,21.342 7.639,21.598L7.572,21.665C7.365,21.872 7.12,22.036 6.85,22.148C6.58,22.26 6.29,22.317 5.998,22.317C5.706,22.317 5.416,22.26 5.146,22.148C4.876,22.036 4.631,21.872 4.424,21.665C4.217,21.458 4.053,21.213 3.941,20.943C3.829,20.673 3.772,20.383 3.772,20.091C3.772,19.799 3.829,19.509 3.941,19.239C4.053,18.969 4.217,18.724 4.424,18.517L4.491,18.45C4.747,18.188 4.919,17.855 4.985,17.494C5.05,17.133 5.006,16.761 4.858,16.426C4.717,16.097 4.483,15.816 4.184,15.619C3.886,15.421 3.536,15.315 3.178,15.314H2.989C2.399,15.314 1.833,15.079 1.416,14.662C0.999,14.245 0.765,13.679 0.765,13.089C0.765,12.499 0.999,11.933 1.416,11.516C1.833,11.099 2.399,10.864 2.989,10.864H3.089C3.458,10.856 3.815,10.737 4.114,10.522C4.414,10.308 4.642,10.009 4.769,9.663C4.917,9.328 4.961,8.955 4.896,8.595C4.83,8.234 4.658,7.901 4.402,7.639L4.335,7.572C4.128,7.365 3.964,7.12 3.852,6.85C3.74,6.58 3.683,6.29 3.683,5.998C3.683,5.706 3.74,5.416 3.852,5.146C3.964,4.876 4.128,4.631 4.335,4.424C4.542,4.217 4.787,4.053 5.057,3.941C5.327,3.829 5.617,3.772 5.909,3.772C6.201,3.772 6.491,3.829 6.761,3.941C7.031,4.053 7.276,4.217 7.483,4.424L7.55,4.491C7.812,4.747 8.145,4.919 8.506,4.985C8.866,5.05 9.239,5.006 9.574,4.858H9.663C9.992,4.717 10.273,4.483 10.47,4.184C10.668,3.886 10.774,3.536 10.775,3.178V2.989C10.775,2.399 11.01,1.833 11.427,1.416C11.844,0.999 12.41,0.765 13,0.765C13.59,0.765 14.156,0.999 14.573,1.416C14.99,1.833 15.225,2.399 15.225,2.989V3.089C15.226,3.447 15.332,3.797 15.53,4.095C15.727,4.394 16.008,4.628 16.337,4.769C16.672,4.917 17.045,4.961 17.405,4.896C17.766,4.83 18.099,4.658 18.361,4.402L18.428,4.335C18.635,4.128 18.88,3.964 19.15,3.852C19.42,3.74 19.71,3.683 20.002,3.683C20.294,3.683 20.584,3.74 20.854,3.852C21.124,3.964 21.369,4.128 21.576,4.335C21.783,4.542 21.947,4.787 22.059,5.057C22.171,5.327 22.228,5.617 22.228,5.909C22.228,6.201 22.171,6.491 22.059,6.761C21.947,7.031 21.783,7.276 21.576,7.483L21.509,7.55C21.253,7.812 21.081,8.145 21.015,8.506C20.95,8.866 20.994,9.239 21.142,9.574V9.663C21.283,9.992 21.517,10.273 21.816,10.47C22.114,10.668 22.464,10.774 22.822,10.775H23.011C23.601,10.775 24.167,11.01 24.584,11.427C25.001,11.844 25.235,12.41 25.235,13C25.235,13.59 25.001,14.156 24.584,14.573C24.167,14.99 23.601,15.225 23.011,15.225H22.911C22.553,15.226 22.203,15.332 21.905,15.53C21.606,15.727 21.372,16.008 21.231,16.337Z"
      android:strokeLineJoin="round"
      android:strokeWidth="1.5"
      android:fillColor="#00000000"
      android:strokeColor="#090A0A"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector13_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="3dp"
    android:height="3dp"
    android:viewportWidth="3"
    android:viewportHeight="3">
  <path
      android:pathData="M1.5,3C2.3284,3 3,2.3284 3,1.5C3,0.6716 2.3284,0 1.5,0C0.6716,0 0,0.6716 0,1.5C0,2.3284 0.6716,3 1.5,3Z"
      android:fillColor="#B0B0B0"/>
</vector>

```

### src\main\res\drawable\vector14_settings.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="22dp"
    android:height="22dp"
    android:viewportWidth="22"
    android:viewportHeight="22">
  <path
      android:pathData="M0.767,7.93L11,0.767L21.233,7.93V19.186C21.233,19.729 20.993,20.249 20.566,20.633C20.14,21.017 19.562,21.233 18.959,21.233H3.041C2.438,21.233 1.86,21.017 1.433,20.633C1.007,20.249 0.767,19.729 0.767,19.186V7.93Z"
      android:strokeLineJoin="round"
      android:strokeWidth="1.5"
      android:fillColor="#00000000"
      android:strokeColor="#6A6A6A"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector14_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="26dp"
    android:height="24dp"
    android:viewportWidth="26"
    android:viewportHeight="24">
  <path
      android:pathData="M13,24C20.18,24 26,18.627 26,12C26,5.373 20.18,0 13,0C5.82,0 0,5.373 0,12C0,18.627 5.82,24 13,24Z"
      android:fillColor="#3B5998"/>
</vector>

```

### src\main\res\drawable\vector15_settings.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="22dp"
    android:height="21dp"
    android:viewportWidth="22"
    android:viewportHeight="21">
  <path
      android:pathData="M11.285,16.82L16.062,19.853C16.679,20.242 17.437,19.663 17.257,18.952L15.873,13.511C15.835,13.36 15.841,13.202 15.89,13.054C15.939,12.907 16.028,12.776 16.148,12.677L20.433,9.103C20.992,8.639 20.707,7.7 19.978,7.653L14.384,7.293C14.232,7.284 14.085,7.231 13.962,7.14C13.839,7.049 13.746,6.924 13.693,6.781L11.607,1.529C11.552,1.377 11.451,1.246 11.319,1.153C11.187,1.061 11.029,1.011 10.868,1.011C10.706,1.011 10.549,1.061 10.416,1.153C10.284,1.246 10.183,1.377 10.128,1.529L8.043,6.781C7.99,6.924 7.896,7.049 7.773,7.14C7.65,7.231 7.503,7.284 7.351,7.293L1.758,7.653C1.028,7.7 0.743,8.639 1.303,9.103L5.587,12.677C5.707,12.776 5.797,12.907 5.845,13.054C5.894,13.202 5.9,13.36 5.862,13.511L4.583,18.554C4.365,19.407 5.275,20.1 6.005,19.635L10.45,16.82C10.575,16.74 10.72,16.698 10.868,16.698C11.015,16.698 11.16,16.74 11.285,16.82V16.82Z"
      android:strokeLineJoin="round"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#6A6A6B"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector15_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="8dp"
    android:height="16dp"
    android:viewportWidth="8"
    android:viewportHeight="16">
  <path
      android:pathData="M7.669,7.985H5.299V16H1.708V7.985H0V5.168H1.708V3.345C1.708,2.041 2.379,0 5.331,0L7.991,0.01V2.745H6.061C5.744,2.745 5.299,2.891 5.299,3.512V5.17H7.983L7.669,7.985Z"
      android:fillColor="#ffffff"/>
</vector>

```

### src\main\res\drawable\vector16_settings.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="20dp"
    android:height="19dp"
    android:viewportWidth="20"
    android:viewportHeight="19">
  <path
      android:pathData="M1,7V16.75C1,16.949 1.079,17.14 1.22,17.28C1.36,17.421 1.551,17.5 1.75,17.5H18.25C18.449,17.5 18.64,17.421 18.78,17.28C18.921,17.14 19,16.949 19,16.75V7L10,1L1,7Z"
      android:strokeLineJoin="round"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#6A6A6A"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector16_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="26dp"
    android:height="24dp"
    android:viewportWidth="26"
    android:viewportHeight="24">
  <path
      android:pathData="M13,24C20.18,24 26,18.627 26,12C26,5.373 20.18,0 13,0C5.82,0 0,5.373 0,12C0,18.627 5.82,24 13,24Z"
      android:fillColor="#3B5998"/>
</vector>

```

### src\main\res\drawable\vector17_settings.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="10dp"
    android:height="8dp"
    android:viewportWidth="10"
    android:viewportHeight="8">
  <path
      android:pathData="M8.904,1.096L1.096,6.613"
      android:strokeLineJoin="round"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#6A6A6A"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector17_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="8dp"
    android:height="16dp"
    android:viewportWidth="8"
    android:viewportHeight="16">
  <path
      android:pathData="M7.669,7.985H5.299V16H1.708V7.985H0V5.168H1.708V3.345C1.708,2.041 2.379,0 5.331,0L7.991,0.01V2.745H6.061C5.744,2.745 5.299,2.891 5.299,3.512V5.17H7.983L7.669,7.985Z"
      android:fillColor="#ffffff"/>
</vector>

```

### src\main\res\drawable\vector18_settings.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="10dp"
    android:height="8dp"
    android:viewportWidth="10"
    android:viewportHeight="8">
  <path
      android:pathData="M8.904,6.613L1.096,1.096"
      android:strokeLineJoin="round"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#6A6A6A"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector19_settings.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="20dp"
    android:height="8dp"
    android:viewportWidth="20"
    android:viewportHeight="8">
  <path
      android:pathData="M19,1L11.641,6.25H8.359L1,1"
      android:strokeLineJoin="round"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#6A6A6A"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector1_1.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="2dp"
    android:viewportWidth="24"
    android:viewportHeight="2">
  <path
      android:pathData="M1,1H23"
      android:strokeLineJoin="round"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#ffffff"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector1_cccd.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="26dp"
    android:height="26dp"
    android:viewportWidth="26"
    android:viewportHeight="26">
  <path
      android:pathData="M3.484,25.235H22.516C24.018,25.235 25.235,24.018 25.235,22.516V3.484C25.235,1.982 24.018,0.765 22.516,0.765H3.484C1.982,0.765 0.765,1.982 0.765,3.484V22.516C0.765,24.018 1.982,25.235 3.484,25.235ZM3.484,25.235L18.438,10.281L25.235,17.078M10.281,8.242C10.281,9.368 9.368,10.281 8.242,10.281C7.116,10.281 6.203,9.368 6.203,8.242C6.203,7.116 7.116,6.203 8.242,6.203C9.368,6.203 10.281,7.116 10.281,8.242Z"
      android:strokeLineJoin="round"
      android:strokeWidth="1.5"
      android:fillColor="#00000000"
      android:strokeColor="#555555"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector1_main.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="28dp"
    android:height="28dp"
    android:viewportWidth="28"
    android:viewportHeight="28">
  <path
      android:pathData="M14.55,21.848L20.851,25.849C21.664,26.361 22.664,25.599 22.426,24.661L20.601,17.485C20.552,17.286 20.559,17.078 20.624,16.883C20.688,16.688 20.806,16.516 20.963,16.385L26.614,11.672C27.352,11.059 26.977,9.822 26.014,9.759L18.638,9.284C18.437,9.272 18.243,9.202 18.081,9.082C17.919,8.963 17.796,8.798 17.726,8.609L14.975,1.683C14.902,1.483 14.77,1.31 14.595,1.188C14.421,1.066 14.213,1 14,1C13.787,1 13.579,1.066 13.405,1.188C13.23,1.31 13.098,1.483 13.025,1.683L10.274,8.609C10.204,8.798 10.081,8.963 9.919,9.082C9.757,9.202 9.563,9.272 9.362,9.284L1.986,9.759C1.023,9.822 0.648,11.059 1.386,11.672L7.037,16.385C7.194,16.516 7.312,16.688 7.376,16.883C7.441,17.078 7.448,17.286 7.399,17.485L5.711,24.136C5.424,25.261 6.624,26.174 7.587,25.561L13.45,21.848C13.614,21.744 13.805,21.688 14,21.688C14.195,21.688 14.386,21.744 14.55,21.848V21.848Z"
      android:strokeLineJoin="round"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#FFFF00"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector1_settings.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="8dp"
    android:height="8dp"
    android:viewportWidth="8"
    android:viewportHeight="8">
  <path
      android:pathData="M4,7C5.6568,7 7,5.6568 7,4C7,2.3431 5.6568,1 4,1C2.3431,1 1,2.3431 1,4C1,5.6568 2.3431,7 4,7Z"
      android:strokeLineJoin="round"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#123094"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector1_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="10dp"
    android:height="6dp"
    android:viewportWidth="10"
    android:viewportHeight="6">
  <path
      android:pathData="M9,1L5,5L1,1"
      android:strokeLineJoin="round"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#123094"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector1_update_profile.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="16dp"
    android:height="16dp"
    android:viewportWidth="16"
    android:viewportHeight="16">
  <path
      android:strokeWidth="1"
      android:pathData="M8,14.768H15.5M11.75,1.018C12.082,0.686 12.531,0.5 13,0.5C13.232,0.5 13.462,0.546 13.677,0.635C13.891,0.723 14.086,0.854 14.25,1.018C14.414,1.182 14.544,1.377 14.633,1.591C14.722,1.806 14.768,2.036 14.768,2.268C14.768,2.5 14.722,2.73 14.633,2.944C14.544,3.159 14.414,3.354 14.25,3.518L3.833,13.934L0.5,14.768L1.333,11.434L11.75,1.018Z"
      android:strokeLineJoin="round"
      android:fillColor="#00000000"
      android:strokeColor="#555555"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector2.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="22dp"
    android:height="22dp"
    android:viewportWidth="22"
    android:viewportHeight="22">
  <path
      android:pathData="M7.128,10.88C6.782,10.031 6.606,9.123 6.61,8.206C6.61,6.785 7.031,5.396 7.82,4.215C8.61,3.033 9.732,2.112 11.045,1.569C12.357,1.025 13.802,0.883 15.196,1.16C16.589,1.437 17.869,2.121 18.874,3.126C19.879,4.131 20.563,5.411 20.84,6.805C21.117,8.198 20.975,9.643 20.431,10.955C19.888,12.268 18.967,13.39 17.785,14.18C16.604,14.969 15.215,15.39 13.794,15.39C12.877,15.394 11.969,15.218 11.12,14.872V14.872L9.803,16.189H7.408V18.583H5.013V20.978H1.022V16.987L7.128,10.88Z"
      android:strokeLineJoin="round"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#B0B0B0"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector20_settings.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="18dp"
    android:height="20dp"
    android:viewportWidth="18"
    android:viewportHeight="20">
  <path
      android:pathData="M17.18,19.231V17.18C17.18,16.091 16.747,15.048 15.978,14.278C15.208,13.509 14.165,13.077 13.077,13.077H4.872C3.784,13.077 2.74,13.509 1.971,14.278C1.201,15.048 0.769,16.091 0.769,17.18V19.231"
      android:strokeLineJoin="round"
      android:strokeWidth="1.5"
      android:fillColor="#00000000"
      android:strokeColor="#1E90FF"
      android:strokeLineCap="round"/>
  <path
      android:pathData="M8.974,8.974C11.24,8.974 13.077,7.138 13.077,4.872C13.077,2.606 11.24,0.769 8.974,0.769C6.709,0.769 4.872,2.606 4.872,4.872C4.872,7.138 6.709,8.974 8.974,8.974Z"
      android:strokeLineJoin="round"
      android:strokeWidth="1.5"
      android:fillColor="#00000000"
      android:strokeColor="#1E90FF"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector2_2.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="11dp"
    android:height="20dp"
    android:viewportWidth="11"
    android:viewportHeight="20">
  <path
      android:pathData="M1,1L10,10L1,19"
      android:strokeLineJoin="round"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#ffffff"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector2_ai.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:aapt="http://schemas.android.com/aapt"
    android:width="3dp"
    android:height="60dp"
    android:viewportWidth="3"
    android:viewportHeight="60">
  <path
      android:pathData="M1.5,60C0.672,60 0,59.258 0,58.342V1.658C0,0.743 0.671,0 1.5,0C2.328,0 3,0.742 3,1.658V58.342C2.999,59.257 2.328,60 1.5,60Z"
      android:strokeAlpha="0.8"
      android:fillAlpha="0.8">
    <aapt:attr name="android:fillColor">
      <gradient 
          android:startX="1.5"
          android:startY="60"
          android:endX="1.5"
          android:endY="-0"
          android:type="linear">
        <item android:offset="0" android:color="#FF161242"/>
        <item android:offset="0.116" android:color="#FF171746"/>
        <item android:offset="0.252" android:color="#FF1A2550"/>
        <item android:offset="0.4" android:color="#FF1F3D62"/>
        <item android:offset="0.555" android:color="#FF265F7B"/>
        <item android:offset="0.716" android:color="#FF2F899A"/>
        <item android:offset="0.879" android:color="#FF39BDC0"/>
        <item android:offset="1" android:color="#FF42E8E0"/>
      </gradient>
    </aapt:attr>
  </path>
</vector>

```

### src\main\res\drawable\vector2_cccd.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="26dp"
    android:height="26dp"
    android:viewportWidth="26"
    android:viewportHeight="26">
  <path
      android:pathData="M3.484,25.235H22.516C24.018,25.235 25.235,24.018 25.235,22.516V3.484C25.235,1.982 24.018,0.765 22.516,0.765H3.484C1.982,0.765 0.765,1.982 0.765,3.484V22.516C0.765,24.018 1.982,25.235 3.484,25.235ZM3.484,25.235L18.438,10.281L25.235,17.078M10.281,8.242C10.281,9.368 9.368,10.281 8.242,10.281C7.116,10.281 6.203,9.368 6.203,8.242C6.203,7.116 7.116,6.203 8.242,6.203C9.368,6.203 10.281,7.116 10.281,8.242Z"
      android:strokeLineJoin="round"
      android:strokeWidth="1.5"
      android:fillColor="#00000000"
      android:strokeColor="#555555"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector2_main.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="28dp"
    android:height="28dp"
    android:viewportWidth="28"
    android:viewportHeight="28">
  <path
      android:pathData="M14.55,21.848L20.851,25.849C21.664,26.361 22.664,25.599 22.426,24.661L20.601,17.485C20.552,17.286 20.559,17.078 20.624,16.883C20.688,16.688 20.806,16.516 20.963,16.385L26.614,11.672C27.352,11.059 26.977,9.822 26.014,9.759L18.638,9.284C18.437,9.272 18.243,9.202 18.081,9.082C17.919,8.963 17.796,8.798 17.726,8.609L14.975,1.683C14.902,1.483 14.77,1.31 14.595,1.188C14.421,1.066 14.213,1 14,1C13.787,1 13.579,1.066 13.405,1.188C13.23,1.31 13.098,1.483 13.025,1.683L10.274,8.609C10.204,8.798 10.081,8.963 9.919,9.082C9.757,9.202 9.563,9.272 9.362,9.284L1.986,9.759C1.023,9.822 0.648,11.059 1.386,11.672L7.037,16.385C7.194,16.516 7.312,16.688 7.376,16.883C7.441,17.078 7.448,17.286 7.399,17.485L5.711,24.136C5.424,25.261 6.624,26.174 7.587,25.561L13.45,21.848C13.614,21.744 13.805,21.688 14,21.688C14.195,21.688 14.386,21.744 14.55,21.848V21.848Z"
      android:strokeLineJoin="round"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#FFFF00"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector2_settings.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="5dp"
    android:height="2dp"
    android:viewportWidth="5"
    android:viewportHeight="2">
  <path
      android:pathData="M1,1H3.25"
      android:strokeLineJoin="round"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#123094"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector2_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="10dp"
    android:height="6dp"
    android:viewportWidth="10"
    android:viewportHeight="6">
  <path
      android:pathData="M9,1L5,5L1,1"
      android:strokeLineJoin="round"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#123094"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector2_update_profile.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="14dp"
    android:height="8dp"
    android:viewportWidth="14"
    android:viewportHeight="8">
  <path
      android:pathData="M0.778,0.778L7,7L13.222,0.778"
      android:strokeLineJoin="round"
      android:strokeWidth="1.5"
      android:fillColor="#00000000"
      android:strokeColor="#4A4A4A"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector3.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="3dp"
    android:height="3dp"
    android:viewportWidth="3"
    android:viewportHeight="3">
  <path
      android:pathData="M1.5,3C2.3284,3 3,2.3284 3,1.5C3,0.6716 2.3284,0 1.5,0C0.6716,0 0,0.6716 0,1.5C0,2.3284 0.6716,3 1.5,3Z"
      android:fillColor="#B0B0B0"/>
</vector>

```

### src\main\res\drawable\vector3_settings.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="5dp"
    android:height="2dp"
    android:viewportWidth="5"
    android:viewportHeight="2">
  <path
      android:pathData="M1,1H3.25"
      android:strokeLineJoin="round"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#123094"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector3_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="28dp"
    android:height="28dp"
    android:viewportWidth="28"
    android:viewportHeight="28">
  <path
      android:pathData="M14.55,21.848L20.851,25.849C21.664,26.362 22.664,25.599 22.426,24.661L20.601,17.485C20.552,17.287 20.559,17.078 20.624,16.883C20.688,16.688 20.806,16.516 20.963,16.385L26.614,11.672C27.352,11.059 26.977,9.822 26.014,9.759L18.638,9.284C18.437,9.272 18.243,9.202 18.081,9.083C17.919,8.963 17.796,8.798 17.726,8.609L14.975,1.683C14.902,1.483 14.77,1.31 14.595,1.188C14.421,1.066 14.213,1 14,1C13.787,1 13.579,1.066 13.405,1.188C13.23,1.31 13.098,1.483 13.025,1.683L10.274,8.609C10.204,8.798 10.081,8.963 9.919,9.083C9.757,9.202 9.563,9.272 9.362,9.284L1.986,9.759C1.023,9.822 0.648,11.059 1.386,11.672L7.037,16.385C7.194,16.516 7.312,16.688 7.376,16.883C7.441,17.078 7.448,17.287 7.399,17.485L5.711,24.136C5.424,25.261 6.624,26.174 7.587,25.562L13.45,21.848C13.614,21.744 13.805,21.688 14,21.688C14.195,21.688 14.386,21.744 14.55,21.848V21.848Z"
      android:strokeLineJoin="round"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#FFFF00"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector4.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="26dp"
    android:height="24dp"
    android:viewportWidth="26"
    android:viewportHeight="24">
  <path
      android:pathData="M13,24C20.18,24 26,18.627 26,12C26,5.373 20.18,0 13,0C5.82,0 0,5.373 0,12C0,18.627 5.82,24 13,24Z"
      android:fillColor="#3B5998"/>
</vector>

```

### src\main\res\drawable\vector4_settings.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="5dp"
    android:height="2dp"
    android:viewportWidth="5"
    android:viewportHeight="2">
  <path
      android:pathData="M1,1H3.25"
      android:strokeLineJoin="round"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#123094"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector4_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="19dp"
    android:height="21dp"
    android:viewportWidth="19"
    android:viewportHeight="21">
  <path
      android:pathData="M18.062,20.222V18.062C18.062,16.916 17.607,15.817 16.796,15.006C15.986,14.196 14.887,13.741 13.741,13.741H5.099C3.953,13.741 2.854,14.196 2.043,15.006C1.233,15.817 0.778,16.916 0.778,18.062V20.222"
      android:strokeLineJoin="round"
      android:strokeWidth="1.5"
      android:fillColor="#00000000"
      android:strokeColor="#B0B0B0"
      android:strokeLineCap="round"/>
  <path
      android:pathData="M9.42,9.42C11.806,9.42 13.741,7.485 13.741,5.099C13.741,2.712 11.806,0.778 9.42,0.778C7.033,0.778 5.099,2.712 5.099,5.099C5.099,7.485 7.033,9.42 9.42,9.42Z"
      android:strokeLineJoin="round"
      android:strokeWidth="1.5"
      android:fillColor="#00000000"
      android:strokeColor="#B0B0B0"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector5.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="8dp"
    android:height="16dp"
    android:viewportWidth="8"
    android:viewportHeight="16">
  <path
      android:pathData="M7.669,7.985H5.299V16H1.708V7.985H0V5.168H1.708V3.345C1.708,2.041 2.379,0 5.331,0L7.991,0.01V2.745H6.061C5.744,2.745 5.299,2.891 5.299,3.512V5.17H7.983L7.669,7.985Z"
      android:fillColor="#ffffff"/>
</vector>

```

### src\main\res\drawable\vector5_settings.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="5dp"
    android:height="2dp"
    android:viewportWidth="5"
    android:viewportHeight="2">
  <path
      android:pathData="M1,1H3.25"
      android:strokeLineJoin="round"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#123094"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector5_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="20dp"
    android:height="20dp"
    android:viewportWidth="20"
    android:viewportHeight="20">
  <path
      android:pathData="M6.147,10.062C6.953,11.727 8.3,13.071 9.967,13.873C10.09,13.931 10.226,13.956 10.362,13.946C10.498,13.936 10.629,13.89 10.741,13.814L13.191,12.178C13.299,12.105 13.424,12.06 13.554,12.048C13.684,12.036 13.815,12.057 13.935,12.109L18.52,14.079C18.677,14.144 18.808,14.259 18.893,14.406C18.978,14.553 19.012,14.724 18.99,14.892C18.845,16.026 18.292,17.069 17.433,17.824C16.575,18.58 15.471,18.997 14.327,18.997C10.793,18.997 7.404,17.593 4.906,15.094C2.407,12.596 1.003,9.207 1.003,5.673C1.003,4.529 1.42,3.425 2.176,2.567C2.931,1.708 3.974,1.155 5.108,1.01C5.277,0.988 5.447,1.022 5.594,1.107C5.741,1.192 5.856,1.323 5.921,1.48L7.89,6.075C7.942,6.192 7.963,6.321 7.953,6.449C7.943,6.577 7.901,6.701 7.832,6.809L6.196,9.298C6.123,9.41 6.08,9.54 6.071,9.673C6.063,9.807 6.089,9.941 6.147,10.062V10.062Z"
      android:strokeLineJoin="round"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#B0B0B0"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector6.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="26dp"
    android:height="24dp"
    android:viewportWidth="26"
    android:viewportHeight="24">
  <path
      android:pathData="M13,24C20.18,24 26,18.627 26,12C26,5.373 20.18,0 13,0C5.82,0 0,5.373 0,12C0,18.627 5.82,24 13,24Z"
      android:fillColor="#3B5998"/>
</vector>

```

### src\main\res\drawable\vector6_settings.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="11dp"
    android:height="5dp"
    android:viewportWidth="11"
    android:viewportHeight="5">
  <path
      android:pathData="M1,3.25C1.524,2.551 2.203,1.984 2.984,1.594C3.766,1.203 4.627,1 5.5,1C6.373,1 7.234,1.203 8.016,1.594C8.797,1.984 9.476,2.551 10,3.25"
      android:strokeLineJoin="round"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#123094"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector6_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="21dp"
    android:height="11dp"
    android:viewportWidth="21"
    android:viewportHeight="11">
  <path
      android:pathData="M19.988,1.012L10.5,9.709L1.012,1.012"
      android:strokeLineJoin="round"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#B0B0B0"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector7.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="8dp"
    android:height="16dp"
    android:viewportWidth="8"
    android:viewportHeight="16">
  <path
      android:pathData="M7.669,7.985H5.299V16H1.708V7.985H0V5.168H1.708V3.345C1.708,2.041 2.379,0 5.331,0L7.991,0.01V2.745H6.061C5.744,2.745 5.299,2.891 5.299,3.512V5.17H7.983L7.669,7.985Z"
      android:fillColor="#ffffff"/>
</vector>

```

### src\main\res\drawable\vector7_settings.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="17dp"
    android:height="20dp"
    android:viewportWidth="17"
    android:viewportHeight="20">
  <path
      android:pathData="M16,18.25V1.75C16,1.336 15.664,1 15.25,1L1.75,1C1.336,1 1,1.336 1,1.75L1,18.25C1,18.664 1.336,19 1.75,19H15.25C15.664,19 16,18.664 16,18.25Z"
      android:strokeLineJoin="round"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#123094"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector7_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="21dp"
    android:height="17dp"
    android:viewportWidth="21"
    android:viewportHeight="17">
  <path
      android:pathData="M1.012,1.012H19.988V14.453C19.988,14.663 19.905,14.864 19.756,15.012C19.608,15.161 19.407,15.244 19.197,15.244H1.803C1.593,15.244 1.392,15.161 1.244,15.012C1.095,14.864 1.012,14.663 1.012,14.453V1.012Z"
      android:strokeLineJoin="round"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#B0B0B0"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector8_settings.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="21dp"
    android:height="21dp"
    android:viewportWidth="21"
    android:viewportHeight="21">
  <path
      android:pathData="M6.819,10.386C6.49,9.579 6.322,8.715 6.325,7.843C6.325,6.492 6.726,5.172 7.477,4.048C8.227,2.925 9.294,2.049 10.542,1.532C11.791,1.015 13.164,0.88 14.489,1.143C15.814,1.407 17.032,2.058 17.987,3.013C18.942,3.968 19.593,5.186 19.857,6.511C20.12,7.836 19.985,9.209 19.468,10.458C18.951,11.706 18.075,12.773 16.952,13.523C15.828,14.274 14.508,14.675 13.157,14.675C12.285,14.678 11.421,14.51 10.614,14.181V14.181L9.361,15.434H7.084V17.711H4.807V19.988H1.012V16.193L6.819,10.386Z"
      android:strokeLineJoin="round"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#000000"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector8_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="10dp"
    android:height="9dp"
    android:viewportWidth="10"
    android:viewportHeight="9">
  <path
      android:pathData="M8.607,1.022L1.022,7.978"
      android:strokeLineJoin="round"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#B0B0B0"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector9_settings.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="3dp"
    android:height="3dp"
    android:viewportWidth="3"
    android:viewportHeight="3">
  <path
      android:pathData="M1.5,3C2.3284,3 3,2.3284 3,1.5C3,0.6716 2.3284,0 1.5,0C0.6716,0 0,0.6716 0,1.5C0,2.3284 0.6716,3 1.5,3Z"
      android:fillColor="#000000"/>
</vector>

```

### src\main\res\drawable\vector9_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="10dp"
    android:height="9dp"
    android:viewportWidth="10"
    android:viewportHeight="9">
  <path
      android:pathData="M8.607,7.978L1.022,1.022"
      android:strokeLineJoin="round"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#B0B0B0"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector_account.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="9dp"
    android:height="16dp"
    android:viewportWidth="9"
    android:viewportHeight="16">
  <path
      android:pathData="M8,15.226L0.774,8L8,0.774"
      android:strokeLineJoin="round"
      android:strokeWidth="1.5"
      android:fillColor="#00000000"
      android:strokeColor="#090A0A"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector_car_details.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="9dp"
    android:height="16dp"
    android:viewportWidth="9"
    android:viewportHeight="16">
  <path
      android:pathData="M8,15.226L0.774,8L8,0.774"
      android:strokeLineJoin="round"
      android:strokeWidth="1.5"
      android:fillColor="#00000000"
      android:strokeColor="#090A0A"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector_cccd.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="9dp"
    android:height="16dp"
    android:viewportWidth="9"
    android:viewportHeight="16">
  <path
      android:pathData="M8,15.226L0.774,8L8,0.774"
      android:strokeLineJoin="round"
      android:strokeWidth="1.5"
      android:fillColor="#00000000"
      android:strokeColor="#090A0A"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector_main.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="28dp"
    android:height="28dp"
    android:viewportWidth="28"
    android:viewportHeight="28">
  <path
      android:pathData="M14.55,21.848L20.851,25.849C21.664,26.361 22.664,25.599 22.426,24.661L20.601,17.485C20.552,17.286 20.559,17.078 20.624,16.883C20.688,16.688 20.806,16.516 20.963,16.385L26.614,11.672C27.352,11.059 26.977,9.822 26.014,9.759L18.638,9.284C18.437,9.272 18.243,9.202 18.081,9.082C17.919,8.963 17.796,8.798 17.726,8.609L14.975,1.683C14.902,1.483 14.77,1.31 14.595,1.188C14.421,1.066 14.213,1 14,1C13.787,1 13.579,1.066 13.405,1.188C13.23,1.31 13.098,1.483 13.025,1.683L10.274,8.609C10.204,8.798 10.081,8.963 9.919,9.082C9.757,9.202 9.563,9.272 9.362,9.284L1.986,9.759C1.023,9.822 0.648,11.059 1.386,11.672L7.037,16.385C7.194,16.516 7.312,16.688 7.376,16.883C7.441,17.078 7.448,17.286 7.399,17.485L5.711,24.136C5.424,25.261 6.624,26.174 7.587,25.561L13.45,21.848C13.614,21.744 13.805,21.688 14,21.688C14.195,21.688 14.386,21.744 14.55,21.848V21.848Z"
      android:strokeLineJoin="round"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#FFFF00"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector_settings.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="16dp"
    android:height="16dp"
    android:viewportWidth="16"
    android:viewportHeight="16">
  <path
      android:strokeWidth="1"
      android:pathData="M8,14.768H15.5M11.75,1.018C12.082,0.686 12.531,0.5 13,0.5C13.232,0.5 13.462,0.546 13.677,0.635C13.891,0.723 14.086,0.854 14.25,1.018C14.414,1.182 14.544,1.377 14.633,1.591C14.722,1.806 14.768,2.036 14.768,2.268C14.768,2.5 14.722,2.73 14.633,2.944C14.544,3.159 14.414,3.354 14.25,3.518L3.833,13.934L0.5,14.768L1.333,11.434L11.75,1.018Z"
      android:strokeLineJoin="round"
      android:fillColor="#00000000"
      android:strokeColor="#555555"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector_signup.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="26dp"
    android:height="26dp"
    android:viewportWidth="26"
    android:viewportHeight="26">
  <path
      android:pathData="M13,25C19.627,25 25,19.627 25,13C25,6.373 19.627,1 13,1C6.373,1 1,6.373 1,13C1,19.627 6.373,25 13,25Z"
      android:strokeLineJoin="round"
      android:strokeWidth="2"
      android:fillColor="#00000000"
      android:strokeColor="#123094"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vector_update_profile.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="9dp"
    android:height="16dp"
    android:viewportWidth="9"
    android:viewportHeight="16">
  <path
      android:pathData="M8,15.226L0.774,8L8,0.774"
      android:strokeLineJoin="round"
      android:strokeWidth="1.5"
      android:fillColor="#00000000"
      android:strokeColor="#090A0A"
      android:strokeLineCap="round"/>
</vector>

```

### src\main\res\drawable\vehicle_info_card.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <corners android:radius="15dp" />
    <solid android:color="@color/sky" />
</shape>
```

### src\main\res\drawable\white_round_border.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android"
    android:shape="rectangle">
    <gradient
    android:angle="0"
        android:centerColor="@color/white"
        android:startColor="@color/white"
        android:endColor="@color/white"/>
    <stroke
        android:color="@color/white"
        android:width="1dp"/>
    <corners
        android:radius="360dp"/>
</shape>
```

### src\main\res\drawable\yellow_circle_line.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android"
    android:shape="rectangle">
    <gradient
        android:angle="0"
        android:centerColor="@color/white"
        android:startColor="@color/white"
        android:endColor="@color/white"/>
    <stroke
        android:color="@color/sunflower"
        android:width="@dimen/_1sdp"/>
    <corners
        android:radius="360dp"/>
</shape>
```

### src\main\res\drawable\yellow_line.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android"
    android:shape="rectangle">
    <gradient
        android:angle="0"
        android:centerColor="@color/white"
        android:startColor="@color/white"
        android:endColor="@color/white"/>
    <stroke
        android:color="@color/sunflower"
        android:width="1dp"/>
</shape>
```

### src\main\res\drawable-v24\ic_add_white_24dp.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
        android:width="24dp"
        android:height="24dp"
        android:viewportWidth="24.0"
        android:viewportHeight="24.0">
    <path
        android:fillColor="#ffffffff"
        android:pathData="M19,13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"/>
</vector>

```

### src\main\res\drawable-v24\ic_launcher_foreground.xml
```xml
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:aapt="http://schemas.android.com/aapt"
    android:width="108dp"
    android:height="108dp"
    android:viewportWidth="108"
    android:viewportHeight="108">
    <path android:pathData="M31,63.928c0,0 6.4,-11 12.1,-13.1c7.2,-2.6 26,-1.4 26,-1.4l38.1,38.1L107,108.928l-32,-1L31,63.928z">
        <aapt:attr name="android:fillColor">
            <gradient
                android:endX="85.84757"
                android:endY="92.4963"
                android:startX="42.9492"
                android:startY="49.59793"
                android:type="linear">
                <item
                    android:color="#44000000"
                    android:offset="0.0" />
                <item
                    android:color="#00000000"
                    android:offset="1.0" />
            </gradient>
        </aapt:attr>
    </path>
    <path
        android:fillColor="#FFFFFF"
        android:fillType="nonZero"
        android:pathData="M65.3,45.828l3.8,-6.6c0.2,-0.4 0.1,-0.9 -0.3,-1.1c-0.4,-0.2 -0.9,-0.1 -1.1,0.3l-3.9,6.7c-6.3,-2.8 -13.4,-2.8 -19.7,0l-3.9,-6.7c-0.2,-0.4 -0.7,-0.5 -1.1,-0.3C38.8,38.328 38.7,38.828 38.9,39.228l3.8,6.6C36.2,49.428 31.7,56.028 31,63.928h46C76.3,56.028 71.8,49.428 65.3,45.828zM43.4,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2c-0.3,-0.7 -0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C45.3,56.528 44.5,57.328 43.4,57.328L43.4,57.328zM64.6,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2s-0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C66.5,56.528 65.6,57.328 64.6,57.328L64.6,57.328z"
        android:strokeWidth="1"
        android:strokeColor="#00000000" />
</vector>
```

### src\main\res\font\relay_roboto_flex_regular.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<font-family xmlns:android="http://schemas.android.com/apk/res/android">
    <font
        android:font="@font/relay_roboto_flex_regular_font"
        android:fontStyle="normal"
        android:fontWeight="400" />
</font-family>
```

### src\main\res\layout\activity_add_vehicle.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:padding="@dimen/_5sdp"
    tools:context=".Service.Vehicle.AddVehicleActivity">

    <!-- Back Button -->
    <ImageButton
        android:id="@+id/btn_back"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="16dp"
        android:layout_marginTop="16dp"
        android:src="@drawable/ic_arrow_left"
        android:background="?attr/selectableItemBackgroundBorderless"
        android:contentDescription="Back"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <ScrollView
        android:layout_width="0dp"
        android:layout_height="0dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/btn_back">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical"
            android:padding="@dimen/_10sdp">

            <androidx.constraintlayout.widget.ConstraintLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:background="@drawable/blue_line">

                <TextView
                    android:id="@+id/tv_title"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="@dimen/_50sdp"
                    android:text="Thêm mới xe"
                    android:textColor="@color/sky"
                    android:textSize="@dimen/_30ssp"
                    android:textStyle="bold"
                    app:layout_constraintEnd_toEndOf="parent"
                    app:layout_constraintStart_toStartOf="parent"
                    app:layout_constraintTop_toTopOf="parent"
                    tools:ignore="HardcodedText" />

                <!-- Tên xe -->
                <TextView
                    android:id="@+id/tv_name"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginStart="@dimen/_5sdp"
                    android:layout_marginTop="@dimen/_15sdp"
                    android:text="Tên xe"
                    android:textColor="@color/sky"
                    app:layout_constraintStart_toStartOf="@+id/et_name"
                    app:layout_constraintTop_toBottomOf="@+id/tv_title"
                    tools:ignore="HardcodedText" />

                <EditText
                    android:id="@+id/et_name"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:layout_marginStart="@dimen/_30sdp"
                    android:layout_marginEnd="@dimen/_30sdp"
                    android:backgroundTint="@color/sky"
                    android:inputType="textPersonName"
                    android:textColor="@color/sky"
                    android:textSize="@dimen/_15ssp"
                    app:layout_constraintEnd_toEndOf="parent"
                    app:layout_constraintStart_toStartOf="parent"
                    app:layout_constraintTop_toBottomOf="@+id/tv_name" />

                <!-- Số chỗ -->
                <TextView
                    android:id="@+id/tv_seats"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="@dimen/_10sdp"
                    android:text="Số chỗ"
                    android:textColor="@color/sky"
                    app:layout_constraintStart_toStartOf="@+id/tv_name"
                    app:layout_constraintTop_toBottomOf="@+id/et_name"
                    tools:ignore="HardcodedText" />

                <EditText
                    android:id="@+id/et_seats"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:backgroundTint="@color/sky"
                    android:inputType="number"
                    android:textColor="@color/sky"
                    android:textSize="@dimen/_15ssp"
                    app:layout_constraintEnd_toEndOf="@+id/et_name"
                    app:layout_constraintStart_toStartOf="@+id/et_name"
                    app:layout_constraintTop_toBottomOf="@+id/tv_seats" />

                <!-- Giá -->
                <TextView
                    android:id="@+id/tv_price"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="@dimen/_10sdp"
                    android:text="Giá (VND/ngày)"
                    android:textColor="@color/sky"
                    app:layout_constraintStart_toStartOf="@+id/tv_name"
                    app:layout_constraintTop_toBottomOf="@+id/et_seats"
                    tools:ignore="HardcodedText" />

                <EditText
                    android:id="@+id/et_price"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:backgroundTint="@color/sky"
                    android:inputType="numberDecimal"
                    android:textColor="@color/sky"
                    android:textSize="@dimen/_15ssp"
                    app:layout_constraintEnd_toEndOf="@+id/et_name"
                    app:layout_constraintStart_toStartOf="@+id/et_name"
                    app:layout_constraintTop_toBottomOf="@+id/tv_price" />

                <!-- Biển số xe -->
                <TextView
                    android:id="@+id/tv_number"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="@dimen/_10sdp"
                    android:text="Biển số xe"
                    android:textColor="@color/sky"
                    app:layout_constraintStart_toStartOf="@+id/tv_name"
                    app:layout_constraintTop_toBottomOf="@+id/et_price"
                    tools:ignore="HardcodedText" />

                <EditText
                    android:id="@+id/et_number"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:backgroundTint="@color/sky"
                    android:inputType="text"
                    android:textColor="@color/sky"
                    android:textSize="@dimen/_15ssp"
                    app:layout_constraintEnd_toEndOf="@+id/et_name"
                    app:layout_constraintStart_toStartOf="@+id/et_name"
                    app:layout_constraintTop_toBottomOf="@+id/tv_number" />

                <!-- Thương hiệu -->
                <TextView
                    android:id="@+id/tv_brand"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="@dimen/_10sdp"
                    android:text="Thương hiệu"
                    android:textColor="@color/sky"
                    app:layout_constraintStart_toStartOf="@+id/tv_name"
                    app:layout_constraintTop_toBottomOf="@+id/et_number"
                    tools:ignore="HardcodedText" />

                <EditText
                    android:id="@+id/et_brand"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:backgroundTint="@color/sky"
                    android:inputType="text"
                    android:textColor="@color/sky"
                    android:textSize="@dimen/_15ssp"
                    app:layout_constraintEnd_toEndOf="@+id/et_name"
                    app:layout_constraintStart_toStartOf="@+id/et_name"
                    app:layout_constraintTop_toBottomOf="@+id/tv_brand" />

                <!-- Loại nhiên liệu -->
                <TextView
                    android:id="@+id/tv_fuel_type"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="@dimen/_10sdp"
                    android:text="Loại nhiên liệu"
                    android:textColor="@color/sky"
                    app:layout_constraintStart_toStartOf="@+id/tv_name"
                    app:layout_constraintTop_toBottomOf="@+id/et_brand"
                    tools:ignore="HardcodedText" />

                <EditText
                    android:id="@+id/et_fuel_type"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:backgroundTint="@color/sky"
                    android:inputType="text"
                    android:textColor="@color/sky"
                    android:textSize="@dimen/_15ssp"
                    app:layout_constraintEnd_toEndOf="@+id/et_name"
                    app:layout_constraintStart_toStartOf="@+id/et_name"
                    app:layout_constraintTop_toBottomOf="@+id/tv_fuel_type" />

                <!-- Tốc độ tối đa -->
                <TextView
                    android:id="@+id/tv_max_speed"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="@dimen/_10sdp"
                    android:text="Tốc độ tối đa (km/h)"
                    android:textColor="@color/sky"
                    app:layout_constraintStart_toStartOf="@+id/tv_name"
                    app:layout_constraintTop_toBottomOf="@+id/et_fuel_type"
                    tools:ignore="HardcodedText" />

                <EditText
                    android:id="@+id/et_max_speed"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:backgroundTint="@color/sky"
                    android:inputType="number"
                    android:textColor="@color/sky"
                    android:textSize="@dimen/_15ssp"
                    app:layout_constraintEnd_toEndOf="@+id/et_name"
                    app:layout_constraintStart_toStartOf="@+id/et_name"
                    app:layout_constraintTop_toBottomOf="@+id/tv_max_speed" />

                <!-- Hộp số -->
                <TextView
                    android:id="@+id/tv_transmission"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="@dimen/_10sdp"
                    android:text="Hộp số"
                    android:textColor="@color/sky"
                    app:layout_constraintStart_toStartOf="@+id/tv_name"
                    app:layout_constraintTop_toBottomOf="@+id/et_max_speed"
                    tools:ignore="HardcodedText" />

                <EditText
                    android:id="@+id/et_transmission"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:backgroundTint="@color/sky"
                    android:inputType="text"
                    android:textColor="@color/sky"
                    android:textSize="@dimen/_15ssp"
                    app:layout_constraintEnd_toEndOf="@+id/et_name"
                    app:layout_constraintStart_toStartOf="@+id/et_name"
                    app:layout_constraintTop_toBottomOf="@+id/tv_transmission" />

                <!-- Cửa và ghế -->
                <TextView
                    android:id="@+id/tv_doors_and_seats"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="@dimen/_10sdp"
                    android:text="Số cửa và ghế"
                    android:textColor="@color/sky"
                    app:layout_constraintStart_toStartOf="@+id/tv_name"
                    app:layout_constraintTop_toBottomOf="@+id/et_transmission"
                    tools:ignore="HardcodedText" />

                <EditText
                    android:id="@+id/et_doors_and_seats"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:backgroundTint="@color/sky"
                    android:inputType="text"
                    android:textColor="@color/sky"
                    android:textSize="@dimen/_15ssp"
                    app:layout_constraintEnd_toEndOf="@+id/et_name"
                    app:layout_constraintStart_toStartOf="@+id/et_name"
                    app:layout_constraintTop_toBottomOf="@+id/tv_doors_and_seats" />

                <!-- Ảnh xe -->
                <TextView
                    android:id="@+id/tv_vehicle_image"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="@dimen/_10sdp"
                    android:text="Ảnh xe"
                    android:textColor="@color/sky"
                    app:layout_constraintStart_toStartOf="@+id/tv_name"
                    app:layout_constraintTop_toBottomOf="@+id/et_doors_and_seats"
                    tools:ignore="HardcodedText" />

                <androidx.cardview.widget.CardView
                    android:id="@+id/vehicle_img_card"
                    android:layout_width="0dp"
                    android:layout_height="@dimen/_120sdp"
                    android:layout_marginTop="@dimen/_10sdp"
                    android:background="@drawable/yellow_line"
                    app:layout_constraintEnd_toEndOf="@+id/et_name"
                    app:layout_constraintStart_toStartOf="@+id/et_name"
                    app:layout_constraintTop_toBottomOf="@+id/tv_vehicle_image">

                    <ImageView
                        android:id="@+id/vehicle_img_view"
                        android:layout_width="match_parent"
                        android:layout_height="@dimen/_120sdp"
                        android:adjustViewBounds="true"
                        android:background="@drawable/yellow_line"
                        android:contentDescription="Chọn ảnh xe"
                        android:scaleType="centerCrop" />
                </androidx.cardview.widget.CardView>

                <!-- Ảnh giấy tờ xe -->
                <TextView
                    android:id="@+id/tv_document_image"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="@dimen/_10sdp"
                    android:text="Giấy tờ xe"
                    android:textColor="@color/sky"
                    app:layout_constraintStart_toStartOf="@+id/tv_name"
                    app:layout_constraintTop_toBottomOf="@+id/vehicle_img_card"
                    tools:ignore="HardcodedText" />

                <androidx.cardview.widget.CardView
                    android:id="@+id/document_img_card"
                    android:layout_width="0dp"
                    android:layout_height="@dimen/_120sdp"
                    android:layout_marginTop="@dimen/_10sdp"
                    android:background="@drawable/yellow_line"
                    app:layout_constraintEnd_toEndOf="@+id/et_name"
                    app:layout_constraintStart_toStartOf="@+id/et_name"
                    app:layout_constraintTop_toBottomOf="@+id/tv_document_image">

                    <ImageView
                        android:id="@+id/document_img_view"
                        android:layout_width="match_parent"
                        android:layout_height="@dimen/_120sdp"
                        android:adjustViewBounds="true"
                        android:background="@drawable/yellow_line"
                        android:contentDescription="Chọn ảnh giấy tờ xe"
                        android:scaleType="centerCrop" />
                </androidx.cardview.widget.CardView>

                <!-- Nút Thêm -->
                <androidx.appcompat.widget.AppCompatButton
                    android:id="@+id/btn_add"
                    android:layout_width="0dp"
                    android:layout_height="@dimen/_35sdp"
                    android:layout_marginTop="@dimen/_25sdp"
                    android:layout_marginBottom="@dimen/_25sdp"
                    android:background="@drawable/red_round_button"
                    android:text="Thêm"
                    android:textColor="@color/white"
                    android:textSize="@dimen/_14ssp"
                    app:layout_constraintBottom_toBottomOf="parent"
                    app:layout_constraintEnd_toEndOf="@+id/et_name"
                    app:layout_constraintStart_toStartOf="@+id/et_name"
                    app:layout_constraintTop_toBottomOf="@+id/document_img_card"
                    tools:ignore="HardcodedText" />
            </androidx.constraintlayout.widget.ConstraintLayout>
        </LinearLayout>
    </ScrollView>
</androidx.constraintlayout.widget.ConstraintLayout>

```

### src\main\res\layout\activity_admin_main.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/white">

    <FrameLayout
        android:id="@+id/frame_layout_admin"
        android:layout_width="match_parent"
        android:layout_height="0dp"
        app:layout_constraintBottom_toTopOf="@id/bottom_navigation_view"
        app:layout_constraintTop_toTopOf="parent" />

    <com.google.android.material.bottomnavigation.BottomNavigationView
        android:id="@+id/bottom_navigation_view"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:background="@color/white"
        app:layout_constraintBottom_toBottomOf="parent"
        app:menu="@menu/admin_bottom_menu" />
</androidx.constraintlayout.widget.ConstraintLayout>
```

### src\main\res\layout\activity_admin_user_list.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/white">

    <!-- Toolbar -->
    <androidx.appcompat.widget.Toolbar
        android:id="@+id/toolbar"
        android:layout_width="match_parent"
        android:layout_height="?attr/actionBarSize"
        android:background="@color/sky"
        app:layout_constraintTop_toTopOf="parent"
        app:title="Danh sách người dùng"
        app:titleTextColor="@color/white"
        tools:ignore="HardcodedText" />

    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_marginTop="@dimen/_16sdp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintTop_toBottomOf="@id/toolbar">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical"
            android:padding="@dimen/_16sdp">

            <!-- Header -->
            <TextView
                android:id="@+id/tv_greeting"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:fontFamily="@font/relay_roboto_flex_regular"
                android:text="Hi Admin!"
                android:textColor="@color/text_title"
                android:textSize="20sp"
                android:textStyle="bold"
                tools:ignore="HardcodedText" />

            <TextView
                android:id="@+id/tv_subtitle"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="@dimen/_4sdp"
                android:fontFamily="@font/relay_roboto_flex_regular"
                android:text="Quản lý người dùng của bạn!"
                android:textColor="@color/text_input_hint"
                android:textSize="14sp"
                tools:ignore="HardcodedText" />

            <TextView
                android:id="@+id/tv_user_count"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="@dimen/_4sdp"
                android:layout_marginBottom="@dimen/_16sdp"
                android:fontFamily="@font/relay_roboto_flex_regular"
                android:text="Tổng số người dùng: 0"
                android:textColor="@color/text_input_hint"
                android:textSize="14sp"
                tools:ignore="HardcodedText" />

            <!-- RecyclerView -->
            <androidx.recyclerview.widget.RecyclerView
                android:id="@+id/user_list"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                tools:listitem="@layout/item_user" />
        </LinearLayout>
    </ScrollView>
</androidx.constraintlayout.widget.ConstraintLayout>
```

### src\main\res\layout\activity_admin_vehicle_detail.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:background="#FFFFFF"
    android:orientation="vertical"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <ScrollView
        android:id="@+id/rzvhzbsk8kpj"
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_weight="1"
        android:background="#FFFFFF">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical">

            <LinearLayout
                android:id="@+id/rf434ona7ico"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:gravity="center_vertical"
                android:background="#D9D9D9"
                android:paddingVertical="8dp"
                android:paddingLeft="16dp"
                android:paddingRight="141dp"
                android:layout_marginBottom="50dp"
                android:orientation="horizontal">

                <ImageView
                    android:id="@+id/rx7d0apsish"
                    android:layout_width="30dp"
                    android:layout_height="30dp"
                    android:src="@drawable/ic_arrow_left"
                    android:scaleType="fitXY" />

                <View
                    android:layout_width="0dp"
                    android:layout_height="0dp"
                    android:layout_weight="1" />

                <TextView
                    android:id="@+id/ry1qg0h2dho"
                    android:textColor="#003087"
                    android:textSize="25sp"
                    android:textStyle="bold"
                    android:layout_height="wrap_content"
                    android:layout_width="wrap_content"
                    android:text="Vinfast Lux A2.0" />
            </LinearLayout>

            <ImageView
                android:id="@+id/rag6uycqqw4a"
                android:layout_width="314dp"
                android:layout_height="167dp"
                android:layout_marginBottom="27dp"
                android:layout_marginStart="54dp"
                android:src="@mipmap/ic_launcher"
                android:scaleType="fitXY" />

            <TextView
                android:id="@+id/rd3cmd5wzxp"
                android:textColor="#000000"
                android:textSize="25sp"
                android:textStyle="bold"
                android:layout_marginBottom="5dp"
                android:layout_marginStart="33dp"
                android:layout_height="wrap_content"
                android:layout_width="wrap_content"
                android:text="Thông tin" />

            <LinearLayout
                android:id="@+id/roplu3vikau"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:gravity="center_vertical"
                android:background="@drawable/cr12b0030873b"
                android:paddingVertical="22dp"
                android:paddingHorizontal="15dp"
                android:layout_marginBottom="43dp"
                android:layout_marginHorizontal="27dp"
                android:orientation="horizontal">

                <LinearLayout
                    android:id="@+id/rcoom2upegc"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:layout_weight="1"
                    android:layout_marginEnd="12dp"
                    android:orientation="vertical">

                    <TextView
                        android:id="@+id/rk4y5z2yxsb"
                        android:textColor="#000000"
                        android:textSize="20sp"
                        android:textStyle="bold"
                        android:layout_marginBottom="10dp"
                        android:layout_height="wrap_content"
                        android:layout_width="wrap_content"
                        android:text="Biển số xe:" />

                    <TextView
                        android:id="@+id/rxbzm3ofw0vk"
                        android:textColor="#000000"
                        android:textSize="20sp"
                        android:textStyle="bold"
                        android:layout_marginBottom="10dp"
                        android:layout_height="wrap_content"
                        android:layout_width="wrap_content"
                        android:text="Ngày đăng:" />

                    <TextView
                        android:id="@+id/rgn4u6r999cb"
                        android:textColor="#000000"
                        android:textSize="20sp"
                        android:textStyle="bold"
                        android:layout_marginBottom="10dp"
                        android:layout_height="wrap_content"
                        android:layout_width="wrap_content"
                        android:text="Chủ xe:" />

                    <TextView
                        android:id="@+id/r8m55oar8qmc"
                        android:textColor="#000000"
                        android:textSize="20sp"
                        android:textStyle="bold"
                        android:layout_height="wrap_content"
                        android:layout_width="wrap_content"
                        android:text="Trạng thái:" />
                </LinearLayout>

                <LinearLayout
                    android:id="@+id/rnuhuussc1fo"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:layout_weight="1"
                    android:orientation="vertical">

                    <TextView
                        android:id="@+id/ru72c47csbt"
                        android:textColor="#000000"
                        android:textSize="20sp"
                        android:textStyle="bold"
                        android:layout_marginBottom="10dp"
                        android:layout_height="wrap_content"
                        android:layout_width="wrap_content"
                        android:text="XXX - XXXXX" />

                    <TextView
                        android:id="@+id/r898i1ih4yvt"
                        android:textColor="#000000"
                        android:textSize="20sp"
                        android:textStyle="bold"
                        android:layout_marginBottom="12dp"
                        android:layout_marginStart="2dp"
                        android:layout_height="wrap_content"
                        android:layout_width="wrap_content"
                        android:text="03/06/2025" />

                    <TextView
                        android:id="@+id/rucikt3pzv6"
                        android:textColor="#000000"
                        android:textSize="20sp"
                        android:textStyle="bold"
                        android:layout_marginBottom="12dp"
                        android:layout_marginStart="2dp"
                        android:layout_height="wrap_content"
                        android:layout_width="wrap_content"
                        android:text="user123456" />

                    <TextView
                        android:id="@+id/rac1kcrnb8f"
                        android:textColor="#000000"
                        android:textSize="20sp"
                        android:textStyle="bold"
                        android:layout_marginHorizontal="2dp"
                        android:layout_height="wrap_content"
                        android:layout_width="match_parent"
                        android:layout_weight="1"
                        android:text="Đang chờ duyệt" />
                </LinearLayout>
            </LinearLayout>

            <TextView
                android:id="@+id/r0he0can6xart"
                android:textColor="#000000"
                android:textSize="25sp"
                android:textStyle="bold"
                android:layout_marginBottom="8dp"
                android:layout_marginStart="33dp"
                android:layout_height="wrap_content"
                android:layout_width="wrap_content"
                android:text="Giấy tờ xe" />

            <ImageView
                android:id="@+id/r9mpttg5k7eo"
                android:layout_width="match_parent"
                android:layout_height="229dp"
                android:layout_marginBottom="62dp"
                android:layout_marginHorizontal="33dp"
                android:src="@mipmap/ic_launcher"
                android:scaleType="fitXY" />

            <LinearLayout
                android:id="@+id/ra9aorpxux0b"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:gravity="center_horizontal"
                android:layout_marginBottom="72dp"
                android:orientation="vertical">

                <LinearLayout
                    android:id="@+id/rdkuzy9gxvfo"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:orientation="horizontal">

                    <LinearLayout
                        android:id="@+id/r55jpwn8v3im"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:background="@drawable/cr48bff4500"
                        android:paddingVertical="15dp"
                        android:paddingHorizontal="39dp"
                        android:layout_marginVertical="1dp"
                        android:layout_marginEnd="39dp"
                        android:clickable="true"
                        android:focusable="true"
                        android:orientation="vertical">

                        <TextView
                            android:id="@+id/rnm7adnyh58b"
                            android:textColor="#FFFFFF"
                            android:textSize="22sp"
                            android:textStyle="bold"
                            android:layout_height="wrap_content"
                            android:layout_width="wrap_content"
                            android:text="Duyệt" />
                    </LinearLayout>

                    <LinearLayout
                        android:id="@+id/rqczrg8gtglj"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:background="@drawable/cr48bcacaca"
                        android:paddingVertical="15dp"
                        android:paddingHorizontal="25dp"
                        android:clickable="true"
                        android:focusable="true"
                        android:orientation="vertical">

                        <TextView
                            android:id="@+id/ruxnan76tqd"
                            android:textColor="#FFFFFF"
                            android:textSize="22sp"
                            android:textStyle="bold"
                            android:layout_height="wrap_content"
                            android:layout_width="wrap_content"
                            android:text="Từ chối" />
                    </LinearLayout>
                </LinearLayout>
            </LinearLayout>
        </LinearLayout>
    </ScrollView>
</LinearLayout>

```

### src\main\res\layout\activity_admin_vehicle_list.xml
```xml
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:background="#FFFFFF"
    android:orientation="vertical"
    android:layout_width="match_parent"
    android:layout_height="match_parent">
    <ScrollView
        android:id="@+id/r86988joo9ij"
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_weight="1"
        android:background="#FFFFFF">
        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical">
            <LinearLayout
                android:id="@+id/rhsbk0kojsy"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginBottom="2dp"
                android:orientation="vertical">
                <LinearLayout
                    android:id="@+id/rrdtq7x9on3c"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:gravity="center_vertical"
                    android:background="#D9D9D9"
                    android:paddingVertical="8dp"
                    android:paddingLeft="10dp"
                    android:paddingRight="231dp"
                    android:orientation="horizontal">
                    <ImageView
                        android:id="@+id/r38zg8uhxh45"
                        android:layout_width="30dp"
                        android:layout_height="30dp"
                        android:src="@mipmap/ic_launcher"
                        android:scaleType="fitXY"
                        />
                    <View
                        android:layout_width="0dp"
                        android:layout_height="0dp"
                        android:layout_weight="1"
                        />
                    <TextView
                        android:id="@+id/r7nklkmmk0ak"
                        android:textColor="#003087"
                        android:textSize="25sp"
                        android:textStyle="bold"
                        android:layout_height="wrap_content"
                        android:layout_width="wrap_content"
                        android:text="Tất cả xe"
                        />
                </LinearLayout>
            </LinearLayout>
            <LinearLayout
                android:id="@+id/rb5p4nqpzny"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:gravity="center_vertical"
                android:paddingHorizontal="26dp"
                android:layout_marginBottom="51dp"
                android:orientation="horizontal">
                <ImageView
                    android:id="@+id/r7dz8x0koofd"
                    android:layout_width="16dp"
                    android:layout_height="17dp"
                    android:layout_marginEnd="16dp"
                    android:src="@mipmap/ic_launcher"
                    android:scaleType="fitXY"
                    />
                <LinearLayout
                    android:id="@+id/rmhryoy6hglh"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:layout_weight="1"
                    android:gravity="center_vertical"
                    android:background="@drawable/s4d3a4dsw1cr8bffffff"
                    android:paddingVertical="4dp"
                    android:clickable="true"
                    android:focusable="true"
                    android:orientation="horizontal">
                    <TextView
                        android:id="@+id/rklwp9wyeoxn"
                        android:textColor="#716676"
                        android:textSize="16sp"
                        android:textStyle="bold"
                        android:layout_marginStart="12dp"
                        android:layout_height="wrap_content"
                        android:layout_width="match_parent"
                        android:layout_weight="1"
                        android:text="Tìm kiếm"
                        />
                    <ImageView
                        android:id="@+id/r0stslonbv5ji"
                        android:layout_width="32dp"
                        android:layout_height="32dp"
                        android:layout_marginEnd="4dp"
                        android:src="@mipmap/ic_launcher"
                        android:scaleType="fitXY"
                        />
                </LinearLayout>
            </LinearLayout>
            <LinearLayout
                android:id="@+id/rpjiq096ykv"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:background="@drawable/cr12bffffff"
                android:layout_marginBottom="10dp"
                android:layout_marginHorizontal="27dp"
                android:orientation="horizontal">
                <LinearLayout
                    android:id="@+id/r8fa43kd8f6k"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:layout_weight="1"
                    android:gravity="center_vertical"
                    android:layout_marginEnd="10dp"
                    android:orientation="horizontal">
                    <ImageView
                        android:id="@+id/r1g4sphbsf0r"
                        android:layout_width="125dp"
                        android:layout_height="86dp"
                        android:layout_marginEnd="20dp"
                        android:src="@mipmap/ic_launcher"
                        android:scaleType="fitXY"
                        />
                    <LinearLayout
                        android:id="@+id/ruah1r8e32gh"
                        android:layout_width="0dp"
                        android:layout_height="wrap_content"
                        android:layout_weight="1"
                        android:orientation="vertical">
                        <TextView
                            android:id="@+id/rlexfqqlid4"
                            android:textColor="#003087"
                            android:textSize="18sp"
                            android:textStyle="bold"
                            android:layout_marginBottom="5dp"
                            android:layout_height="wrap_content"
                            android:layout_width="wrap_content"
                            android:text="Toyota Camry"
                            />
                        <TextView
                            android:id="@+id/rfllj4oswgw"
                            android:textColor="#000000"
                            android:textSize="14sp"
                            android:layout_marginBottom="5dp"
                            android:layout_height="wrap_content"
                            android:layout_width="wrap_content"
                            android:text="Sedan"
                            />
                        <TextView
                            android:id="@+id/rb14vg575uck"
                            android:textColor="#000000"
                            android:textSize="14sp"
                            android:layout_height="wrap_content"
                            android:layout_width="wrap_content"
                            android:text="ABC1234"
                            />
                    </LinearLayout>
                </LinearLayout>
                <LinearLayout
                    android:id="@+id/rm1isgkvxg1b"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:background="@drawable/cr8be6eefb"
                    android:paddingVertical="4dp"
                    android:paddingHorizontal="18dp"
                    android:layout_marginTop="23dp"
                    android:clickable="true"
                    android:focusable="true"
                    android:orientation="vertical">
                    <TextView
                        android:id="@+id/rrf7ugi3mzkj"
                        android:textColor="#000000"
                        android:textSize="14sp"
                        android:layout_height="wrap_content"
                        android:layout_width="wrap_content"
                        android:text="Có sẵn"
                        />
                </LinearLayout>
            </LinearLayout>
            <LinearLayout
                android:id="@+id/rmi1wskeblj"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:background="@drawable/cr12bffffff"
                android:layout_marginBottom="10dp"
                android:layout_marginHorizontal="27dp"
                android:orientation="horizontal">
                <LinearLayout
                    android:id="@+id/r5s2y02ag5ih"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:layout_weight="1"
                    android:gravity="center_vertical"
                    android:layout_marginEnd="10dp"
                    android:orientation="horizontal">
                    <ImageView
                        android:id="@+id/r636lww49sfw"
                        android:layout_width="125dp"
                        android:layout_height="86dp"
                        android:layout_marginEnd="20dp"
                        android:src="@mipmap/ic_launcher"
                        android:scaleType="fitXY"
                        />
                    <LinearLayout
                        android:id="@+id/rwk2cf4wlowk"
                        android:layout_width="0dp"
                        android:layout_height="wrap_content"
                        android:layout_weight="1"
                        android:orientation="vertical">
                        <TextView
                            android:id="@+id/ru9bmbdawfa"
                            android:textColor="#003087"
                            android:textSize="18sp"
                            android:textStyle="bold"
                            android:layout_marginBottom="5dp"
                            android:layout_height="wrap_content"
                            android:layout_width="wrap_content"
                            android:text="Montre Audi"
                            />
                        <TextView
                            android:id="@+id/rxfn78kfhwzj"
                            android:textColor="#000000"
                            android:textSize="14sp"
                            android:layout_marginBottom="5dp"
                            android:layout_height="wrap_content"
                            android:layout_width="wrap_content"
                            android:text="User 2"
                            />
                        <TextView
                            android:id="@+id/rwpqsoiqbt7"
                            android:textColor="#000000"
                            android:textSize="14sp"
                            android:layout_height="wrap_content"
                            android:layout_width="wrap_content"
                            android:text="ABC1234"
                            />
                    </LinearLayout>
                </LinearLayout>
                <LinearLayout
                    android:id="@+id/ro8wqosgxxt"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:background="@drawable/cr8be6eefb"
                    android:paddingVertical="4dp"
                    android:paddingHorizontal="18dp"
                    android:layout_marginTop="23dp"
                    android:clickable="true"
                    android:focusable="true"
                    android:orientation="vertical">
                    <TextView
                        android:id="@+id/r1r1nt9vm44e"
                        android:textColor="#000000"
                        android:textSize="14sp"
                        android:layout_height="wrap_content"
                        android:layout_width="wrap_content"
                        android:text="Có sẵn"
                        />
                </LinearLayout>
            </LinearLayout>
            <LinearLayout
                android:id="@+id/r331twbevvxe"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:background="@drawable/cr12bffffff"
                android:layout_marginBottom="10dp"
                android:layout_marginHorizontal="27dp"
                android:orientation="horizontal">
                <LinearLayout
                    android:id="@+id/rczv7lyyf3b"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:layout_weight="1"
                    android:gravity="center_vertical"
                    android:layout_marginEnd="10dp"
                    android:orientation="horizontal">
                    <ImageView
                        android:id="@+id/radji7t5nl7h"
                        android:layout_width="125dp"
                        android:layout_height="86dp"
                        android:layout_marginEnd="20dp"
                        android:src="@mipmap/ic_launcher"
                        android:scaleType="fitXY"
                        />
                    <LinearLayout
                        android:id="@+id/rk11g34akoes"
                        android:layout_width="0dp"
                        android:layout_height="wrap_content"
                        android:layout_weight="1"
                        android:orientation="vertical">
                        <TextView
                            android:id="@+id/rxdnycb7zlr"
                            android:textColor="#003087"
                            android:textSize="18sp"
                            android:textStyle="bold"
                            android:layout_marginBottom="5dp"
                            android:layout_height="wrap_content"
                            android:layout_width="wrap_content"
                            android:text="Honda Civic"
                            />
                        <TextView
                            android:id="@+id/r5v7jsf5b5qq"
                            android:textColor="#000000"
                            android:textSize="14sp"
                            android:layout_marginBottom="5dp"
                            android:layout_height="wrap_content"
                            android:layout_width="wrap_content"
                            android:text="User 3"
                            />
                        <TextView
                            android:id="@+id/r3ffo01afplb"
                            android:textColor="#000000"
                            android:textSize="14sp"
                            android:layout_height="wrap_content"
                            android:layout_width="wrap_content"
                            android:text="ABC1234"
                            />
                    </LinearLayout>
                </LinearLayout>
                <LinearLayout
                    android:id="@+id/r3k1ilehhhgc"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:background="@drawable/cr8be6eefb"
                    android:paddingVertical="4dp"
                    android:paddingHorizontal="18dp"
                    android:layout_marginTop="23dp"
                    android:clickable="true"
                    android:focusable="true"
                    android:orientation="vertical">
                    <TextView
                        android:id="@+id/roetciv8xrr"
                        android:textColor="#000000"
                        android:textSize="14sp"
                        android:layout_height="wrap_content"
                        android:layout_width="wrap_content"
                        android:text="Có sẵn"
                        />
                </LinearLayout>
            </LinearLayout>
            <LinearLayout
                android:id="@+id/rrqpdszotxq"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:background="@drawable/cr12bffffff"
                android:layout_marginBottom="10dp"
                android:layout_marginHorizontal="27dp"
                android:orientation="horizontal">
                <LinearLayout
                    android:id="@+id/r6zc35xznuyo"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:layout_weight="1"
                    android:gravity="center_vertical"
                    android:layout_marginEnd="10dp"
                    android:orientation="horizontal">
                    <ImageView
                        android:id="@+id/rdwrupn79kz6"
                        android:layout_width="125dp"
                        android:layout_height="86dp"
                        android:layout_marginEnd="20dp"
                        android:src="@mipmap/ic_launcher"
                        android:scaleType="fitXY"
                        />
                    <LinearLayout
                        android:id="@+id/ruipt4tcu8ap"
                        android:layout_width="0dp"
                        android:layout_height="wrap_content"
                        android:layout_weight="1"
                        android:orientation="vertical">
                        <TextView
                            android:id="@+id/r2xzn2coyckr"
                            android:textColor="#003087"
                            android:textSize="18sp"
                            android:textStyle="bold"
                            android:layout_marginBottom="5dp"
                            android:layout_height="wrap_content"
                            android:layout_width="wrap_content"
                            android:text="Ford Escape"
                            />
                        <TextView
                            android:id="@+id/rivvs9h6tpwq"
                            android:textColor="#000000"
                            android:textSize="14sp"
                            android:layout_marginBottom="5dp"
                            android:layout_height="wrap_content"
                            android:layout_width="wrap_content"
                            android:text="User 2"
                            />
                        <TextView
                            android:id="@+id/rmts9v5e5c6c"
                            android:textColor="#000000"
                            android:textSize="14sp"
                            android:layout_height="wrap_content"
                            android:layout_width="wrap_content"
                            android:text="ABC1234"
                            />
                    </LinearLayout>
                </LinearLayout>
                <LinearLayout
                    android:id="@+id/rfcje49t0t58"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:background="@drawable/cr8be6eefb"
                    android:paddingVertical="4dp"
                    android:paddingHorizontal="18dp"
                    android:layout_marginTop="23dp"
                    android:clickable="true"
                    android:focusable="true"
                    android:orientation="vertical">
                    <TextView
                        android:id="@+id/rskl4bfs9o0s"
                        android:textColor="#000000"
                        android:textSize="14sp"
                        android:layout_height="wrap_content"
                        android:layout_width="wrap_content"
                        android:text="Có sẵn"
                        />
                </LinearLayout>
            </LinearLayout>
            <LinearLayout
                android:id="@+id/revfbfuay89e"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:background="@drawable/cr12bffffff"
                android:layout_marginBottom="10dp"
                android:layout_marginHorizontal="27dp"
                android:orientation="horizontal">
                <LinearLayout
                    android:id="@+id/riluend0tl3"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:layout_weight="1"
                    android:gravity="center_vertical"
                    android:layout_marginEnd="10dp"
                    android:orientation="horizontal">
                    <ImageView
                        android:id="@+id/rdumtzafrzpd"
                        android:layout_width="125dp"
                        android:layout_height="86dp"
                        android:layout_marginEnd="20dp"
                        android:src="@mipmap/ic_launcher"
                        android:scaleType="fitXY"
                        />
                    <LinearLayout
                        android:id="@+id/ryebsih2dno"
                        android:layout_width="0dp"
                        android:layout_height="wrap_content"
                        android:layout_weight="1"
                        android:orientation="vertical">
                        <TextView
                            android:id="@+id/r3rohu5bcte2"
                            android:textColor="#003087"
                            android:textSize="18sp"
                            android:textStyle="bold"
                            android:layout_marginBottom="5dp"
                            android:layout_height="wrap_content"
                            android:layout_width="wrap_content"
                            android:text="Toyota Camry"
                            />
                        <TextView
                            android:id="@+id/ry0cup9wgdu"
                            android:textColor="#000000"
                            android:textSize="14sp"
                            android:layout_marginBottom="5dp"
                            android:layout_height="wrap_content"
                            android:layout_width="wrap_content"
                            android:text="Sedan"
                            />
                        <TextView
                            android:id="@+id/rie5vzhu1jk8"
                            android:textColor="#000000"
                            android:textSize="14sp"
                            android:layout_height="wrap_content"
                            android:layout_width="wrap_content"
                            android:text="ABC1234"
                            />
                    </LinearLayout>
                </LinearLayout>
                <LinearLayout
                    android:id="@+id/rqago89rzl8g"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:background="@drawable/cr8be6eefb"
                    android:paddingVertical="4dp"
                    android:paddingHorizontal="18dp"
                    android:layout_marginTop="23dp"
                    android:clickable="true"
                    android:focusable="true"
                    android:orientation="vertical">
                    <TextView
                        android:id="@+id/rvtzdvwsvlj9"
                        android:textColor="#000000"
                        android:textSize="14sp"
                        android:layout_height="wrap_content"
                        android:layout_width="wrap_content"
                        android:text="Có sẵn"
                        />
                </LinearLayout>
            </LinearLayout>
            <LinearLayout
                android:id="@+id/rg9pjm47tbw4"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:background="@drawable/cr12bffffff"
                android:layout_marginBottom="10dp"
                android:layout_marginHorizontal="27dp"
                android:orientation="horizontal">
                <LinearLayout
                    android:id="@+id/rngngf67hmft"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:layout_weight="1"
                    android:gravity="center_vertical"
                    android:layout_marginEnd="10dp"
                    android:orientation="horizontal">
                    <ImageView
                        android:id="@+id/reib5m4cqk0u"
                        android:layout_width="125dp"
                        android:layout_height="86dp"
                        android:layout_marginEnd="20dp"
                        android:src="@mipmap/ic_launcher"
                        android:scaleType="fitXY"
                        />
                    <LinearLayout
                        android:id="@+id/relussczqxn"
                        android:layout_width="0dp"
                        android:layout_height="wrap_content"
                        android:layout_weight="1"
                        android:orientation="vertical">
                        <TextView
                            android:id="@+id/rfoifumekn4r"
                            android:textColor="#003087"
                            android:textSize="18sp"
                            android:textStyle="bold"
                            android:layout_marginBottom="5dp"
                            android:layout_height="wrap_content"
                            android:layout_width="wrap_content"
                            android:text="Montre Audi"
                            />
                        <TextView
                            android:id="@+id/rzrzrw0mux4"
                            android:textColor="#000000"
                            android:textSize="14sp"
                            android:layout_marginBottom="5dp"
                            android:layout_height="wrap_content"
                            android:layout_width="wrap_content"
                            android:text="User 2"
                            />
                        <TextView
                            android:id="@+id/r1eu4txyuqzn"
                            android:textColor="#000000"
                            android:textSize="14sp"
                            android:layout_height="wrap_content"
                            android:layout_width="wrap_content"
                            android:text="ABC1234"
                            />
                    </LinearLayout>
                </LinearLayout>
                <LinearLayout
                    android:id="@+id/rexr4kn0f6wk"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:background="@drawable/cr8be6eefb"
                    android:paddingVertical="4dp"
                    android:paddingHorizontal="18dp"
                    android:layout_marginTop="23dp"
                    android:clickable="true"
                    android:focusable="true"
                    android:orientation="vertical">
                    <TextView
                        android:id="@+id/rzka55a577d"
                        android:textColor="#000000"
                        android:textSize="14sp"
                        android:layout_height="wrap_content"
                        android:layout_width="wrap_content"
                        android:text="Có sẵn"
                        />
                </LinearLayout>
            </LinearLayout>
            <LinearLayout
                android:id="@+id/rwfo1orf8pj"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:background="@drawable/cr12bffffff"
                android:layout_marginBottom="10dp"
                android:layout_marginHorizontal="27dp"
                android:orientation="horizontal">
                <LinearLayout
                    android:id="@+id/rtcifp3kliof"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:layout_weight="1"
                    android:gravity="center_vertical"
                    android:layout_marginEnd="10dp"
                    android:orientation="horizontal">
                    <ImageView
                        android:id="@+id/rtwigcgmp69l"
                        android:layout_width="125dp"
                        android:layout_height="86dp"
                        android:layout_marginEnd="20dp"
                        android:src="@mipmap/ic_launcher"
                        android:scaleType="fitXY"
                        />
                    <LinearLayout
                        android:id="@+id/rrhlhoef9vrk"
                        android:layout_width="0dp"
                        android:layout_height="wrap_content"
                        android:layout_weight="1"
                        android:orientation="vertical">
                        <TextView
                            android:id="@+id/r0jmjaxljbm7n"
                            android:textColor="#003087"
                            android:textSize="18sp"
                            android:textStyle="bold"
                            android:layout_marginBottom="5dp"
                            android:layout_height="wrap_content"
                            android:layout_width="wrap_content"
                            android:text="Honda Civic"
                            />
                        <TextView
                            android:id="@+id/rgiyp7tekbx5"
                            android:textColor="#000000"
                            android:textSize="14sp"
                            android:layout_marginBottom="5dp"
                            android:layout_height="wrap_content"
                            android:layout_width="wrap_content"
                            android:text="User 3"
                            />
                        <TextView
                            android:id="@+id/rets5va9xsxo"
                            android:textColor="#000000"
                            android:textSize="14sp"
                            android:layout_height="wrap_content"
                            android:layout_width="wrap_content"
                            android:text="ABC1234"
                            />
                    </LinearLayout>
                </LinearLayout>
                <LinearLayout
                    android:id="@+id/r949nie1rn2"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:background="@drawable/cr8be6eefb"
                    android:paddingVertical="4dp"
                    android:paddingHorizontal="18dp"
                    android:layout_marginTop="23dp"
                    android:clickable="true"
                    android:focusable="true"
                    android:orientation="vertical">
                    <TextView
                        android:id="@+id/r3yrgq0alie8"
                        android:textColor="#000000"
                        android:textSize="14sp"
                        android:layout_height="wrap_content"
                        android:layout_width="wrap_content"
                        android:text="Có sẵn"
                        />
                </LinearLayout>
            </LinearLayout>
            <LinearLayout
                android:id="@+id/r477o4yrcq0d"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginBottom="17dp"
                android:layout_marginHorizontal="27dp"
                android:orientation="vertical">
                <LinearLayout
                    android:id="@+id/rcfz6pkblydv"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:background="@drawable/cr12bffffff"
                    android:orientation="horizontal">
                    <LinearLayout
                        android:id="@+id/r3brd1zyfjem"
                        android:layout_width="0dp"
                        android:layout_height="wrap_content"
                        android:layout_weight="1"
                        android:gravity="center_vertical"
                        android:layout_marginEnd="10dp"
                        android:orientation="horizontal">
                        <ImageView
                            android:id="@+id/r6ync2thkc26"
                            android:layout_width="125dp"
                            android:layout_height="86dp"
                            android:layout_marginEnd="20dp"
                            android:src="@mipmap/ic_launcher"
                            android:scaleType="fitXY"
                            />
                        <LinearLayout
                            android:id="@+id/rx78pl9w0pxq"
                            android:layout_width="0dp"
                            android:layout_height="wrap_content"
                            android:layout_weight="1"
                            android:orientation="vertical">
                            <TextView
                                android:id="@+id/rw5bbu23bfoj"
                                android:textColor="#003087"
                                android:textSize="18sp"
                                android:textStyle="bold"
                                android:layout_marginBottom="5dp"
                                android:layout_height="wrap_content"
                                android:layout_width="wrap_content"
                                android:text="Ford Escape"
                                />
                            <TextView
                                android:id="@+id/rtgyo7jis8vh"
                                android:textColor="#000000"
                                android:textSize="14sp"
                                android:layout_marginBottom="5dp"
                                android:layout_height="wrap_content"
                                android:layout_width="wrap_content"
                                android:text="User 2"
                                />
                            <TextView
                                android:id="@+id/r3m9v9dctc87"
                                android:textColor="#000000"
                                android:textSize="14sp"
                                android:layout_height="wrap_content"
                                android:layout_width="wrap_content"
                                android:text="ABC1234"
                                />
                        </LinearLayout>
                    </LinearLayout>
                    <LinearLayout
                        android:id="@+id/r2bz54b47hlf"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:background="@drawable/cr8be6eefb"
                        android:paddingVertical="4dp"
                        android:paddingHorizontal="18dp"
                        android:layout_marginTop="23dp"
                        android:clickable="true"
                        android:focusable="true"
                        android:orientation="vertical">
                        <TextView
                            android:id="@+id/rctnwowfov9g"
                            android:textColor="#000000"
                            android:textSize="14sp"
                            android:layout_height="wrap_content"
                            android:layout_width="wrap_content"
                            android:text="Có sẵn"
                            />
                    </LinearLayout>
                </LinearLayout>
            </LinearLayout>
            <LinearLayout
                android:id="@+id/rf59m0q3xd6p"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:gravity="center_vertical"
                android:paddingHorizontal="88dp"
                android:layout_marginBottom="15dp"
                android:orientation="horizontal">
                <ImageView
                    android:id="@+id/roowmagxixf"
                    android:layout_width="24dp"
                    android:layout_height="24dp"
                    android:layout_marginEnd="24dp"
                    android:src="@mipmap/ic_launcher"
                    android:scaleType="fitXY"
                    />
                <LinearLayout
                    android:id="@+id/rjrzb5ift8k"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:layout_weight="1"
                    android:layout_marginEnd="12dp"
                    android:orientation="horizontal">
                    <LinearLayout
                        android:id="@+id/r98irdw1c7on"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:background="@drawable/cr15b003087"
                        android:paddingVertical="7dp"
                        android:paddingHorizontal="14dp"
                        android:layout_marginEnd="10dp"
                        android:clickable="true"
                        android:focusable="true"
                        android:orientation="vertical">
                        <TextView
                            android:id="@+id/ry5rv1mvppz"
                            android:textColor="#FFFFFF"
                            android:textSize="20sp"
                            android:textStyle="bold"
                            android:layout_height="wrap_content"
                            android:layout_width="wrap_content"
                            android:text="1"
                            />
                    </LinearLayout>
                    <LinearLayout
                        android:id="@+id/ra7k32echai7"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:background="@drawable/s003087sw1cr15bffffff"
                        android:paddingVertical="7dp"
                        android:paddingHorizontal="14dp"
                        android:layout_marginEnd="10dp"
                        android:clickable="true"
                        android:focusable="true"
                        android:orientation="vertical">
                        <TextView
                            android:id="@+id/rz07wjtsgw3"
                            android:textColor="#003087"
                            android:textSize="20sp"
                            android:textStyle="bold"
                            android:layout_height="wrap_content"
                            android:layout_width="wrap_content"
                            android:text="2"
                            />
                    </LinearLayout>
                    <LinearLayout
                        android:id="@+id/rxnzh9na8pe"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:background="@drawable/s003087sw1cr15bffffff"
                        android:paddingVertical="7dp"
                        android:paddingHorizontal="14dp"
                        android:clickable="true"
                        android:focusable="true"
                        android:orientation="vertical">
                        <TextView
                            android:id="@+id/riexa4rhtj4f"
                            android:textColor="#003087"
                            android:textSize="20sp"
                            android:textStyle="bold"
                            android:layout_height="wrap_content"
                            android:layout_width="wrap_content"
                            android:text="3"
                            />
                    </LinearLayout>
                </LinearLayout>
                <ImageView
                    android:id="@+id/r1xf63monev3"
                    android:layout_width="24dp"
                    android:layout_height="24dp"
                    android:src="@mipmap/ic_launcher"
                    android:scaleType="fitXY"
                    />
            </LinearLayout>
        </LinearLayout>
    </ScrollView>
</LinearLayout>

```

### src\main\res\layout\activity_cccd.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/white">

    <!-- Nút quay lại -->
    <ImageView
        android:id="@+id/back_button"
        android:layout_width="32dp"
        android:layout_height="32dp"
        android:layout_marginStart="16dp"
        android:layout_marginTop="16dp"
        android:src="@drawable/ic_arrow_left"
        android:contentDescription="Back"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <!-- Tiêu đề -->
    <TextView
        android:id="@+id/tv_title"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="16dp"
        android:layout_marginTop="16dp"
        android:text="Cập nhật CCCD và bằng lái xe"
        android:textSize="24sp"
        android:textStyle="bold"
        android:textColor="@color/text_title"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/back_button" />

    <!-- ScrollView chứa các trường nhập -->
    <ScrollView
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:layout_marginTop="16dp"
        android:layout_marginBottom="16dp"
        app:layout_constraintBottom_toTopOf="@id/update_img"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/tv_title">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical"
            android:padding="16dp">

            <!-- CCCD mặt trước -->
            <TextView
                android:id="@+id/tv_front_cccd_label"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="CCCD mặt trước"
                android:textSize="16sp"
                android:textColor="@color/text_input_hint"
                android:fontFamily="@font/relay_roboto_flex_regular" />

            <FrameLayout
                android:id="@+id/front_cccd_container"
                android:layout_width="match_parent"
                android:layout_height="200dp"
                android:layout_marginTop="8dp"
                android:background="@drawable/rounded_corner"
                android:clipToOutline="true">

                <ImageView
                    android:id="@+id/img_front_CCCD"
                    android:layout_width="match_parent"
                    android:layout_height="match_parent"
                    android:scaleType="centerCrop"
                    android:src="@drawable/image_5_account"
                    android:contentDescription="CCCD Front" />
            </FrameLayout>

            <!-- CCCD mặt sau -->
            <TextView
                android:id="@+id/tv_behind_cccd_label"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="16dp"
                android:text="CCCD mặt sau"
                android:textSize="16sp"
                android:textColor="@color/text_input_hint"
                android:fontFamily="@font/relay_roboto_flex_regular" />

            <FrameLayout
                android:id="@+id/behind_cccd_container"
                android:layout_width="match_parent"
                android:layout_height="200dp"
                android:layout_marginTop="8dp"
                android:background="@drawable/rounded_corner"
                android:clipToOutline="true">

                <ImageView
                    android:id="@+id/img_behind_CCCD"
                    android:layout_width="match_parent"
                    android:layout_height="match_parent"
                    android:scaleType="centerCrop"
                    android:src="@drawable/image_5_account"
                    android:contentDescription="CCCD Behind" />
            </FrameLayout>

            <!-- Bằng lái xe -->
            <TextView
                android:id="@+id/tv_license_label"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="16dp"
                android:text="Bằng lái xe"
                android:textSize="16sp"
                android:textColor="@color/text_input_hint"
                android:fontFamily="@font/relay_roboto_flex_regular" />

            <FrameLayout
                android:id="@+id/license_container"
                android:layout_width="match_parent"
                android:layout_height="200dp"
                android:layout_marginTop="8dp"
                android:background="@drawable/rounded_corner"
                android:clipToOutline="true">

                <ImageView
                    android:id="@+id/img_license"
                    android:layout_width="match_parent"
                    android:layout_height="match_parent"
                    android:scaleType="centerCrop"
                    android:src="@drawable/image_5_account"
                    android:contentDescription="Driver's License" />
            </FrameLayout>

        </LinearLayout>
    </ScrollView>

    <!-- Nút cập nhật -->
    <Button
        android:id="@+id/update_img"
        android:layout_width="0dp"
        android:layout_height="48dp"
        android:layout_marginStart="16dp"
        android:layout_marginEnd="16dp"
        android:layout_marginBottom="16dp"
        android:background="@drawable/blue_round_button"
        android:text="Cập nhật"
        android:textColor="@color/white"
        android:textSize="18sp"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent" />

</androidx.constraintlayout.widget.ConstraintLayout>

```

### src\main\res\layout\activity_detail_car.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fitsSystemWindows="true">

    <!-- Status Bar Placeholder -->

    <!-- Toolbar -->
    <LinearLayout
        android:id="@+id/toolbar"
        android:layout_width="match_parent"
        android:layout_height="48dp"
        android:background="@color/white"
        android:gravity="center_vertical"
        tools:layout_editor_absoluteY="48dp">

        <ImageView
            android:id="@+id/back_button"
            android:layout_width="28dp"
            android:layout_height="28dp"
            android:layout_marginStart="16dp"
            android:src="@drawable/vector_car_details"
            tools:ignore="ContentDescription" />

        <TextView
            android:id="@+id/toolbar_title"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:fontFamily="@font/relay_roboto_flex_regular"
            android:fontWeight="700"
            android:gravity="center"
            android:text="Thuê Xe"
            android:textColor="@color/black"
            android:textSize="25sp" />
    </LinearLayout>

    <!-- ScrollView for Content -->
    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_marginTop="8dp"
        app:layout_constraintBottom_toTopOf="@id/btn_book"
        app:layout_constraintTop_toBottomOf="@id/toolbar">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical"
            android:padding="16dp">

            <!-- Vehicle Info -->
            <TextView
                android:id="@+id/vehicle_name"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_gravity="center_horizontal"
                android:layout_marginTop="16dp"
                android:fontFamily="@font/relay_roboto_flex_regular"
                android:fontWeight="700"
                android:text="Mercedes C300"
                android:textColor="@color/black"
                android:textSize="25sp" />

            <TextView
                android:id="@+id/tv_vehicle_price"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginStart="4dp"
                android:layout_marginTop="8dp"
                android:fontFamily="@font/relay_roboto_flex_regular"
                android:letterSpacing="0.04"
                android:text="999.000VNĐ/Ngày"
                android:textColor="@color/blue1"
                android:textSize="17.51sp" />

            <!-- Vehicle Image -->
            <ImageView
                android:id="@+id/vehicle_img"
                android:layout_width="314dp"
                android:layout_height="167dp"
                android:layout_gravity="center_horizontal"
                android:background="@drawable/rounded_corner"
                android:clipToOutline="true"
                android:scaleType="centerCrop"
                tools:src="@drawable/mercedes_c300_amg_2022_2023_2024_2025_noi_that_ngoai_that_mercedeshaxaco_com_vn_5" />

            <!-- Vehicle Specs -->
            <LinearLayout
                android:id="@+id/specs_container"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginTop="16dp"
                android:orientation="horizontal"
                android:weightSum="2">

                <!-- Fuel Type -->
                <androidx.cardview.widget.CardView
                    android:id="@+id/spec_fuel"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:layout_marginEnd="8dp"
                    android:layout_weight="1"
                    app:cardCornerRadius="7dp"
                    app:cardElevation="2dp">

                    <LinearLayout
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:background="@drawable/background_car_details"
                        android:orientation="vertical"
                        android:padding="16dp">

                        <ImageView
                            android:id="@+id/fuel_icon"
                            android:layout_width="26dp"
                            android:layout_height="26dp"
                            android:layout_gravity="center_horizontal"
                            android:src="@drawable/image_car_details"
                            tools:ignore="ContentDescription" />

                        <TextView
                            android:id="@+id/fuel_title"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:layout_gravity="center_horizontal"
                            android:layout_marginTop="8dp"
                            android:fontFamily="@font/relay_roboto_flex_regular"
                            android:fontWeight="500"
                            android:text="Loại nhiên liệu"
                            android:textColor="@color/gray"
                            android:textSize="17.51sp" />

                        <TextView
                            android:id="@+id/fuel_value"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:layout_gravity="center_horizontal"
                            android:layout_marginTop="4dp"
                            android:ellipsize="end"
                            android:fontFamily="@font/relay_roboto_flex_regular"
                            android:maxLines="2"
                            android:text="Xăng không chì 95+"
                            android:textColor="@color/text_input_hint"
                            android:textSize="17.51sp" />
                    </LinearLayout>
                </androidx.cardview.widget.CardView>

                <!-- Max Speed -->
                <androidx.cardview.widget.CardView
                    android:id="@+id/spec_speed"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:layout_marginStart="8dp"
                    android:layout_weight="1"
                    app:cardCornerRadius="7dp"
                    app:cardElevation="2dp">

                    <LinearLayout
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:background="@drawable/background_car_details"
                        android:orientation="vertical"
                        android:padding="16dp">

                        <ImageView
                            android:id="@+id/speed_icon"
                            android:layout_width="26dp"
                            android:layout_height="26dp"
                            android:layout_gravity="center_horizontal"
                            android:src="@drawable/image1_car_details"
                            tools:ignore="ContentDescription" />

                        <TextView
                            android:id="@+id/speed_title"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:layout_gravity="center_horizontal"
                            android:layout_marginTop="8dp"
                            android:fontFamily="@font/relay_roboto_flex_regular"
                            android:fontWeight="500"
                            android:text="Vận tốc tối đa"
                            android:textColor="@color/gray"
                            android:textSize="17.51sp" />

                        <TextView
                            android:id="@+id/speed_value"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:layout_gravity="center_horizontal"
                            android:layout_marginTop="4dp"
                            android:fontFamily="@font/relay_roboto_flex_regular"
                            android:text="250 km/h"
                            android:textColor="@color/text_input_hint"
                            android:textSize="17.51sp" />
                    </LinearLayout>
                </androidx.cardview.widget.CardView>
            </LinearLayout>

            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginTop="16dp"
                android:orientation="horizontal"
                android:weightSum="2">

                <!-- Transmission -->
                <androidx.cardview.widget.CardView
                    android:id="@+id/spec_transmission"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:layout_marginEnd="8dp"
                    android:layout_weight="1"
                    app:cardCornerRadius="7dp"
                    app:cardElevation="2dp">

                    <LinearLayout
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:background="@drawable/background_car_details"
                        android:orientation="vertical"
                        android:padding="16dp">

                        <ImageView
                            android:id="@+id/transmission_icon"
                            android:layout_width="26dp"
                            android:layout_height="25dp"
                            android:layout_gravity="center_horizontal"
                            android:src="@drawable/image3_car_details"
                            tools:ignore="ContentDescription" />

                        <TextView
                            android:id="@+id/transmission_title"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:layout_gravity="center_horizontal"
                            android:layout_marginTop="8dp"
                            android:fontFamily="@font/relay_roboto_flex_regular"
                            android:fontWeight="500"
                            android:text="Hộp số"
                            android:textColor="@color/text_title"
                            android:textSize="17.51sp" />

                        <TextView
                            android:id="@+id/transmission_value"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:layout_gravity="center_horizontal"
                            android:layout_marginTop="4dp"
                            android:fontFamily="@font/relay_roboto_flex_regular"
                            android:text="Tự động 9 cấp"
                            android:textColor="@color/text_input_hint"
                            android:textSize="17.51sp" />
                    </LinearLayout>
                </androidx.cardview.widget.CardView>

                <!-- Doors & Seats -->
                <androidx.cardview.widget.CardView
                    android:id="@+id/spec_seats"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:layout_marginStart="8dp"
                    android:layout_weight="1"
                    app:cardCornerRadius="7dp"
                    app:cardElevation="2dp">

                    <LinearLayout
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:background="@drawable/background_car_details"
                        android:orientation="vertical"
                        android:padding="16dp">

                        <ImageView
                            android:id="@+id/seats_icon"
                            android:layout_width="26dp"
                            android:layout_height="25dp"
                            android:layout_gravity="center_horizontal"
                            android:src="@drawable/image2_car_details"
                            tools:ignore="ContentDescription" />

                        <TextView
                            android:id="@+id/seats_title"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:layout_gravity="center_horizontal"
                            android:layout_marginTop="8dp"
                            android:fontFamily="@font/relay_roboto_flex_regular"
                            android:fontWeight="500"
                            android:text="Cửa, Ghế xe"
                            android:textColor="@color/text_title"
                            android:textSize="17.51sp" />

                        <TextView
                            android:id="@+id/seats_value"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:layout_gravity="center_horizontal"
                            android:layout_marginTop="4dp"
                            android:fontFamily="@font/relay_roboto_flex_regular"
                            android:text="2 Cửa, 4 Ghế"
                            android:textColor="@color/text_input_hint"
                            android:textSize="17.51sp" />
                    </LinearLayout>
                </androidx.cardview.widget.CardView>
            </LinearLayout>

            <!-- Provider Info -->
            <androidx.cardview.widget.CardView
                android:id="@+id/provider_card"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginTop="16dp"
                app:cardCornerRadius="7dp"
                app:cardElevation="2dp">

                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:background="@drawable/background_car_details"
                    android:orientation="vertical"
                    android:padding="16dp">

                    <TextView
                        android:id="@+id/provider_title"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:fontFamily="@font/relay_roboto_flex_regular"
                        android:fontWeight="700"
                        android:text="Thông tin nhà cung cấp"
                        android:textColor="@color/text_title"
                        android:textSize="17.51sp" />

                    <!-- Provider Name -->
                    <LinearLayout
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:layout_marginTop="8dp"
                        android:gravity="center_vertical"
                        android:orientation="horizontal">

                        <ImageView
                            android:layout_width="26dp"
                            android:layout_height="26dp"
                            android:layout_marginEnd="8dp"
                            android:src="@drawable/ic_activity"
                            tools:ignore="ContentDescription" />

                        <TextView
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:fontFamily="@font/relay_roboto_flex_regular"
                            android:text="Tên nhà cung cấp"
                            android:textColor="@color/gray"
                            android:textSize="17.51sp"
                            tools:text="Tên" />

                        <TextView
                            android:id="@+id/tv_provider_name"
                            android:layout_width="0dp"
                            android:layout_height="wrap_content"
                            android:layout_marginStart="8dp"
                            android:layout_weight="1"
                            android:fontFamily="@font/relay_roboto_flex_regular"
                            android:text="Công ty ABC"
                            android:textColor="@color/text_input_hint"
                            android:textSize="17.51sp"
                            android:maxLines="1"
                            android:ellipsize="end" />
                    </LinearLayout>

                    <!-- Provider Phone -->
                    <LinearLayout
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:layout_marginTop="8dp"
                        android:gravity="center_vertical"
                        android:orientation="horizontal">

                        <ImageView
                            android:layout_width="26dp"
                            android:layout_height="26dp"
                            android:layout_marginEnd="8dp"
                            android:src="@drawable/vector5_signup"
                            tools:ignore="ContentDescription" />

                        <TextView
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:fontFamily="@font/relay_roboto_flex_regular"
                            android:text="Điện thoại"
                            android:textColor="@color/gray"
                            android:textSize="17.51sp"
                            tools:text="Điện thoại" />

                        <TextView
                            android:id="@+id/tv_provider_phone"
                            android:layout_width="0dp"
                            android:layout_height="wrap_content"
                            android:layout_marginStart="8dp"
                            android:layout_weight="1"
                            android:fontFamily="@font/relay_roboto_flex_regular"
                            android:text="0123456789"
                            android:textColor="@color/text_input_hint"
                            android:textSize="17.51sp"
                            android:maxLines="1"
                            android:ellipsize="end" />
                    </LinearLayout>

                    <!-- Provider Email -->
                    <LinearLayout
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:layout_marginTop="8dp"
                        android:gravity="center_vertical"
                        android:orientation="horizontal">

                        <ImageView
                            android:layout_width="26dp"
                            android:layout_height="26dp"
                            android:layout_marginEnd="8dp"
                            android:src="@drawable/ic_mail"
                            tools:ignore="ContentDescription" />

                        <TextView
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:fontFamily="@font/relay_roboto_flex_regular"
                            android:text="Email"
                            android:textColor="@color/gray"
                            android:textSize="17.51sp"
                            tools:text="Email" />

                        <TextView
                            android:id="@+id/tv_provider_gmail"
                            android:layout_width="0dp"
                            android:layout_height="wrap_content"
                            android:layout_marginStart="8dp"
                            android:layout_weight="1"
                            android:fontFamily="@font/relay_roboto_flex_regular"
                            android:text="abc@example.com"
                            android:textColor="@color/text_input_hint"
                            android:textSize="17.51sp"
                            android:maxLines="1"
                            android:ellipsize="end" />
                    </LinearLayout>

                    <!-- Provider Address -->
                    <LinearLayout
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:layout_marginTop="8dp"
                        android:gravity="center_vertical"
                        android:orientation="horizontal">

                        <ImageView
                            android:layout_width="26dp"
                            android:layout_height="26dp"
                            android:layout_marginEnd="8dp"
                            android:src="@drawable/image1_main"
                            tools:ignore="ContentDescription" />

                        <TextView
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:fontFamily="@font/relay_roboto_flex_regular"
                            android:text="Địa chỉ"
                            android:textColor="@color/gray"
                            android:textSize="17.51sp"
                            tools:text="Địa chỉ" />

                        <TextView
                            android:id="@+id/tv_provider_address"
                            android:layout_width="0dp"
                            android:layout_height="wrap_content"
                            android:layout_marginStart="8dp"
                            android:layout_weight="1"
                            android:fontFamily="@font/relay_roboto_flex_regular"
                            android:text="123 Đường ABC, Đồng Nai"
                            android:textColor="@color/text_input_hint"
                            android:textSize="17.51sp"
                            android:maxLines="2"
                            android:ellipsize="end" />
                    </LinearLayout>

                    <!-- Owner Name -->
                    <LinearLayout
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:layout_marginTop="8dp"
                        android:gravity="center_vertical"
                        android:orientation="horizontal">

                        <ImageView
                            android:layout_width="26dp"
                            android:layout_height="26dp"
                            android:layout_marginEnd="8dp"
                            android:src="@drawable/ic_person"
                            tools:ignore="ContentDescription" />

                        <TextView
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:fontFamily="@font/relay_roboto_flex_regular"
                            android:text="Chủ xe"
                            android:textColor="@color/gray"
                            android:textSize="17.51sp"
                            tools:text="Chủ xe" />

                        <TextView
                            android:id="@+id/tv_vehicle_owner"
                            android:layout_width="0dp"
                            android:layout_height="wrap_content"
                            android:layout_marginStart="8dp"
                            android:layout_weight="1"
                            android:fontFamily="@font/relay_roboto_flex_regular"
                            android:text="Nguyễn Văn A"
                            android:textColor="@color/text_input_hint"
                            android:textSize="17.51sp"
                            android:maxLines="1"
                            android:ellipsize="end" />
                    </LinearLayout>

                    <!-- Vehicle Number -->
                    <LinearLayout
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:layout_marginTop="8dp"
                        android:gravity="center_vertical"
                        android:orientation="horizontal">

                        <ImageView
                            android:layout_width="26dp"
                            android:layout_height="26dp"
                            android:layout_marginEnd="8dp"
                            android:src="@drawable/ic_car"
                            tools:ignore="ContentDescription" />

                        <TextView
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:fontFamily="@font/relay_roboto_flex_regular"
                            android:text="Biển số xe"
                            android:textColor="@color/gray"
                            android:textSize="17.51sp"
                            tools:text="Biển số xe" />

                        <TextView
                            android:id="@+id/tv_vehicle_number"
                            android:layout_width="0dp"
                            android:layout_height="wrap_content"
                            android:layout_marginStart="8dp"
                            android:layout_weight="1"
                            android:fontFamily="@font/relay_roboto_flex_regular"
                            android:text="60C2-88888"
                            android:textColor="@color/text_input_hint"
                            android:textSize="17.51sp"
                            android:maxLines="1"
                            android:ellipsize="end" />
                    </LinearLayout>
                </LinearLayout>
            </androidx.cardview.widget.CardView>
        </LinearLayout>
    </ScrollView>

    <!-- Book Button -->
    <Button
        android:id="@+id/btn_book"
        style="@style/AppButton"
        android:layout_width="374dp"
        android:layout_height="48dp"
        android:layout_marginStart="20dp"
        android:layout_marginEnd="20dp"
        android:layout_marginBottom="16dp"
        android:background="@drawable/bg_gradient_login"
        android:fontFamily="@font/relay_roboto_flex_regular"
        android:fontWeight="700"
        android:text="THUÊ NGAY"
        android:textColor="@color/white"
        android:textSize="22sp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

</androidx.constraintlayout.widget.ConstraintLayout>
```

### src\main\res\layout\activity_finished.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#FFFFFF">

    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent">
        <androidx.constraintlayout.widget.ConstraintLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content">

            <ImageView
                android:id="@+id/img_car"
                android:layout_width="match_parent"
                android:layout_height="@dimen/_250sdp"
                android:layout_marginTop="@dimen/_8sdp"
                android:background="@drawable/img_car_booking_successful"

                app:layout_constraintHorizontal_bias="0.476"
                app:layout_constraintTop_toTopOf="parent" />

            <TextView
                android:id="@+id/tv_InfCar"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="@dimen/_10sdp"
                android:layout_marginStart="35dp"
                android:text="Gửi yêu cầu thành công!"
                android:textColor="@color/sky"
                android:textSize="@dimen/_24ssp"
                android:textStyle="bold"
                app:layout_constraintTop_toBottomOf="@id/img_car"
                app:layout_constraintLeft_toLeftOf="parent"
                tools:ignore="HardcodedText" />

            <View
                android:id="@+id/view2"
                android:layout_width="match_parent"
                android:layout_height="@dimen/_250sdp"
                android:layout_marginTop="@dimen/_20sdp"
                android:background="@drawable/rectangle_quarter_radius_top_right"
                android:backgroundTint="@color/sky"
                app:layout_constraintTop_toBottomOf="@id/tv_InfCar" />

            <TextView
                android:layout_width="@dimen/_250sdp"
                android:layout_height="match_parent"
                android:id="@+id/tv_Traloi"
                app:layout_constraintTop_toTopOf="@id/view2"
                app:layout_constraintLeft_toLeftOf="parent"
                android:layout_marginTop="35dp"
                android:text="Thường Nhà cung cấp sẽ phản hồi từ 1 đến 2 ngày."
                android:textColor="@color/white"
                android:textSize="@dimen/_18ssp"
                android:layout_marginStart="@dimen/_30sdp"
                tools:ignore="HardcodedText" />

            <TextView
                android:layout_width="@dimen/_250sdp"
                android:layout_height="match_parent"
                android:id="@+id/tv_ThongBao"
                app:layout_constraintTop_toBottomOf="@+id/tv_Traloi"
                app:layout_constraintLeft_toLeftOf="parent"
                android:layout_marginTop="@dimen/_40sdp"
                android:text="Hãy thường xuyên kiểm tra thông báo để tiếp tục giao dịch."
                android:textColor="@color/white"

                android:textSize="@dimen/_18ssp"
                android:layout_marginStart="@dimen/_30sdp"
                tools:ignore="HardcodedText" />


            <androidx.appcompat.widget.AppCompatButton
                android:id="@+id/btn_noti_Home"
                android:layout_width="350dp"
                android:layout_height="@dimen/buttonSize"
                android:layout_marginTop="@dimen/_20sdp"
                android:layout_marginBottom="@dimen/_16sdp"
                android:layout_marginStart="30dp"
                android:backgroundTint="@color/sunset"
                android:text="Về trang chủ"
                android:textColor="@color/white"
                android:textSize="@dimen/_18ssp"
                app:layout_constraintBottom_toBottomOf="parent"
                app:layout_constraintLeft_toLeftOf="parent"
                app:layout_constraintTop_toBottomOf="@+id/tv_ThongBao"


                tools:ignore="HardcodedText" />


        </androidx.constraintlayout.widget.ConstraintLayout>

    </ScrollView>


</androidx.constraintlayout.widget.ConstraintLayout>
```

### src\main\res\layout\activity_forgot_password.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/linearLayout4"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/sky">

    <View
        android:id="@+id/view6"
        android:layout_width="match_parent"
        android:layout_height="@dimen/_142sdp"
        android:background="@drawable/rectangle_quarter_radius"
        android:backgroundTint="@color/white"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <ImageView
        android:id="@+id/imageView4"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="@dimen/_25sdp"
        app:layout_constraintEnd_toEndOf="@+id/view6"
        app:layout_constraintHorizontal_bias="0.498"
        app:layout_constraintStart_toStartOf="@+id/view6"
        app:layout_constraintTop_toTopOf="parent"
        app:srcCompat="@drawable/email_verification_icon1" />

    <TextView
        android:id="@+id/textView9"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="@dimen/_5sdp"
        android:gravity="center_horizontal"
        android:text="Thay đổi mật khẩu"
        android:textColor="@color/sky"
        android:textSize="@dimen/_15ssp"
        app:layout_constraintEnd_toEndOf="@+id/view6"
        app:layout_constraintStart_toStartOf="@+id/view6"
        app:layout_constraintTop_toBottomOf="@+id/imageView4"
        tools:ignore="HardcodedText" />

    <EditText
        android:id="@+id/input_email"
        android:layout_width="@dimen/_251sdp"
        android:layout_height="wrap_content"
        android:layout_marginTop="@dimen/_58sdp"
        android:backgroundTint="@color/white"
        android:ems="10"
        android:textColor="@color/white"
        android:hint="Hãy nhập email của bạn"
        android:inputType="textPersonName"
        android:textColorHint="@color/white"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.458"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/view6"
        tools:ignore="HardcodedText,TextFields" />


    <androidx.appcompat.widget.AppCompatButton
        android:id="@+id/btn_continue"
        android:layout_width="@dimen/_90sdp"
        android:layout_height="@dimen/_30sdp"
        android:layout_marginTop="68dp"
        android:layout_marginEnd="8dp"
        android:background="@color/white"
        android:bottomLeftRadius="@dimen/_8sdp"
        android:bottomRightRadius="@dimen/_8sdp"
        android:text="Tiếp tục"
        android:topLeftRadius="@dimen/_8sdp"
        android:topRightRadius="@dimen/_8sdp"
        app:layout_constraintEnd_toEndOf="@+id/input_email"
        app:layout_constraintTop_toBottomOf="@+id/input_email"
        tools:ignore="HardcodedText" />


</androidx.constraintlayout.widget.ConstraintLayout>
```

### src\main\res\layout\activity_ggverrify_phone.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".Service.UserAuthentication.GGVerrifyPhone">
    <View
        android:id="@+id/view2"
        android:layout_width="match_parent"
        android:layout_height="@dimen/_150sdp"
        android:background="@drawable/rectangle_quarter_radius"
        android:backgroundTint="@color/sky"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <TextView
        android:id="@+id/textView5"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="@dimen/_20sdp"
        android:text="Validate phone number"
        android:textColor="@color/sunflower"
        android:textSize="@dimen/_20ssp"
        android:textStyle="bold"
        android:layout_marginStart="@dimen/_25sdp"
        app:layout_constraintStart_toStartOf="@+id/view2"
        app:layout_constraintTop_toTopOf="@+id/view2"
        tools:ignore="HardcodedText" />

    <TextView
        android:id="@+id/textView6"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="@dimen/_10sdp"
        android:layout_marginEnd="107dp"
        android:text="Nhập số điện thoại để xác thực"
        android:textColor="@color/white"
        android:textSize="@dimen/_16ssp"
        android:textStyle="normal"
        app:layout_constraintHorizontal_bias="0.647"
        app:layout_constraintStart_toStartOf="@+id/textView5"
        app:layout_constraintTop_toBottomOf="@+id/textView5"
        tools:ignore="HardcodedText" />

    <ImageView
        android:id="@+id/imageView2"
        android:layout_width="@dimen/_35sdp"
        android:layout_height="@dimen/_35sdp"
        app:layout_constraintBottom_toBottomOf="@+id/view2"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/textView6"
        app:srcCompat="@drawable/create_account_arrow" />

    <View
        android:id="@+id/view3"
        android:layout_width="match_parent"
        android:layout_height="@dimen/_200sdp"
        android:layout_marginStart="@dimen/_15sdp"
        android:layout_marginTop="@dimen/_50sdp"
        android:layout_marginEnd="@dimen/_15sdp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/view2" />

    <TextView
        android:id="@+id/phone_number"
        android:layout_width="match_parent"
        android:layout_height="@dimen/_20sdp"
        android:layout_marginStart="@dimen/_25sdp"
        android:layout_marginEnd="@dimen/_25sdp"
        android:layout_marginTop="@dimen/_20sdp"
        android:ems="10"
        android:focusable="auto"
        android:text="Số điện thoại"
        android:textColor="@color/sky"
        app:layout_constraintStart_toStartOf="@+id/view3"
        app:layout_constraintEnd_toEndOf="@id/view3"
        app:layout_constraintTop_toTopOf="@+id/view3"
        tools:ignore="HardcodedText,TextFields" />

    <EditText
        android:id="@+id/input_phone_number"
        android:layout_width="match_parent"
        android:layout_height="@dimen/_40sdp"
        android:layout_marginStart="@dimen/_25sdp"
        android:layout_marginEnd="@dimen/_25sdp"
        android:textSize="@dimen/_12ssp"
        android:inputType="text|phone"
        android:textColor="@color/sky"
        app:layout_constraintStart_toStartOf="@+id/view3"
        app:layout_constraintEnd_toEndOf="@id/view3"
        app:layout_constraintTop_toBottomOf="@+id/phone_number"
        tools:ignore="TextFields" />

    <androidx.appcompat.widget.AppCompatButton
        android:id="@+id/btn_continue"
        android:layout_width="match_parent"
        android:layout_height="@dimen/_35sdp"
        android:layout_marginStart="@dimen/_25sdp"
        android:layout_marginEnd="@dimen/_25sdp"
        android:layout_marginTop="@dimen/_20sdp"
        android:background="@drawable/blue_round_button"
        android:text="Tiếp tục"
        android:textColor="@color/white"
        app:layout_constraintStart_toStartOf="@+id/input_phone_number"
        app:layout_constraintEnd_toEndOf="@id/input_phone_number"
        app:layout_constraintTop_toBottomOf="@+id/input_phone_number"
        tools:ignore="HardcodedText" />
</androidx.constraintlayout.widget.ConstraintLayout>
```

### src\main\res\layout\activity_payment.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/white">

    <ScrollView
        android:layout_width="0dp"
        android:layout_height="0dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical">

            <androidx.constraintlayout.widget.ConstraintLayout
                android:layout_width="match_parent"
                android:layout_height="match_parent">
                <TextView
                    android:id="@+id/tv_confirm"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"

                    android:text="XÁC NHẬN THÔNG TIN"
                    android:textColor="@color/sky"
                    android:textSize="20sp"
                    app:layout_constraintBottom_toBottomOf="@+id/btn_noti_back"
                    app:layout_constraintEnd_toEndOf="parent"
                    app:layout_constraintStart_toStartOf="parent"
                    app:layout_constraintTop_toTopOf="@+id/btn_noti_back" />
                <TextView
                    android:id="@+id/tv"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"

                    android:text="ID:"
                    android:textColor="@color/sky"
                    android:textSize="20sp"

                    app:layout_constraintTop_toBottomOf="@+id/tv_confirm"
                    app:layout_constraintLeft_toLeftOf="parent"
                    android:layout_marginLeft="60dp"
                    />
                <TextView
                    android:id="@+id/txtview_noti_id"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"

                    android:text="id giao dich"
                    android:textColor="@color/sky"
                    android:textSize="20sp"

                    app:layout_constraintTop_toBottomOf="@+id/tv_confirm"
                    app:layout_constraintLeft_toRightOf="@+id/tv"
                    android:layout_marginLeft="10dp"
                    />

                <androidx.appcompat.widget.AppCompatButton
                    android:id="@+id/btn_noti_back"
                    android:layout_width="35dp"
                    android:layout_height="35dp"
                    android:layout_marginStart="16dp"
                    android:layout_marginTop="16dp"
                    android:background="@drawable/ic_arrow_back_blu"
                    app:layout_constraintStart_toStartOf="parent"
                    app:layout_constraintTop_toTopOf="parent" />


                <ImageView
                    android:id="@+id/img_checkout"
                    android:layout_width="match_parent"
                    android:layout_height="220dp"
                    android:layout_marginTop="12dp"
                    app:layout_constraintLeft_toLeftOf="parent"
                    app:layout_constraintTop_toBottomOf="@+id/txtview_noti_id" />

                <androidx.cardview.widget.CardView
                    android:id="@+id/provide_info"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:layout_marginLeft="20dp"
                    android:layout_marginRight="20dp"
                    android:layout_marginTop="10dp"


                    app:layout_constraintEnd_toEndOf="parent"
                    app:layout_constraintStart_toStartOf="parent"
                    app:layout_constraintTop_toBottomOf="@+id/img_checkout">

                    <androidx.constraintlayout.widget.ConstraintLayout
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:background="@drawable/blue_round_button"
                        android:paddingBottom="10dp">

                        <View
                            android:id="@+id/divider"
                            android:layout_width="0dp"
                            android:layout_height="0.3dp"
                            android:layout_marginTop="4dp"
                            android:background="#707070"
                            android:scrollbarThumbHorizontal="@color/white"
                            app:layout_constraintEnd_toEndOf="parent"
                            app:layout_constraintHorizontal_bias="0.0"
                            app:layout_constraintStart_toStartOf="parent"
                            app:layout_constraintTop_toBottomOf="@+id/driverDetailText" />

                        <TextView
                            android:id="@+id/driverDetailText"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:layout_marginStart="24dp"
                            android:layout_marginTop="4dp"

                            android:text="Thông tin nhà cung cấp"
                            android:textColor="@color/white"
                            android:textSize="18sp"
                            app:layout_constraintStart_toStartOf="parent"
                            app:layout_constraintTop_toTopOf="parent" />

                        <LinearLayout
                            android:layout_width="0dp"
                            android:layout_height="wrap_content"
                            android:layout_marginTop="16dp"
                            android:layout_marginEnd="24dp"
                            android:orientation="vertical"
                            app:layout_constraintEnd_toEndOf="parent"
                            app:layout_constraintStart_toStartOf="@+id/driverDetailText"
                            app:layout_constraintTop_toBottomOf="@+id/divider">

                            <LinearLayout
                                android:layout_width="match_parent"
                                android:layout_height="wrap_content"
                                android:orientation="horizontal">

                                <TextView
                                    android:id="@+id/nameText"
                                    android:layout_width="50dp"
                                    android:layout_height="wrap_content"
                                    android:text="Họ Tên:"
                                    android:textColor="@color/white" />

                                <TextView
                                    android:id="@+id/txt_checkout_owner"
                                    android:layout_width="wrap_content"
                                    android:layout_height="wrap_content"
                                    android:layout_weight="1"
                                    android:paddingLeft="@dimen/_14sdp"
                                    android:text="Mr. Sung"
                                    android:textColor="@color/white" />

                            </LinearLayout>

                            <LinearLayout
                                android:layout_width="match_parent"
                                android:layout_height="wrap_content"
                                android:orientation="horizontal"
                                android:paddingTop="10dp">

                                <TextView
                                    android:id="@+id/emailText"
                                    android:layout_width="50dp"
                                    android:layout_height="wrap_content"

                                    android:textColor="@color/white"
                                    android:text="Email:" />

                                <TextView
                                    android:id="@+id/txt_checkout_email"
                                    android:layout_width="wrap_content"
                                    android:layout_height="wrap_content"
                                    android:layout_weight="1"
                                    android:paddingLeft="@dimen/_14sdp"
                                    android:text="abcd@xyz.hhh"
                                    android:textColor="@color/white" />

                            </LinearLayout>

                            <LinearLayout
                                android:layout_width="match_parent"
                                android:layout_height="wrap_content"
                                android:orientation="horizontal"
                                android:paddingTop="10dp">

                                <TextView
                                    android:id="@+id/phoneNumberText"
                                    android:layout_width="50dp"
                                    android:layout_height="wrap_content"
                                    android:textColor="@color/white"
                                    android:text="SĐT:" />

                                <TextView
                                    android:id="@+id/txt_checkout_phonenumber"
                                    android:layout_width="wrap_content"
                                    android:layout_height="wrap_content"
                                    android:layout_weight="1"
                                    android:paddingLeft="@dimen/_14sdp"
                                    android:text="2222 42222"
                                    android:textColor="@color/white" />

                            </LinearLayout>

                        </LinearLayout>


                    </androidx.constraintlayout.widget.ConstraintLayout>

                </androidx.cardview.widget.CardView>

                <androidx.cardview.widget.CardView
                    android:id="@+id/Vehicle_info"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:layout_marginStart="24dp"
                    android:layout_marginTop="16dp"
                    android:layout_marginEnd="24dp"

                    app:layout_constraintEnd_toEndOf="parent"
                    app:layout_constraintStart_toStartOf="parent"
                    app:layout_constraintTop_toBottomOf="@+id/provide_info">

                    <androidx.constraintlayout.widget.ConstraintLayout
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:background="@drawable/blue_round_button"
                        android:paddingBottom="10dp"
                        android:id="@+id/layout_noti_Vehicle">

                        <View
                            android:id="@+id/divider1"
                            android:layout_width="0dp"
                            android:layout_height="0.3dp"
                            android:layout_marginTop="4dp"
                            android:background="#707070"
                            android:scrollbarThumbHorizontal="@color/colorPrimary"
                            app:layout_constraintEnd_toEndOf="parent"
                            app:layout_constraintHorizontal_bias="0.0"
                            app:layout_constraintStart_toStartOf="parent"
                            app:layout_constraintTop_toBottomOf="@+id/tv_InforCar" />


                        <TextView
                            android:id="@+id/tv_InforCar"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:layout_marginStart="24dp"
                            android:layout_marginTop="4dp"

                            android:text="Thông tin xe"
                            android:textColor="@color/white"
                            android:textSize="18sp"
                            app:layout_constraintStart_toStartOf="parent"
                            app:layout_constraintTop_toTopOf="parent" />

                        <LinearLayout
                            android:id="@+id/linearLayout"
                            android:layout_width="0dp"
                            android:layout_height="wrap_content"
                            android:layout_marginTop="8dp"
                            android:layout_marginEnd="24dp"
                            android:orientation="vertical"
                            app:layout_constraintEnd_toEndOf="@+id/divider1"
                            app:layout_constraintStart_toStartOf="@+id/tv_InforCar"
                            app:layout_constraintTop_toBottomOf="@id/divider1">

                            <LinearLayout
                                android:layout_width="match_parent"
                                android:layout_height="wrap_content"
                                android:orientation="horizontal"
                                android:paddingBottom="5dp">

                                <TextView
                                    android:id="@+id/txt_checkout_vehicle"
                                    android:layout_width="match_parent"
                                    android:layout_height="wrap_content"
                                    android:textColor="@color/white"
                                    android:text="Koenigseggs"
                                    android:textSize="18sp" />
                            </LinearLayout>

                            <LinearLayout
                                android:layout_width="match_parent"
                                android:layout_height="wrap_content"
                                android:layout_marginBottom="5dp"
                                android:orientation="horizontal">

                                <TextView
                                    android:id="@+id/gia"
                                    android:layout_width="75dp"
                                    android:layout_height="wrap_content"
                                    android:textColor="@color/white"
                                    android:text="Giá:" />

                                <TextView
                                    android:id="@+id/txt_checkout_price"
                                    android:layout_width="wrap_content"
                                    android:layout_height="wrap_content"
                                    android:paddingLeft="15dp"
                                    android:text="100.000(VNĐ)/Ngày"
                                    android:textColor="@color/white" />
                            </LinearLayout>

                            <LinearLayout
                                android:layout_width="match_parent"
                                android:layout_height="wrap_content"
                                android:layout_marginBottom="5dp"
                                android:orientation="horizontal">

                                <TextView
                                    android:id="@+id/noti_DiaDiem"
                                    android:layout_width="75dp"
                                    android:layout_height="wrap_content"
                                    android:text="Nơi đỗ xe:"

                                    android:textColor="@color/white" />

                                <TextView
                                    android:id="@+id/txt_checkout_address"
                                    android:layout_width="wrap_content"
                                    android:layout_height="wrap_content"
                                    android:paddingLeft="15dp"
                                    android:text="Đà Lạt"
                                    android:textColor="@color/white"/>
                            </LinearLayout>


                            <LinearLayout
                                android:layout_width="match_parent"
                                android:layout_height="wrap_content"
                                android:layout_marginBottom="5dp"
                                android:orientation="horizontal">

                                <TextView
                                    android:id="@+id/noti_pickup"
                                    android:layout_width="75dp"
                                    android:layout_height="wrap_content"
                                    android:text="Ngày nhận:"

                                    android:textColor="@color/white" />
                                <TextView
                                    android:id="@+id/txt_checkout_pickup"
                                    android:layout_width="wrap_content"
                                    android:layout_height="wrap_content"
                                    android:paddingLeft="15dp"
                                    android:text="12:00PM\t\tWeb, Dec 02"
                                    android:textColor="@color/white"
                                    tools:layout_editor_absoluteX="125dp"
                                    tools:layout_editor_absoluteY="269dp"
                                    />

                            </LinearLayout>

                            <LinearLayout
                                android:layout_width="match_parent"
                                android:layout_height="wrap_content"
                                android:layout_marginBottom="5dp"
                                android:orientation="horizontal">

                                <TextView
                                    android:id="@+id/noti_dropoff"
                                    android:layout_width="75dp"
                                    android:layout_height="wrap_content"
                                    android:text="Ngày trả:"

                                    android:textColor="@color/white" />

                                <TextView
                                    android:id="@+id/txt_checkout_dropoff"
                                    android:layout_width="wrap_content"
                                    android:layout_height="wrap_content"
                                    android:paddingLeft="15dp"
                                    android:text="03:00PM\t\tWeb, Dec 22"
                                    android:textColor="@color/white" />
                            </LinearLayout>
                        </LinearLayout>

                        <View
                            android:id="@+id/divider2"
                            android:layout_width="0dp"
                            android:layout_height="0.3dp"
                            android:layout_marginTop="8dp"
                            android:background="#707070"
                            android:scrollbarThumbHorizontal="@color/white"
                            app:layout_constraintEnd_toEndOf="parent"
                            app:layout_constraintHorizontal_bias="0.0"
                            app:layout_constraintStart_toStartOf="parent"
                            app:layout_constraintTop_toBottomOf="@+id/linearLayout" />

                        <LinearLayout
                            android:layout_width="0dp"
                            android:layout_height="wrap_content"
                            android:layout_marginTop="8dp"
                            android:layout_marginEnd="24dp"
                            android:orientation="vertical"
                            app:layout_constraintEnd_toEndOf="parent"
                            app:layout_constraintStart_toStartOf="@+id/tv_InforCar"
                            app:layout_constraintTop_toBottomOf="@+id/divider2">

                            <LinearLayout
                                android:layout_width="match_parent"
                                android:layout_height="wrap_content"
                                android:gravity="center_vertical"
                                android:orientation="horizontal">

                                <LinearLayout
                                    android:layout_width="match_parent"
                                    android:layout_height="wrap_content"
                                    android:layout_marginBottom="5dp"
                                    android:layout_weight="1"
                                    android:orientation="vertical">

                                    <TextView
                                        android:id="@+id/txtview_noti_totalText"
                                        android:layout_width="wrap_content"
                                        android:layout_height="wrap_content"
                                        android:layout_weight="1"
                                        android:textColor="@color/white"
                                        android:text="Tổng tiền cần thanh toán:" />

                                    <TextView
                                        android:id="@+id/txt_checkout_totalcost"
                                        android:layout_width="wrap_content"
                                        android:layout_height="wrap_content"
                                        android:layout_weight="1"
                                        android:textColor="@color/white"
                                        android:textSize="24sp"
                                        android:text="2.000.000 VNĐ"/>
                                </LinearLayout>
                            </LinearLayout>
                        </LinearLayout>
                    </androidx.constraintlayout.widget.ConstraintLayout>


                </androidx.cardview.widget.CardView>

                <androidx.appcompat.widget.AppCompatButton
                    android:id="@+id/btn_checkout_pay"
                    android:layout_width="@dimen/_260sdp"
                    android:layout_height="@dimen/buttonSize"
                    android:layout_marginTop="@dimen/_20sdp"
                    android:layout_marginBottom="@dimen/_16sdp"
                    android:layout_marginStart="@dimen/_20sdp"
                    android:layout_marginEnd="@dimen/_20sdp"
                    android:background="@drawable/round_card"
                    android:text="XÁC NHẬN VÀ THANH TOÁN"
                    android:textColor="@color/white"
                    android:textSize="@dimen/_18ssp"
                    app:layout_constraintBottom_toBottomOf="parent"
                    app:layout_constraintLeft_toLeftOf="parent"
                    app:layout_constraintTop_toBottomOf="@+id/Vehicle_info"/>

            </androidx.constraintlayout.widget.ConstraintLayout>
        </LinearLayout>
    </ScrollView>
</androidx.constraintlayout.widget.ConstraintLayout>
```

### src\main\res\layout\activity_profile.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/white">

    <!-- Nút quay lại -->
    <ImageView
        android:id="@+id/back_button"
        android:layout_width="32dp"
        android:layout_height="32dp"
        android:layout_marginStart="16dp"
        android:layout_marginTop="16dp"
        android:src="@drawable/ic_arrow_left"
        android:contentDescription="Back"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <!-- Tiêu đề -->
    <TextView
        android:id="@+id/tv_title"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="16dp"
        android:layout_marginTop="16dp"
        android:text="Cập nhật thông tin cá nhân"
        android:textSize="24sp"
        android:textStyle="bold"
        android:textColor="@color/text_title"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/back_button" />

    <!-- ScrollView chứa các trường nhập -->
    <ScrollView
        android:id="@+id/scroll_view"
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:layout_marginTop="16dp"
        android:layout_marginBottom="16dp"
        app:layout_constraintBottom_toTopOf="@id/btn_update"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/tv_title">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical"
            android:padding="16dp">

            <!-- Ảnh đại diện -->
            <de.hdodenhof.circleimageview.CircleImageView
                android:id="@+id/img_avatar_profile_input_fragment"
                android:layout_width="120dp"
                android:layout_height="120dp"
                android:layout_gravity="center"
                android:src="@drawable/ic_person"
                app:civ_border_color="@color/sky"
                app:civ_border_width="2dp" />

            <!-- Nút chỉnh sửa ảnh đại diện -->
            <ImageView
                android:id="@+id/edit_avatar"
                android:layout_width="32dp"
                android:layout_height="32dp"
                android:layout_gravity="center"
                android:layout_marginTop="8dp"
                android:src="@drawable/ic_edit"
                android:contentDescription="Edit Avatar" />

            <!-- Họ và tên -->
            <TextView
                android:id="@+id/tv_fullname_label"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="16dp"
                android:text="Họ và tên"
                android:textSize="16sp"
                android:textColor="@color/text_input_hint"
                android:fontFamily="@font/relay_roboto_flex_regular" />

            <EditText
                android:id="@+id/profile_input_fullname"
                android:layout_width="match_parent"
                android:layout_height="48dp"
                android:background="@drawable/background1_car_details"
                android:fontFamily="@font/relay_roboto_flex_regular"
                android:hint="Nhập họ và tên"
                android:inputType="textPersonName"
                android:paddingStart="16dp"
                android:paddingEnd="16dp"
                android:textSize="16sp" />

            <!-- Email -->
            <TextView
                android:id="@+id/tv_email_label"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="16dp"
                android:text="Email"
                android:textSize="16sp"
                android:textColor="@color/text_input_hint"
                android:fontFamily="@font/relay_roboto_flex_regular" />

            <EditText
                android:id="@+id/profile_input_email"
                android:layout_width="match_parent"
                android:layout_height="48dp"
                android:background="@drawable/background1_car_details"
                android:fontFamily="@font/relay_roboto_flex_regular"
                android:hint="Nhập email"
                android:inputType="textEmailAddress"
                android:paddingStart="16dp"
                android:paddingEnd="16dp"
                android:textSize="16sp"
                android:enabled="false" />

            <!-- Số điện thoại -->
            <TextView
                android:id="@+id/tv_phone_label"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="16dp"
                android:text="Số điện thoại"
                android:textSize="16sp"
                android:textColor="@color/text_input_hint"
                android:fontFamily="@font/relay_roboto_flex_regular" />

            <EditText
                android:id="@+id/profile_input_phone"
                android:layout_width="match_parent"
                android:layout_height="48dp"
                android:background="@drawable/background1_car_details"
                android:fontFamily="@font/relay_roboto_flex_regular"
                android:hint="Nhập số điện thoại"
                android:inputType="phone"
                android:paddingStart="16dp"
                android:paddingEnd="16dp"
                android:textSize="16sp"
                android:enabled="false" />

            <!-- Ngày sinh -->
            <TextView
                android:id="@+id/tv_birthday_label"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="16dp"
                android:text="Ngày sinh"
                android:textSize="16sp"
                android:textColor="@color/text_input_hint"
                android:fontFamily="@font/relay_roboto_flex_regular" />

            <Button
                android:id="@+id/profile_input_dateofbirth"
                android:layout_width="match_parent"
                android:layout_height="48dp"
                android:background="@drawable/background1_car_details"
                android:fontFamily="@font/relay_roboto_flex_regular"
                android:gravity="start|center_vertical"
                android:paddingStart="16dp"
                android:paddingEnd="16dp"
                android:text="Chọn ngày sinh"
                android:textColor="@color/text_title"
                android:textSize="16sp" />

            <!-- Địa chỉ -->
            <TextView
                android:id="@+id/tv_address_label"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="16dp"
                android:text="Địa chỉ"
                android:textSize="16sp"
                android:textColor="@color/text_input_hint"
                android:fontFamily="@font/relay_roboto_flex_regular" />

            <EditText
                android:id="@+id/profile_input_address"
                android:layout_width="match_parent"
                android:layout_height="48dp"
                android:background="@drawable/background1_car_details"
                android:fontFamily="@font/relay_roboto_flex_regular"
                android:hint="Nhập địa chỉ"
                android:inputType="textPostalAddress"
                android:paddingStart="16dp"
                android:paddingEnd="16dp"
                android:textSize="16sp" />

            <!-- Thành phố -->
            <TextView
                android:id="@+id/tv_city_label"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="16dp"
                android:text="Thành phố"
                android:textSize="16sp"
                android:textColor="@color/text_input_hint"
                android:fontFamily="@font/relay_roboto_flex_regular" />

            <EditText
                android:id="@+id/profile_input_city"
                android:layout_width="match_parent"
                android:layout_height="48dp"
                android:background="@drawable/background1_car_details"
                android:fontFamily="@font/relay_roboto_flex_regular"
                android:hint="Nhập thành phố"
                android:inputType="text"
                android:paddingStart="16dp"
                android:paddingEnd="16dp"
                android:textSize="16sp" />

            <!-- Mô tả -->
            <TextView
                android:id="@+id/tv_description_label"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="16dp"
                android:text="Mô tả bản thân"
                android:textSize="16sp"
                android:textColor="@color/text_input_hint"
                android:fontFamily="@font/relay_roboto_flex_regular" />

            <EditText
                android:id="@+id/profile_input_description"
                android:layout_width="match_parent"
                android:layout_height="100dp"
                android:background="@drawable/background1_car_details"
                android:fontFamily="@font/relay_roboto_flex_regular"
                android:hint="Nhập mô tả (ví dụ: sở thích, nghề nghiệp)"
                android:inputType="textMultiLine"
                android:padding="16dp"
                android:textSize="16sp" />

            <!-- Vai trò hiện tại (chỉ hiển thị) -->
            <TextView
                android:id="@+id/tv_role_label"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="16dp"
                android:text="Vai trò"
                android:textSize="16sp"
                android:textColor="@color/text_input_hint"
                android:fontFamily="@font/relay_roboto_flex_regular" />

            <TextView
                android:id="@+id/tv_current_role"
                android:layout_width="match_parent"
                android:layout_height="48dp"
                android:background="@drawable/background1_car_details"
                android:fontFamily="@font/relay_roboto_flex_regular"
                android:paddingStart="16dp"
                android:paddingEnd="16dp"
                android:textSize="16sp"
                android:textColor="@color/text_title"
                tools:text="Khách hàng" />

            <!-- Trạng thái xác minh (chỉ hiển thị) -->
            <TextView
                android:id="@+id/tv_verification_label"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="16dp"
                android:text="Trạng thái xác minh"
                android:textSize="16sp"
                android:textColor="@color/text_input_hint"
                android:fontFamily="@font/relay_roboto_flex_regular" />

            <TextView
                android:id="@+id/tv_verification_status"
                android:layout_width="match_parent"
                android:layout_height="48dp"
                android:background="@drawable/background1_car_details"
                android:fontFamily="@font/relay_roboto_flex_regular"
                android:paddingStart="16dp"
                android:paddingEnd="16dp"
                android:textSize="16sp"
                android:textColor="@color/text_title"
                tools:text="Chưa xác minh" />

            <!-- Trạng thái tài khoản (chỉ hiển thị) -->
            <TextView
                android:id="@+id/tv_status_label"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="16dp"
                android:text="Trạng thái tài khoản"
                android:textSize="16sp"
                android:textColor="@color/text_input_hint"
                android:fontFamily="@font/relay_roboto_flex_regular" />

            <TextView
                android:id="@+id/tv_status"
                android:layout_width="match_parent"
                android:layout_height="48dp"
                android:background="@drawable/background1_car_details"
                android:fontFamily="@font/relay_roboto_flex_regular"
                android:paddingStart="16dp"
                android:paddingEnd="16dp"
                android:textSize="16sp"
                android:textColor="@color/text_title"
                tools:text="Hoạt động" />

        </LinearLayout>
    </ScrollView>

    <!-- Nút cập nhật -->
    <Button
        android:id="@+id/btn_update"
        android:layout_width="0dp"
        android:layout_height="48dp"
        android:layout_marginStart="16dp"
        android:layout_marginEnd="16dp"
        android:layout_marginBottom="16dp"
        android:background="@drawable/blue_round_button"
        android:text="Lưu thông tin"
        android:textColor="@color/white"
        android:textSize="18sp"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintBottom_toTopOf="@id/update_cccd"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent" />

    <!-- Nút cập nhật CCCD -->
    <TextView
        android:id="@+id/update_cccd"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginEnd="16dp"
        android:layout_marginBottom="16dp"
        android:text="Cập nhật căn cước công dân"
        android:textColor="@color/sky"
        android:textSize="16sp"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

</androidx.constraintlayout.widget.ConstraintLayout>

```

### src\main\res\layout\activity_profile_management.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/white">

    <!-- Nút quay lại -->
    <ImageView
        android:id="@+id/back_button"
        android:layout_width="32dp"
        android:layout_height="32dp"
        android:layout_marginStart="16dp"
        android:layout_marginTop="16dp"
        android:src="@drawable/ic_arrow_left"
        android:contentDescription="Back"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <!-- Tiêu đề -->
    <TextView
        android:id="@+id/tv_title"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="16dp"
        android:layout_marginTop="16dp"
        android:text="Hồ sơ cá nhân"
        android:textSize="24sp"
        android:textStyle="bold"
        android:textColor="@color/text_title"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/back_button" />

    <!-- ScrollView chứa thông tin -->
    <ScrollView
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:layout_marginTop="16dp"
        android:layout_marginBottom="16dp"
        app:layout_constraintBottom_toTopOf="@id/btn_update"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/tv_title">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical"
            android:padding="16dp">

            <!-- Ảnh đại diện -->
            <de.hdodenhof.circleimageview.CircleImageView
                android:id="@+id/img_avatar"
                android:layout_width="120dp"
                android:layout_height="120dp"
                android:layout_gravity="center"
                android:src="@drawable/ic_person"
                app:civ_border_color="@color/sky"
                app:civ_border_width="2dp" />

            <!-- Họ và tên -->
            <TextView
                android:id="@+id/tv_fullname_label"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="16dp"
                android:text="Họ và tên"
                android:textSize="16sp"
                android:textColor="@color/text_input_hint"
                android:fontFamily="@font/relay_roboto_flex_regular" />

            <TextView
                android:id="@+id/fullname"
                android:layout_width="match_parent"
                android:layout_height="48dp"
                android:background="@drawable/background1_car_details"
                android:fontFamily="@font/relay_roboto_flex_regular"
                android:paddingStart="16dp"
                android:paddingEnd="16dp"
                android:textSize="16sp"
                android:textColor="@color/text_title"
                tools:text="Nguyễn Văn A" />

            <!-- Email -->
            <TextView
                android:id="@+id/tv_email_label"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="16dp"
                android:text="Email"
                android:textSize="16sp"
                android:textColor="@color/text_input_hint"
                android:fontFamily="@font/relay_roboto_flex_regular" />

            <TextView
                android:id="@+id/email"
                android:layout_width="match_parent"
                android:layout_height="48dp"
                android:background="@drawable/background1_car_details"
                android:fontFamily="@font/relay_roboto_flex_regular"
                android:paddingStart="16dp"
                android:paddingEnd="16dp"
                android:textSize="16sp"
                android:textColor="@color/text_title"
                tools:text="example@gmail.com" />

            <!-- Số điện thoại -->
            <TextView
                android:id="@+id/tv_phone_label"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="16dp"
                android:text="Số điện thoại"
                android:textSize="16sp"
                android:textColor="@color/text_input_hint"
                android:fontFamily="@font/relay_roboto_flex_regular" />

            <TextView
                android:id="@+id/phone"
                android:layout_width="match_parent"
                android:layout_height="48dp"
                android:background="@drawable/background1_car_details"
                android:fontFamily="@font/relay_roboto_flex_regular"
                android:paddingStart="16dp"
                android:paddingEnd="16dp"
                android:textSize="16sp"
                android:textColor="@color/text_title"
                tools:text="0123456789" />

            <!-- Địa chỉ -->
            <TextView
                android:id="@+id/tv_address_label"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="16dp"
                android:text="Địa chỉ"
                android:textSize="16sp"
                android:textColor="@color/text_input_hint"
                android:fontFamily="@font/relay_roboto_flex_regular" />

            <TextView
                android:id="@+id/address"
                android:layout_width="match_parent"
                android:layout_height="48dp"
                android:background="@drawable/background1_car_details"
                android:fontFamily="@font/relay_roboto_flex_regular"
                android:paddingStart="16dp"
                android:paddingEnd="16dp"
                android:textSize="16sp"
                android:textColor="@color/text_title"
                tools:text="123 Đường ABC" />

            <!-- Thành phố -->
            <TextView
                android:id="@+id/tv_city_label"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="16dp"
                android:text="Thành phố"
                android:textSize="16sp"
                android:textColor="@color/text_input_hint"
                android:fontFamily="@font/relay_roboto_flex_regular" />

            <TextView
                android:id="@+id/city"
                android:layout_width="match_parent"
                android:layout_height="48dp"
                android:background="@drawable/background1_car_details"
                android:fontFamily="@font/relay_roboto_flex_regular"
                android:paddingStart="16dp"
                android:paddingEnd="16dp"
                android:textSize="16sp"
                android:textColor="@color/text_title"
                tools:text="Hồ Chí Minh" />

            <!-- Ngày sinh -->
            <TextView
                android:id="@+id/tv_birthday_label"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="16dp"
                android:text="Ngày sinh"
                android:textSize="16sp"
                android:textColor="@color/text_input_hint"
                android:fontFamily="@font/relay_roboto_flex_regular" />

            <TextView
                android:id="@+id/birthday"
                android:layout_width="match_parent"
                android:layout_height="48dp"
                android:background="@drawable/background1_car_details"
                android:fontFamily="@font/relay_roboto_flex_regular"
                android:paddingStart="16dp"
                android:paddingEnd="16dp"
                android:textSize="16sp"
                android:textColor="@color/text_title"
                tools:text="01/01/1990" />

            <!-- CCCD mặt trước -->
            <TextView
                android:id="@+id/tv_front_cccd_label"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="16dp"
                android:text="CCCD mặt trước"
                android:textSize="16sp"
                android:textColor="@color/text_input_hint"
                android:fontFamily="@font/relay_roboto_flex_regular" />

            <ImageView
                android:id="@+id/img_front_CCCD"
                android:layout_width="match_parent"
                android:layout_height="200dp"
                android:layout_marginTop="8dp"
                android:scaleType="centerCrop"
                android:background="@drawable/rounded_corner"
                android:clipToOutline="true"
                android:contentDescription="CCCD Front"
                android:src="@drawable/input_image" />

            <!-- CCCD mặt sau -->
            <TextView
                android:id="@+id/tv_behind_cccd_label"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="16dp"
                android:text="CCCD mặt sau"
                android:textSize="16sp"
                android:textColor="@color/text_input_hint"
                android:fontFamily="@font/relay_roboto_flex_regular" />

            <ImageView
                android:id="@+id/img_behind_CCCD"
                android:layout_width="match_parent"
                android:layout_height="200dp"
                android:layout_marginTop="8dp"
                android:scaleType="centerCrop"
                android:background="@drawable/rounded_corner"
                android:clipToOutline="true"
                android:contentDescription="CCCD Behind"
                android:src="@drawable/input_image" />

            <!-- Bằng lái xe -->
            <TextView
                android:id="@+id/tv_license_label"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="16dp"
                android:text="Bằng lái xe"
                android:textSize="16sp"
                android:textColor="@color/text_input_hint"
                android:fontFamily="@font/relay_roboto_flex_regular" />

            <ImageView
                android:id="@+id/img_license"
                android:layout_width="match_parent"
                android:layout_height="200dp"
                android:layout_marginTop="8dp"
                android:scaleType="centerCrop"
                android:background="@drawable/rounded_corner"
                android:clipToOutline="true"
                android:contentDescription="Driver's License"
                android:src="@drawable/input_image" />

        </LinearLayout>
    </ScrollView>

    <!-- Nút cập nhật -->
    <Button
        android:id="@+id/btn_update"
        android:layout_width="0dp"
        android:layout_height="48dp"
        android:layout_marginStart="16dp"
        android:layout_marginEnd="16dp"
        android:layout_marginBottom="16dp"
        android:background="@drawable/blue_round_button"
        android:text="Chỉnh sửa hồ sơ"
        android:textColor="@color/white"
        android:textSize="18sp"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent" />

</androidx.constraintlayout.widget.ConstraintLayout>

```

### src\main\res\layout\activity_register.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/white">

    <!-- Back Button -->
    <ImageButton
        android:id="@+id/btn_back"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="16dp"
        android:layout_marginTop="16dp"
        android:src="@drawable/ic_arrow_left"
        android:background="?attr/selectableItemBackgroundBorderless"
        android:contentDescription="Quay lại"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <!-- ScrollView for content -->
    <ScrollView
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:fillViewport="true"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/btn_back">

        <androidx.constraintlayout.widget.ConstraintLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content">

            <!-- Background Image -->
            <ImageView
                android:id="@+id/background_image"
                android:layout_width="0dp"
                android:layout_height="320dp"
                android:src="@drawable/rectangle_195_signup"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintTop_toTopOf="parent" />

            <!-- Header: Logo and Title -->
            <LinearLayout
                android:id="@+id/header"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_marginStart="16dp"
                android:layout_marginTop="16dp"
                android:layout_marginEnd="16dp"
                android:gravity="center"
                android:orientation="vertical"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintTop_toTopOf="parent">

                <ImageView
                    android:id="@+id/logo"
                    android:layout_width="99dp"
                    android:layout_height="67dp"
                    android:contentDescription="@string/app_name"
                    android:src="@drawable/screenshot_2025_04_03_154923_removebg_preview_1" />

                <TextView
                    android:id="@+id/title"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="8dp"
                    android:fontFamily="@font/relay_roboto_flex_regular"
                    android:text="TẠO TÀI KHOẢN"
                    android:textColor="@color/text_title"
                    android:textSize="30sp"
                    android:textStyle="bold"
                    android:gravity="center"
                    android:textAlignment="center" />
            </LinearLayout>

            <!-- Instruction Text -->
            <TextView
                android:id="@+id/instruction"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_marginStart="16dp"
                android:layout_marginTop="8dp"
                android:layout_marginEnd="16dp"
                android:fontFamily="@font/relay_roboto_flex_regular"
                android:text="Điền thông tin của bạn tại đây nhé!"
                android:textColor="@color/text_instruction"
                android:textSize="17.51sp"
                android:gravity="center"
                android:textAlignment="center"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintTop_toBottomOf="@id/header" />

            <!-- Input Fields -->
            <LinearLayout
                android:id="@+id/input_container"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_marginStart="24dp"
                android:layout_marginTop="16dp"
                android:layout_marginEnd="24dp"
                android:orientation="vertical"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintTop_toBottomOf="@id/instruction">

                <!-- Username -->
                <EditText
                    android:id="@+id/username_input"
                    android:layout_width="match_parent"
                    android:layout_height="48dp"
                    android:layout_marginBottom="8dp"
                    android:background="@drawable/field_signup"
                    android:fontFamily="@font/relay_roboto_flex_regular"
                    android:hint="Tên đăng nhập"
                    android:paddingStart="16dp"
                    android:paddingEnd="16dp"
                    android:textColor="@color/black"
                    android:textColorHint="@color/text_input_hint"
                    android:textSize="17.51sp"
                    android:drawableStart="@drawable/vector4_signup"
                    android:drawablePadding="8dp" />

                <!-- Phone Number -->
                <EditText
                    android:id="@+id/phone_input"
                    android:layout_width="match_parent"
                    android:layout_height="48dp"
                    android:layout_marginBottom="8dp"
                    android:background="@drawable/field1_signup"
                    android:fontFamily="@font/relay_roboto_flex_regular"
                    android:hint="Số điện thoại"
                    android:inputType="phone"
                    android:paddingStart="16dp"
                    android:paddingEnd="16dp"
                    android:textColor="@color/black"
                    android:textColorHint="@color/text_input_hint"
                    android:textSize="17.51sp"
                    android:drawableStart="@drawable/vector5_signup"
                    android:drawablePadding="8dp" />

                <!-- Email -->
                <EditText
                    android:id="@+id/email_input"
                    android:layout_width="match_parent"
                    android:layout_height="48dp"
                    android:layout_marginBottom="8dp"
                    android:background="@drawable/field2_signup"
                    android:fontFamily="@font/relay_roboto_flex_regular"
                    android:hint="Email"
                    android:inputType="textEmailAddress"
                    android:paddingStart="16dp"
                    android:paddingEnd="16dp"
                    android:textColor="@color/black"
                    android:textColorHint="@color/text_input_hint"
                    android:textSize="17.51sp"
                    android:drawableStart="@drawable/vector6_signup"
                    android:drawablePadding="8dp" />

                <!-- Password -->
                <EditText
                    android:id="@+id/password_input"
                    android:layout_width="match_parent"
                    android:layout_height="48dp"
                    android:layout_marginBottom="8dp"
                    android:background="@drawable/field3_signup"
                    android:fontFamily="@font/relay_roboto_flex_regular"
                    android:hint="Mật khẩu"
                    android:inputType="textPassword"
                    android:paddingStart="16dp"
                    android:paddingEnd="16dp"
                    android:textColor="@color/black"
                    android:textColorHint="@color/text_input_hint"
                    android:textSize="17.51sp"
                    android:drawableStart="@drawable/vector10_signup"
                    android:drawablePadding="8dp" />

                <!-- Confirm Password -->
                <EditText
                    android:id="@+id/confirm_password_input"
                    android:layout_width="match_parent"
                    android:layout_height="48dp"
                    android:layout_marginBottom="8dp"
                    android:background="@drawable/field4_signup"
                    android:fontFamily="@font/relay_roboto_flex_regular"
                    android:hint="Nhập lại mật khẩu"
                    android:inputType="textPassword"
                    android:paddingStart="16dp"
                    android:paddingEnd="16dp"
                    android:textColor="@color/black"
                    android:textColorHint="@color/text_input_hint"
                    android:textSize="17.51sp"
                    android:drawableStart="@drawable/vector10_signup"
                    android:drawablePadding="8dp" />
            </LinearLayout>

            <!-- Buttons Container -->
            <LinearLayout
                android:id="@+id/buttons_container"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_marginStart="24dp"
                android:layout_marginTop="16dp"
                android:layout_marginEnd="24dp"
                android:layout_marginBottom="16dp"
                android:orientation="vertical"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintTop_toBottomOf="@id/input_container">

                <!-- Register Button -->
                <Button
                    android:id="@+id/btn_signUp2"
                    style="@style/AppButton"
                    android:layout_width="match_parent"
                    android:layout_height="48dp"
                    android:layout_marginBottom="16dp"
                    android:background="@drawable/bg_gradient_register"
                    android:fontFamily="@font/relay_roboto_flex_regular"
                    android:fontWeight="700"
                    android:text="Đăng ký"
                    android:textColor="@color/white"
                    android:textSize="22sp" />

                <!-- Divider -->
                <TextView
                    android:id="@+id/divider"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="16dp"
                    android:layout_marginBottom="16dp"
                    android:fontFamily="@font/relay_roboto_flex_regular"
                    android:gravity="center"
                    android:text="Hoặc"
                    android:textColor="@color/or_text"
                    android:textSize="17.51sp"
                    android:textStyle="bold"
                    app:drawableBottomCompat="@drawable/blue_line" />

                <!-- Facebook Login -->
                <LinearLayout
                    android:id="@+id/facebook_button"
                    android:layout_width="match_parent"
                    android:layout_height="48dp"
                    android:theme="@style/Theme.CarRenting.NoActionBar"
                    android:background="@drawable/bg_gradient_social"
                    android:backgroundTint="@null"
                    android:backgroundTintMode="src_over"
                    android:gravity="center"
                    android:orientation="horizontal"
                    android:padding="8dp">

                    <ImageView
                        android:id="@+id/facebook_icon"
                        android:layout_width="26dp"
                        android:layout_height="24dp"
                        android:src="@drawable/vector15_signup" />

                    <TextView
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:layout_marginStart="8dp"
                        android:fontFamily="@font/relay_roboto_flex_regular"
                        android:text="Đăng nhập với Facebook"
                        android:textColor="@color/white"
                        android:textSize="17.51sp" />
                </LinearLayout>

                <!-- Google Login -->
                <LinearLayout
                    android:id="@+id/google_button"
                    android:layout_width="match_parent"
                    android:layout_height="48dp"
                    android:layout_marginTop="8dp"
                    android:theme="@style/Theme.CarRenting.NoActionBar"
                    android:background="@drawable/bg_gradient_social"
                    android:backgroundTint="@null"
                    android:backgroundTintMode="src_over"
                    android:gravity="center"
                    android:orientation="horizontal"
                    android:padding="8dp">

                    <ImageView
                        android:id="@+id/google_icon"
                        android:layout_width="22dp"
                        android:layout_height="20dp"
                        android:src="@drawable/google_1" />

                    <TextView
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:layout_marginStart="8dp"
                        android:fontFamily="@font/relay_roboto_flex_regular"
                        android:text="Đăng nhập với Google"
                        android:textColor="@color/white"
                        android:textSize="17.51sp" />
                </LinearLayout>
            </LinearLayout>

        </androidx.constraintlayout.widget.ConstraintLayout>
    </ScrollView>

</androidx.constraintlayout.widget.ConstraintLayout>

```

### src\main\res\layout\activity_role_selection.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:id="@+id/layout_role_selection"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:gravity="center"
    android:padding="24dp"
    android:background="@color/white">

    <Button
        android:id="@+id/btn_customer"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Thuê xe"
        android:textAllCaps="false"
        android:textSize="18sp"
        android:layout_marginBottom="24dp"
        android:backgroundTint="@color/sky"
        android:textColor="@android:color/white" />

    <Button
        android:id="@+id/btn_owner"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Chủ Xe"
        android:textAllCaps="false"
        android:textSize="18sp"
        android:backgroundTint="@color/sky"
        android:textColor="@android:color/white" />
</LinearLayout>

```

### src\main\res\layout\activity_schedule_select.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:padding="16dp"
    android:background="@color/white"
    tools:context=".Service.Booking.ScheduleSelect">

    <!-- Back Button -->
    <ImageView
        android:id="@+id/back_button"
        android:layout_width="24dp"
        android:layout_height="24dp"
        android:src="@drawable/ic_arrow_left"
        android:contentDescription="back"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <!-- Title -->
    <TextView
        android:id="@+id/tv_title"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="@string/select_rental_period"
        android:textSize="20sp"
        android:textStyle="bold"
        android:textColor="@color/text_title"
        android:layout_marginTop="16dp"
        app:layout_constraintTop_toBottomOf="@id/back_button"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

    <!-- Start Date Selection -->
    <TextView
        android:id="@+id/tv_select_start_date"
        android:layout_width="0dp"
        android:layout_height="48dp"
        android:text="@string/select_start_date"
        android:textSize="16sp"
        android:gravity="center_vertical"
        android:padding="12dp"
        android:background="@drawable/rectangle_quarter_radius"
        android:layout_marginTop="24dp"
        app:layout_constraintTop_toBottomOf="@id/tv_title"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        tools:text="01/01/2025" />

    <!-- Start Time Selection -->
    <TextView
        android:id="@+id/tv_select_start_time"
        android:layout_width="0dp"
        android:layout_height="48dp"
        android:text="@string/select_start_time"
        android:textSize="16sp"
        android:gravity="center_vertical"
        android:padding="12dp"
        android:background="@drawable/rectangle_quarter_radius"
        android:layout_marginTop="8dp"
        app:layout_constraintTop_toBottomOf="@id/tv_select_start_date"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        tools:text="08:00" />

    <!-- End Date Selection -->
    <TextView
        android:id="@+id/tv_select_end_date"
        android:layout_width="0dp"
        android:layout_height="48dp"
        android:text="@string/select_end_date"
        android:textSize="16sp"
        android:gravity="center_vertical"
        android:padding="12dp"
        android:background="@drawable/rectangle_quarter_radius"
        android:layout_marginTop="16dp"
        app:layout_constraintTop_toBottomOf="@id/tv_select_start_time"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        tools:text="03/01/2025" />

    <!-- End Time Selection -->
    <TextView
        android:id="@+id/tv_select_end_time"
        android:layout_width="0dp"
        android:layout_height="48dp"
        android:text="@string/select_end_time"
        android:textSize="16sp"
        android:gravity="center_vertical"
        android:padding="12dp"
        android:background="@drawable/rectangle_quarter_radius"
        android:layout_marginTop="8dp"
        app:layout_constraintTop_toBottomOf="@id/tv_select_end_date"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        tools:text="17:00" />

    <!-- Total Days -->
    <TextView
        android:id="@+id/tv_total_days"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:text="@string/total_days"
        android:textSize="16sp"
        android:padding="12dp"
        android:layout_marginTop="16dp"
        android:textColor="@color/text_input_hint"
        app:layout_constraintTop_toBottomOf="@id/tv_select_end_time"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        tools:text="Tổng số ngày: 3" />

    <!-- Total Price -->
    <TextView
        android:id="@+id/tv_total_price"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:text="@string/total_price"
        android:textSize="16sp"
        android:padding="12dp"
        android:layout_marginTop="8dp"
        android:textColor="@color/text_input_hint"
        app:layout_constraintTop_toBottomOf="@id/tv_total_days"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        tools:text="Tổng giá: 1.500.000 VNĐ" />

    <!-- Confirm Button -->
    <Button
        android:id="@+id/btn_confirm"
        style="@style/AppButton"
        android:layout_width="0dp"
        android:layout_height="48dp"
        android:text="@string/confirm"
        android:textSize="16sp"
        android:background="@drawable/bg_gradient_splash_button"
        android:layout_marginTop="24dp"
        android:layout_marginBottom="16dp"
        app:layout_constraintTop_toBottomOf="@id/tv_total_price"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintBottom_toBottomOf="parent" />

</androidx.constraintlayout.widget.ConstraintLayout>

```

### src\main\res\layout\activity_sign_in.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/white">

    <!-- Logo -->
    <ImageView
        android:id="@+id/logo"
        android:layout_width="99dp"
        android:layout_height="67dp"
        android:layout_marginTop="32dp"
        android:contentDescription="@string/app_name"
        android:src="@drawable/screenshot_2025_04_03_154923_removebg_preview_1"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <!-- Title: ĐĂNG NHẬP -->
    <TextView
        android:id="@+id/title_login"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="16dp"
        android:fontFamily="@font/relay_roboto_flex_regular"
        android:fontWeight="700"
        android:text="ĐĂNG NHẬP"
        android:textColor="@color/sky"
        android:textSize="30sp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/logo" />

    <!-- Email/Username Input -->
    <EditText
        android:id="@+id/email"
        android:layout_width="0dp"
        android:layout_height="48dp"
        android:layout_marginStart="20dp"
        android:layout_marginTop="32dp"
        android:layout_marginEnd="20dp"
        android:background="@drawable/field"
        android:drawableStart="@drawable/vector1"
        android:drawablePadding="8dp"
        android:fontFamily="@font/relay_roboto_flex_regular"
        android:hint="Tên đăng nhập"
        android:inputType="textEmailAddress"
        android:paddingStart="16dp"
        android:paddingEnd="16dp"
        android:textColor="@color/sky"
        android:textColorHint="@color/gray"
        android:textSize="17sp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/title_login" />

    <!-- Password Input -->
    <EditText
        android:id="@+id/password"
        android:layout_width="0dp"
        android:layout_height="48dp"
        android:layout_marginStart="20dp"
        android:layout_marginTop="16dp"
        android:layout_marginEnd="20dp"
        android:background="@drawable/field1"
        android:drawableStart="@drawable/vector2"
        android:drawablePadding="8dp"
        android:fontFamily="@font/relay_roboto_flex_regular"
        android:hint="Mật khẩu"
        android:inputType="textPassword"
        android:paddingStart="16dp"
        android:paddingEnd="16dp"
        android:textColor="@color/sky"
        android:textColorHint="@color/gray"
        android:textSize="17sp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/email" />

    <!-- Forgot Password -->
    <TextView
        android:id="@+id/btnForgot"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="16dp"
        android:layout_marginEnd="20dp"
        android:fontFamily="@font/relay_roboto_flex_regular"
        android:text="Quên mật khẩu?"
        android:textColor="@color/sky"
        android:textSize="17sp"
        android:textStyle="italic"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toBottomOf="@id/password" />

    <!-- Sign In Button -->
    <Button
        android:id="@+id/btnSignIn"
        style="@style/AppButton"
        android:layout_width="0dp"
        android:layout_height="48dp"
        android:layout_marginStart="20dp"
        android:layout_marginTop="24dp"
        android:layout_marginEnd="20dp"
        android:background="@drawable/bg_gradient_login"
        android:fontFamily="@font/relay_roboto_flex_regular"
        android:fontWeight="700"
        android:text="Đăng nhập"
        android:textColor="@color/white"
        android:textSize="22sp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/btnForgot" />

    <!-- Sign Up Button -->
    <Button
        android:id="@+id/btnSignUp"
        style="@style/AppButton"
        android:layout_width="0dp"
        android:layout_height="48dp"
        android:layout_marginStart="20dp"
        android:layout_marginTop="16dp"
        android:layout_marginEnd="20dp"
        android:background="@drawable/bg_gradient_register"
        android:fontFamily="@font/relay_roboto_flex_regular"
        android:fontWeight="700"
        android:text="Đăng ký ngay"
        android:textColor="@color/white"
        android:textSize="22sp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/btnSignIn" />

    <!-- Separator: Hoặc -->
    <TextView
        android:id="@+id/orSeparator"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="24dp"
        android:fontFamily="@font/relay_roboto_flex_regular"
        android:fontWeight="600"
        android:text="Hoặc"
        android:textColor="@color/sky"
        android:textSize="17sp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/btnSignUp" />

    <!-- Facebook Sign-In Button -->
    <LinearLayout
        android:id="@+id/btn_facebook_signIn"
        android:layout_width="0dp"
        android:layout_height="48dp"
        android:layout_marginStart="20dp"
        android:layout_marginTop="16dp"
        android:layout_marginEnd="20dp"
        android:background="@drawable/bg_gradient_social"
        android:backgroundTint="@null"
        android:clickable="true"
        android:focusable="true"
        android:gravity="center"
        android:orientation="horizontal"
        android:padding="8dp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/orSeparator" >

        <ImageView
            android:layout_width="26dp"
            android:layout_height="24dp"
            android:src="@drawable/vector5"
            tools:ignore="ContentDescription" />

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:fontFamily="@font/relay_roboto_flex_regular"
            android:fontWeight="600"
            android:text="Đăng nhập với Facebook"
            android:textColor="@color/white"
            android:textSize="17.51sp" />
    </LinearLayout>

    <!-- Google Sign-In Button -->
    <LinearLayout
        android:id="@+id/btn_GGsignIn"
        android:layout_width="0dp"
        android:layout_height="48dp"
        android:layout_marginStart="20dp"
        android:layout_marginTop="8dp"
        android:layout_marginEnd="20dp"
        android:background="@drawable/bg_gradient_social"
        android:backgroundTint="@null"
        android:clickable="true"
        android:focusable="true"
        android:gravity="center"
        android:orientation="horizontal"
        android:padding="8dp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/btn_facebook_signIn">

        <ImageView
            android:layout_width="22dp"
            android:layout_height="20dp"
            android:src="@drawable/google_1"
            tools:ignore="ContentDescription" />

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:fontFamily="@font/relay_roboto_flex_regular"
            android:fontWeight="600"
            android:text="Đăng nhập với Google"
            android:textColor="@color/white"
            android:textSize="17.51sp" />
    </LinearLayout>

</androidx.constraintlayout.widget.ConstraintLayout>
```

### src\main\res\layout\activity_splash.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.viewpager2.widget.ViewPager2
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:id="@+id/splash_viewpager"
    android:layout_width="match_parent"
    android:layout_height="match_parent" />
```

### src\main\res\layout\activity_start_app.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/constraintLayout2"
    android:layout_width="match_parent"
    android:layout_height="wrap_content">

    <com.denzcoskun.imageslider.ImageSlider
        android:id="@+id/imageView3"
        android:layout_width="wrap_content"
        android:layout_height="@dimen/_190sdp"
        app:iss_auto_cycle="true"
        app:iss_period="1000"
        app:iss_delay="0"
        android:layout_marginStart="@dimen/_100sdp"
        android:layout_marginTop="@dimen/_64sdp"
        android:layout_marginEnd="@dimen/_100sdp"
        android:layout_marginBottom="@dimen/_28sdp"
        app:layout_constraintBottom_toTopOf="@+id/textView2"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"

        />

    <TextView
        android:id="@+id/textView2"
        android:layout_width="@dimen/_277sdp"
        android:layout_height="@dimen/_58sdp"
        android:layout_marginStart="@dimen/_11sdp"
        android:layout_marginTop="@dimen/_68sdp"
        android:layout_marginEnd="@dimen/_11sdp"
        android:gravity="center_horizontal"
        android:shadowColor="#40000000"
        android:shadowDx="0"
        android:shadowDy="4"
        android:shadowRadius="4"
        android:text="RENTOR"
        android:textColor="@color/sky"
        android:textSize="48sp"
        android:textStyle="bold"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/imageView3"
        tools:ignore="HardcodedText" />

    <Button
        android:id="@+id/btn_startApp"
        android:layout_width="@dimen/widthLarge"
        android:layout_height="@dimen/_40sdp"
        android:layout_marginTop="@dimen/_120sdp"
        android:layout_marginBottom="@dimen/_70sdp"
        android:background="@drawable/blue_round_button"
        android:backgroundTint="@color/sky"
        android:gravity="left|center_vertical"
        android:paddingLeft="@dimen/_20ssp"
        android:text="@string/getStarted"
        android:textColor="@color/white"
        app:backgroundTint="@color/sky"
        app:icon="@drawable/icon_next"
        app:iconGravity="end"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/textView2"
        app:layout_constraintVertical_bias="1.0"
        tools:ignore="RtlHardcoded,RtlSymmetry" />

</androidx.constraintlayout.widget.ConstraintLayout>
```

### src\main\res\layout\activity_update_password.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".Service.UserAuthentication.UpdatePassword">
    <View
        android:id="@+id/view2"
        android:layout_width="match_parent"
        android:layout_height="@dimen/_175sdp"
        android:background="@drawable/rectangle_quarter_radius"
        android:backgroundTint="@color/sky"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <TextView
        android:id="@+id/textView5"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="@dimen/_32sdp"
        android:text="Thay đổi mật khẩu"
        android:textColor="@color/sunflower"
        android:textSize="@dimen/_18ssp"
        android:textStyle="bold"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.24"
        app:layout_constraintStart_toStartOf="@+id/view2"
        app:layout_constraintTop_toTopOf="@+id/view2"
        tools:ignore="HardcodedText" />

    <TextView
        android:id="@+id/textView6"
        android:layout_width="@dimen/_250sdp"
        android:layout_height="@dimen/_40sdp"
        android:layout_marginTop="@dimen/_24sdp"
        android:layout_marginEnd="@dimen/_100sdp"
        android:text="Nhập các thông tin bên dưới!"
        android:textColor="@color/white"
        android:textSize="@dimen/_12ssp"
        android:textStyle="normal"
        app:layout_constraintEnd_toEndOf="@+id/view2"
        app:layout_constraintHorizontal_bias="0.0"
        app:layout_constraintStart_toStartOf="@+id/textView5"
        app:layout_constraintTop_toBottomOf="@+id/textView5"
        tools:ignore="HardcodedText" />

    <ImageView
        android:id="@+id/imageView2"
        android:layout_width="@dimen/_75sdp"
        android:layout_height="@dimen/_30sdp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/textView6"
        app:srcCompat="@drawable/create_account_arrow" />

    <View
        android:id="@+id/view3"
        android:layout_width="@dimen/_300sdp"
        android:layout_height="@dimen/_475sdp"
        android:layout_marginStart="@dimen/_25sdp"
        android:layout_marginTop="@dimen/_35sdp"
        android:layout_marginEnd="@dimen/_25sdp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/view2" />

    <com.google.android.material.textfield.TextInputLayout
        android:id="@+id/edtTxtPasswordAgainLayout"
        android:layout_width="@dimen/_250sdp"
        android:layout_height="@dimen/_45sdp"
        android:layout_marginTop="@dimen/_15sdp"
        app:passwordToggleEnabled="true"
        app:layout_constraintEnd_toEndOf="@+id/edtTxtPasswordLayout"
        app:layout_constraintTop_toBottomOf="@+id/edtTxtPasswordLayout"
        app:passwordToggleDrawable="@drawable/show_password_selector">
        <com.google.android.material.textfield.TextInputEditText
            android:id="@+id/reinput_new_password"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:backgroundTint="@color/white"
            android:ems="10"
            android:hint="Nhập lại mật khẩu mới"
            android:inputType="textPassword"
            android:textColor="@color/sky"
            android:textColorHint="@color/sky"
            tools:ignore="HardcodedText" />
    </com.google.android.material.textfield.TextInputLayout>

    <com.google.android.material.textfield.TextInputLayout
        android:id="@+id/input_old_pass"
        android:layout_width="@dimen/_250sdp"
        android:layout_height="@dimen/_45sdp"
        android:layout_marginTop="@dimen/_10sdp"
        app:layout_constraintEnd_toEndOf="@id/view3"
        app:layout_constraintStart_toStartOf="@+id/view3"
        app:layout_constraintTop_toTopOf="@+id/view3"
        app:passwordToggleDrawable="@drawable/show_password_selector"
        app:passwordToggleEnabled="true" >

        <EditText
            android:id="@+id/input_password"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:backgroundTint="@color/white"
            android:inputType="textPassword"
            android:ems="10"
            android:hint="Mật khẩu của bạn"
            android:textColor="@color/sky"
            android:textColorHint="@color/sky"
            tools:ignore="HardcodedText,TextFields" />

    </com.google.android.material.textfield.TextInputLayout>

    <com.google.android.material.textfield.TextInputLayout
        android:id="@+id/edtTxtPasswordLayout"
        android:layout_width="@dimen/_250sdp"
        android:layout_height="@dimen/_45sdp"
        android:layout_marginTop="@dimen/_10sdp"
        app:layout_constraintEnd_toEndOf="@+id/input_old_pass"
        app:layout_constraintTop_toBottomOf="@+id/input_old_pass"
        app:passwordToggleDrawable="@drawable/show_password_selector"
        app:passwordToggleEnabled="true"        >
        <com.google.android.material.textfield.TextInputEditText
            android:id="@+id/input_new_password"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:backgroundTint="@color/white"
            android:ems="10"
            android:hint="Mật khẩu mới"
            android:inputType="textPassword"
            android:textColor="@color/sky"
            android:textColorHint="@color/sky"
            tools:ignore="HardcodedText" />

    </com.google.android.material.textfield.TextInputLayout>

    <androidx.appcompat.widget.AppCompatButton
        android:id="@+id/btn_continue"
        android:layout_width="@dimen/_250sdp"
        android:layout_height="@dimen/_35sdp"
        android:layout_marginTop="@dimen/_35sdp"
        android:background="@drawable/blue_round_button"
        android:backgroundTint="@color/sky"
        android:text="Tiếp tục"
        android:textSize="@dimen/_20ssp"
        android:textColor="@color/white"
        app:layout_constraintEnd_toEndOf="@+id/edtTxtPasswordAgainLayout"
        app:layout_constraintTop_toBottomOf="@+id/edtTxtPasswordAgainLayout"
        tools:ignore="HardcodedText" />
</androidx.constraintlayout.widget.ConstraintLayout>
```

### src\main\res\layout\activity_update_vehicle.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:padding="@dimen/_5sdp"
    tools:context=".Service.Vehicle.UpdateVehicleActivity">

    <!-- Back Button -->
    <ImageButton
        android:id="@+id/btn_back"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="16dp"
        android:layout_marginTop="16dp"
        android:src="@drawable/ic_arrow_left"
        android:background="?attr/selectableItemBackgroundBorderless"
        android:contentDescription="Back"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <ScrollView
        android:layout_width="0dp"
        android:layout_height="0dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/btn_back">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical"
            android:padding="@dimen/_10sdp">

            <androidx.constraintlayout.widget.ConstraintLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:background="@drawable/blue_line">

                <TextView
                    android:id="@+id/tv_title"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="@dimen/_50sdp"
                    android:text="Cập nhật xe"
                    android:textColor="@color/sky"
                    android:textSize="@dimen/_30ssp"
                    android:textStyle="bold"
                    app:layout_constraintEnd_toEndOf="parent"
                    app:layout_constraintStart_toStartOf="parent"
                    app:layout_constraintTop_toTopOf="parent"
                    tools:ignore="HardcodedText" />

                <!-- Tên xe -->
                <TextView
                    android:id="@+id/tv_name"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginStart="@dimen/_5sdp"
                    android:layout_marginTop="@dimen/_15sdp"
                    android:text="Tên xe"
                    android:textColor="@color/sky"
                    app:layout_constraintStart_toStartOf="@+id/et_vehiclename"
                    app:layout_constraintTop_toBottomOf="@+id/tv_title"
                    tools:ignore="HardcodedText" />

                <EditText
                    android:id="@+id/et_vehiclename"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:layout_marginStart="@dimen/_30sdp"
                    android:layout_marginEnd="@dimen/_30sdp"
                    android:backgroundTint="@color/sky"
                    android:inputType="textPersonName"
                    android:textColor="@color/sky"
                    android:textSize="@dimen/_15ssp"
                    app:layout_constraintEnd_toEndOf="parent"
                    app:layout_constraintStart_toStartOf="parent"
                    app:layout_constraintTop_toBottomOf="@+id/tv_name" />

                <!-- Số chỗ -->
                <TextView
                    android:id="@+id/tv_seats"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="@dimen/_10sdp"
                    android:text="Số chỗ"
                    android:textColor="@color/sky"
                    app:layout_constraintStart_toStartOf="@+id/tv_name"
                    app:layout_constraintTop_toBottomOf="@+id/et_vehiclename"
                    tools:ignore="HardcodedText" />

                <EditText
                    android:id="@+id/et_vehicleseats"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:backgroundTint="@color/sky"
                    android:inputType="number"
                    android:textColor="@color/sky"
                    android:textSize="@dimen/_15ssp"
                    app:layout_constraintEnd_toEndOf="@+id/et_vehiclename"
                    app:layout_constraintStart_toStartOf="@+id/et_vehiclename"
                    app:layout_constraintTop_toBottomOf="@+id/tv_seats" />

                <!-- Giá -->
                <TextView
                    android:id="@+id/tv_price"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="@dimen/_10sdp"
                    android:text="Giá (VND/ngày)"
                    android:textColor="@color/sky"
                    app:layout_constraintStart_toStartOf="@+id/tv_name"
                    app:layout_constraintTop_toBottomOf="@+id/et_vehicleseats"
                    tools:ignore="HardcodedText" />

                <EditText
                    android:id="@+id/et_vehicleprice"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:backgroundTint="@color/sky"
                    android:inputType="numberDecimal"
                    android:textColor="@color/sky"
                    android:textSize="@dimen/_15ssp"
                    app:layout_constraintEnd_toEndOf="@+id/et_vehiclename"
                    app:layout_constraintStart_toStartOf="@+id/et_vehiclename"
                    app:layout_constraintTop_toBottomOf="@+id/tv_price" />

                <!-- Biển số xe -->
                <TextView
                    android:id="@+id/tv_number"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="@dimen/_10sdp"
                    android:text="Biển số xe"
                    android:textColor="@color/sky"
                    app:layout_constraintStart_toStartOf="@+id/tv_name"
                    app:layout_constraintTop_toBottomOf="@+id/et_vehicleprice"
                    tools:ignore="HardcodedText" />

                <EditText
                    android:id="@+id/et_platenumber"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:backgroundTint="@color/sky"
                    android:inputType="text"
                    android:textColor="@color/sky"
                    android:textSize="@dimen/_15ssp"
                    app:layout_constraintEnd_toEndOf="@+id/et_vehiclename"
                    app:layout_constraintStart_toStartOf="@+id/et_vehiclename"
                    app:layout_constraintTop_toBottomOf="@+id/tv_number" />

                <!-- Thương hiệu -->
                <TextView
                    android:id="@+id/tv_brand"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="@dimen/_10sdp"
                    android:text="Thương hiệu"
                    android:textColor="@color/sky"
                    app:layout_constraintStart_toStartOf="@+id/tv_name"
                    app:layout_constraintTop_toBottomOf="@+id/et_platenumber"
                    tools:ignore="HardcodedText" />

                <EditText
                    android:id="@+id/et_brand"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:backgroundTint="@color/sky"
                    android:inputType="text"
                    android:textColor="@color/sky"
                    android:textSize="@dimen/_15ssp"
                    app:layout_constraintEnd_toEndOf="@+id/et_vehiclename"
                    app:layout_constraintStart_toStartOf="@+id/et_vehiclename"
                    app:layout_constraintTop_toBottomOf="@+id/tv_brand" />

                <!-- Loại nhiên liệu -->
                <TextView
                    android:id="@+id/tv_fuel_type"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="@dimen/_10sdp"
                    android:text="Loại nhiên liệu"
                    android:textColor="@color/sky"
                    app:layout_constraintStart_toStartOf="@+id/tv_name"
                    app:layout_constraintTop_toBottomOf="@+id/et_brand"
                    tools:ignore="HardcodedText" />

                <EditText
                    android:id="@+id/et_fuel_type"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:backgroundTint="@color/sky"
                    android:inputType="text"
                    android:textColor="@color/sky"
                    android:textSize="@dimen/_15ssp"
                    app:layout_constraintEnd_toEndOf="@+id/et_vehiclename"
                    app:layout_constraintStart_toStartOf="@+id/et_vehiclename"
                    app:layout_constraintTop_toBottomOf="@+id/tv_fuel_type" />

                <!-- Tốc độ tối đa -->
                <TextView
                    android:id="@+id/tv_max_speed"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="@dimen/_10sdp"
                    android:text="Tốc độ tối đa (km/h)"
                    android:textColor="@color/sky"
                    app:layout_constraintStart_toStartOf="@+id/tv_name"
                    app:layout_constraintTop_toBottomOf="@+id/et_fuel_type"
                    tools:ignore="HardcodedText" />

                <EditText
                    android:id="@+id/et_max_speed"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:backgroundTint="@color/sky"
                    android:inputType="number"
                    android:textColor="@color/sky"
                    android:textSize="@dimen/_15ssp"
                    app:layout_constraintEnd_toEndOf="@+id/et_vehiclename"
                    app:layout_constraintStart_toStartOf="@+id/et_vehiclename"
                    app:layout_constraintTop_toBottomOf="@+id/tv_max_speed" />

                <!-- Hộp số -->
                <TextView
                    android:id="@+id/tv_transmission"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="@dimen/_10sdp"
                    android:text="Hộp số"
                    android:textColor="@color/sky"
                    app:layout_constraintStart_toStartOf="@+id/tv_name"
                    app:layout_constraintTop_toBottomOf="@+id/et_max_speed"
                    tools:ignore="HardcodedText" />

                <EditText
                    android:id="@+id/et_transmission"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:backgroundTint="@color/sky"
                    android:inputType="text"
                    android:textColor="@color/sky"
                    android:textSize="@dimen/_15ssp"
                    app:layout_constraintEnd_toEndOf="@+id/et_vehiclename"
                    app:layout_constraintStart_toStartOf="@+id/et_vehiclename"
                    app:layout_constraintTop_toBottomOf="@+id/tv_transmission" />

                <!-- Cửa và ghế -->
                <TextView
                    android:id="@+id/tv_doors_and_seats"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="@dimen/_10sdp"
                    android:text="Số cửa và ghế"
                    android:textColor="@color/sky"
                    app:layout_constraintStart_toStartOf="@+id/tv_name"
                    app:layout_constraintTop_toBottomOf="@+id/et_transmission"
                    tools:ignore="HardcodedText" />

                <EditText
                    android:id="@+id/et_doors_and_seats"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:backgroundTint="@color/sky"
                    android:inputType="text"
                    android:textColor="@color/sky"
                    android:textSize="@dimen/_15ssp"
                    app:layout_constraintEnd_toEndOf="@+id/et_vehiclename"
                    app:layout_constraintStart_toStartOf="@+id/et_vehiclename"
                    app:layout_constraintTop_toBottomOf="@+id/tv_doors_and_seats" />

                <!-- Ảnh xe -->
                <TextView
                    android:id="@+id/tv_vehicle_image"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="@dimen/_10sdp"
                    android:text="Ảnh xe"
                    android:textColor="@color/sky"
                    app:layout_constraintStart_toStartOf="@+id/tv_name"
                    app:layout_constraintTop_toBottomOf="@+id/et_doors_and_seats"
                    tools:ignore="HardcodedText" />

                <androidx.cardview.widget.CardView
                    android:id="@+id/vehicle_img_card"
                    android:layout_width="0dp"
                    android:layout_height="@dimen/_120sdp"
                    android:layout_marginTop="@dimen/_10sdp"
                    android:background="@drawable/yellow_line"
                    app:layout_constraintEnd_toEndOf="@+id/et_vehiclename"
                    app:layout_constraintStart_toStartOf="@+id/et_vehiclename"
                    app:layout_constraintTop_toBottomOf="@+id/tv_vehicle_image">

                    <ImageView
                        android:id="@+id/vehicle_img_view"
                        android:layout_width="match_parent"
                        android:layout_height="@dimen/_120sdp"
                        android:adjustViewBounds="true"
                        android:background="@drawable/yellow_line"
                        android:contentDescription="Chọn ảnh xe"
                        android:scaleType="centerCrop" />
                </androidx.cardview.widget.CardView>

                <!-- Ảnh giấy tờ xe -->
                <TextView
                    android:id="@+id/tv_document_image"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="@dimen/_10sdp"
                    android:text="Giấy tờ xe"
                    android:textColor="@color/sky"
                    app:layout_constraintStart_toStartOf="@+id/tv_name"
                    app:layout_constraintTop_toBottomOf="@+id/vehicle_img_card"
                    tools:ignore="HardcodedText" />

                <androidx.cardview.widget.CardView
                    android:id="@+id/document_img_card"
                    android:layout_width="0dp"
                    android:layout_height="@dimen/_120sdp"
                    android:layout_marginTop="@dimen/_10sdp"
                    android:background="@drawable/yellow_line"
                    app:layout_constraintEnd_toEndOf="@+id/et_vehiclename"
                    app:layout_constraintStart_toStartOf="@+id/et_vehiclename"
                    app:layout_constraintTop_toBottomOf="@+id/tv_document_image">

                    <ImageView
                        android:id="@+id/document_img_view"
                        android:layout_width="match_parent"
                        android:layout_height="@dimen/_120sdp"
                        android:adjustViewBounds="true"
                        android:background="@drawable/yellow_line"
                        android:contentDescription="Chọn ảnh giấy tờ xe"
                        android:scaleType="centerCrop" />
                </androidx.cardview.widget.CardView>

                <!-- Nút Cập nhật -->
                <androidx.appcompat.widget.AppCompatButton
                    android:id="@+id/btn_updatevehicle"
                    android:layout_width="0dp"
                    android:layout_height="@dimen/_35sdp"
                    android:layout_marginTop="@dimen/_25sdp"
                    android:layout_marginBottom="@dimen/_25sdp"
                    android:background="@drawable/red_round_button"
                    android:text="Cập nhật"
                    android:textColor="@color/white"
                    android:textSize="@dimen/_14ssp"
                    app:layout_constraintBottom_toBottomOf="parent"
                    app:layout_constraintEnd_toEndOf="@+id/et_vehiclename"
                    app:layout_constraintStart_toStartOf="@+id/et_vehiclename"
                    app:layout_constraintTop_toBottomOf="@+id/document_img_card"
                    tools:ignore="HardcodedText" />
            </androidx.constraintlayout.widget.ConstraintLayout>
        </LinearLayout>
    </ScrollView>
</androidx.constraintlayout.widget.ConstraintLayout>

```

### src\main\res\layout\activity_user_stats.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:background="#FFFFFF"
    android:orientation="vertical"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <ScrollView
        android:id="@+id/rmb3uvpen3ma"
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_weight="1"
        android:background="#FFFFFF">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical">

            <LinearLayout
                android:id="@+id/rzexdgxvxvb"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginBottom="38dp"
                android:layout_marginStart="32dp"
                android:orientation="horizontal">

                <ImageView
                    android:id="@+id/r44o74nwoz3c"
                    android:layout_width="30dp"
                    android:layout_height="30dp"
                    android:layout_marginEnd="20dp"
                    android:src="@drawable/ic_arrow_left"
                    android:scaleType="fitXY" />

                <TextView
                    android:id="@+id/r6bm32f71h19"
                    android:textColor="#003087"
                    android:textSize="26sp"
                    android:textStyle="bold"
                    android:layout_height="wrap_content"
                    android:layout_width="wrap_content"
                    android:text="Thống kê người dùng" />
            </LinearLayout>

            <LinearLayout
                android:id="@+id/r6ks4j8oahlu"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginBottom="20dp"
                android:layout_marginHorizontal="22dp"
                android:orientation="vertical">

                <TextView
                    android:id="@+id/recxrp8ul19e"
                    android:textColor="#000000"
                    android:textSize="18sp"
                    android:textStyle="bold"
                    android:layout_marginBottom="10dp"
                    android:layout_height="wrap_content"
                    android:layout_width="wrap_content"
                    android:text="Lọc theo vai trò" />

                <LinearLayout
                    android:id="@+id/rgcqxgwhq1ni"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:gravity="center_vertical"
                    android:background="@drawable/cr8bd9d9d957"
                    android:paddingVertical="6dp"
                    android:paddingHorizontal="19dp"
                    android:clickable="true"
                    android:focusable="true"
                    android:orientation="horizontal">

                    <TextView
                        android:id="@+id/r2wdtx5r7t1z"
                        android:textColor="#000000"
                        android:textSize="18sp"
                        android:textStyle="bold"
                        android:layout_height="wrap_content"
                        android:layout_width="match_parent"
                        android:layout_weight="1"
                        android:gravity="center"
                        android:text="Tất cả" />

                    <ImageView
                        android:id="@+id/r7pj51g0csi3"
                        android:layout_width="27dp"
                        android:layout_height="28dp"
                        android:src="@mipmap/ic_launcher"
                        android:scaleType="fitXY" />
                </LinearLayout>
            </LinearLayout>

            <TextView
                android:id="@+id/r7rwejygxvky"
                android:textColor="#000000"
                android:textSize="18sp"
                android:textStyle="bold"
                android:layout_marginBottom="12dp"
                android:layout_marginStart="23dp"
                android:layout_height="wrap_content"
                android:layout_width="wrap_content"
                android:text="Lọc theo thời gian" />

            <LinearLayout
                android:id="@+id/rkbatom8cwka"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginBottom="52dp"
                android:layout_marginStart="27dp"
                android:orientation="horizontal">

                <LinearLayout
                    android:id="@+id/rnlm6qxgv01"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:background="@drawable/cr8b0b54da5e"
                    android:paddingVertical="9dp"
                    android:paddingHorizontal="50dp"
                    android:layout_marginEnd="14dp"
                    android:clickable="true"
                    android:focusable="true"
                    android:orientation="vertical">

                    <TextView
                        android:id="@+id/ri2lrieii73"
                        android:textColor="#000000"
                        android:textSize="18sp"
                        android:textStyle="bold"
                        android:layout_height="wrap_content"
                        android:layout_width="wrap_content"
                        android:text="Tuần này" />
                </LinearLayout>

                <LinearLayout
                    android:id="@+id/ranjw4ubsk1p"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:background="@drawable/cr8b00308726"
                    android:paddingVertical="9dp"
                    android:paddingHorizontal="45dp"
                    android:clickable="true"
                    android:focusable="true"
                    android:orientation="vertical">

                    <TextView
                        android:id="@+id/rqf6h1ypj6yc"
                        android:textColor="#000000"
                        android:textSize="18sp"
                        android:textStyle="bold"
                        android:layout_height="wrap_content"
                        android:layout_width="wrap_content"
                        android:text="Tháng này" />
                </LinearLayout>
            </LinearLayout>

            <LinearLayout
                android:id="@+id/rc7nmjamhwd6"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:gravity="center_horizontal"
                android:layout_marginBottom="54dp"
                android:orientation="vertical">

                <ImageView
                    android:id="@+id/rtpvn3lra5m"
                    android:layout_width="200dp"
                    android:layout_height="202dp"
                    android:src="@mipmap/ic_launcher"
                    android:scaleType="fitXY" />
            </LinearLayout>

            <LinearLayout
                android:id="@+id/r10lj7hud7xe"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginBottom="155dp"
                android:layout_marginHorizontal="22dp"
                android:orientation="horizontal">

                <LinearLayout
                    android:id="@+id/rxlp6cueadhs"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:layout_weight="1"
                    android:gravity="center_horizontal"
                    android:background="@drawable/cr8bd5e9fe"
                    android:paddingTop="22dp"
                    android:paddingBottom="7dp"
                    android:paddingHorizontal="16dp"
                    android:layout_marginEnd="7dp"
                    android:orientation="vertical">

                    <TextView
                        android:id="@+id/rbnyyf0spm7"
                        android:textColor="#000000"
                        android:textSize="24sp"
                        android:textStyle="bold"
                        android:layout_marginBottom="1dp"
                        android:layout_height="wrap_content"
                        android:layout_width="wrap_content"
                        android:text="1800" />

                    <TextView
                        android:id="@+id/ry4qw0hmx72"
                        android:textColor="#000000"
                        android:textSize="18sp"
                        android:textStyle="bold"
                        android:layout_height="wrap_content"
                        android:layout_width="wrap_content"
                        android:text="Tổng\nngười dùng" />
                </LinearLayout>

                <LinearLayout
                    android:id="@+id/ruodv4nhyien"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:layout_weight="1"
                    android:gravity="center_horizontal"
                    android:background="@drawable/cr8b6da9f1"
                    android:paddingTop="21dp"
                    android:paddingBottom="8dp"
                    android:paddingHorizontal="4dp"
                    android:layout_marginVertical="1dp"
                    android:layout_marginEnd="7dp"
                    android:orientation="vertical">

                    <TextView
                        android:id="@+id/rhnirr1sgd5v"
                        android:textColor="#000000"
                        android:textSize="24sp"
                        android:textStyle="bold"
                        android:layout_marginBottom="1dp"
                        android:layout_height="wrap_content"
                        android:layout_width="wrap_content"
                        android:text="980" />

                    <TextView
                        android:id="@+id/rj6nuso4mgap"
                        android:textColor="#000000"
                        android:textSize="18sp"
                        android:textStyle="bold"
                        android:layout_height="wrap_content"
                        android:layout_width="match_parent"
                        android:layout_weight="1"
                        android:gravity="center"
                        android:text="Đã \nxác minh" />
                </LinearLayout>

                <LinearLayout
                    android:id="@+id/r51nzrqubzd"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:layout_weight="1"
                    android:gravity="center_horizontal"
                    android:background="@drawable/cr8bff450080"
                    android:paddingTop="23dp"
                    android:paddingBottom="8dp"
                    android:paddingHorizontal="8dp"
                    android:orientation="vertical">

                    <TextView
                        android:id="@+id/r16az2h4g5wq"
                        android:textColor="#000000"
                        android:textSize="24sp"
                        android:textStyle="bold"
                        android:layout_height="wrap_content"
                        android:layout_width="wrap_content"
                        android:text="180" />

                    <TextView
                        android:id="@+id/rod2j0a9ggrn"
                        android:textColor="#000000"
                        android:textSize="18sp"
                        android:textStyle="bold"
                        android:layout_height="wrap_content"
                        android:layout_width="match_parent"
                        android:layout_weight="1"
                        android:gravity="center"
                        android:text="Đã\nbị khóa" />
                </LinearLayout>
            </LinearLayout>
        </LinearLayout>
    </ScrollView>
</LinearLayout>

```

### src\main\res\layout\activity_validate_phone.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/linearLayout2"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <View
        android:id="@+id/view2"
        android:layout_width="match_parent"
        android:layout_height="@dimen/_150sdp"
        android:background="@drawable/rectangle_quarter_radius"
        android:backgroundTint="@color/sky"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <TextView
        android:id="@+id/textView5"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="@dimen/_20sdp"
        android:text="Validate phone number"
        android:textColor="@color/sunflower"
        android:textSize="@dimen/_20ssp"
        android:textStyle="bold"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="@+id/view2"
        app:layout_constraintTop_toTopOf="@+id/view2"
        tools:ignore="HardcodedText" />

    <TextView
        android:id="@+id/textView6"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="@dimen/_10sdp"
        android:layout_marginEnd="107dp"
        android:text="OTP CODE"
        android:textColor="@color/white"
        android:textSize="@dimen/_16ssp"
        android:textStyle="normal"
        app:layout_constraintHorizontal_bias="0.647"
        app:layout_constraintStart_toStartOf="@+id/textView5"
        app:layout_constraintTop_toBottomOf="@+id/textView5"
        tools:ignore="HardcodedText" />

    <ImageView
        android:id="@+id/imageView2"
        android:layout_width="@dimen/_35sdp"
        android:layout_height="@dimen/_35sdp"
        app:layout_constraintBottom_toBottomOf="@+id/view2"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/textView6"
        app:srcCompat="@drawable/create_account_arrow" />

    <View
        android:id="@+id/view3"
        android:layout_width="match_parent"
        android:layout_height="@dimen/_200sdp"
        android:layout_marginStart="@dimen/_15sdp"
        android:layout_marginTop="@dimen/_50sdp"
        android:layout_marginEnd="@dimen/_15sdp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/view2" />

    <EditText
        android:id="@+id/otpNumberOne"
        android:layout_width="@dimen/_40sdp"
        android:layout_height="@dimen/_40sdp"
        android:layout_marginStart="@dimen/_7sdp"
        android:layout_marginTop="@dimen/_20sdp"
        android:ems="10"
        android:focusable="auto"
        android:inputType="number"
        android:maxLength="1"
        android:textAlignment="center"
        app:layout_constraintStart_toStartOf="@+id/view3"
        app:layout_constraintEnd_toStartOf="@+id/otpNumberTwo"
        app:layout_constraintTop_toTopOf="@+id/view3" />

    <EditText
        android:id="@+id/otpNumberTwo"
        android:layout_width="@dimen/_40sdp"
        android:layout_height="@dimen/_40sdp"
        android:ems="10"
        android:inputType="number"
        android:maxLength="1"
        android:textAlignment="center"
        app:layout_constraintBaseline_toBaselineOf="@+id/otpNumberOne"
        app:layout_constraintEnd_toStartOf="@+id/otpNumberThree"
        app:layout_constraintStart_toEndOf="@+id/otpNumberOne" />

    <EditText
        android:id="@+id/otpNumberThree"
        android:layout_width="@dimen/_40sdp"
        android:layout_height="@dimen/_40sdp"
        android:ems="10"
        android:inputType="number"
        android:maxLength="1"
        android:textAlignment="center"
        app:layout_constraintBaseline_toBaselineOf="@+id/otpNumberTwo"
        app:layout_constraintEnd_toStartOf="@+id/otpNumberFour"
        app:layout_constraintStart_toEndOf="@+id/otpNumberTwo" />

    <EditText
        android:id="@+id/otpNumberFour"
        android:layout_width="@dimen/_40sdp"
        android:layout_height="@dimen/_40sdp"
        android:ems="10"
        android:inputType="number"
        android:maxLength="1"
        android:textAlignment="center"
        app:layout_constraintBaseline_toBaselineOf="@+id/otpNumberThree"
        app:layout_constraintEnd_toStartOf="@+id/otpNumberFive"
        app:layout_constraintStart_toEndOf="@+id/otpNumberThree" />

    <EditText
        android:id="@+id/otpNumberFive"
        android:layout_width="@dimen/_40sdp"
        android:layout_height="@dimen/_40sdp"
        android:ems="10"
        android:inputType="number"
        android:maxLength="1"
        android:textAlignment="center"
        app:layout_constraintBaseline_toBaselineOf="@+id/otpNumberFour"
        app:layout_constraintStart_toEndOf="@+id/otpNumberFour"
        app:layout_constraintEnd_toStartOf="@+id/optNumberSix"/>

    <EditText
        android:id="@+id/optNumberSix"
        android:layout_width="@dimen/_40sdp"
        android:layout_height="@dimen/_40sdp"
        android:layout_marginEnd="@dimen/_7sdp"
        android:ems="10"
        android:inputType="number"
        android:maxLength="1"
        android:textAlignment="center"
        app:layout_constraintBaseline_toBaselineOf="@+id/otpNumberFive"
        app:layout_constraintEnd_toEndOf="@+id/view3"
        app:layout_constraintStart_toEndOf="@+id/otpNumberFive" />


    <androidx.appcompat.widget.AppCompatButton
        android:id="@+id/btn_signup"
        android:layout_width="@dimen/_250sdp"
        android:layout_height="@dimen/_35sdp"
        android:layout_marginStart="@dimen/_10sdp"
        android:layout_marginTop="@dimen/_20sdp"
        android:background="@drawable/blue_round_button"
        android:text="Xác nhận"
        android:textColor="@color/white"
        app:layout_constraintStart_toStartOf="@+id/otpNumberOne"
        app:layout_constraintTop_toBottomOf="@+id/otpNumberFour"
        tools:ignore="HardcodedText" />

    <TextView
        android:id="@+id/textview"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="@dimen/_25sdp"
        android:layout_marginTop="@dimen/_25sdp"
        android:text="Tôi chưa nhận được mã OTP ?"
        app:layout_constraintStart_toStartOf="@+id/btn_signup"
        app:layout_constraintTop_toBottomOf="@+id/btn_signup"
        tools:ignore="HardcodedText" />

    <TextView
        android:id="@+id/tvResend"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="@dimen/_10sdp"
        android:layout_marginTop="@dimen/_25ssp"
        android:clickable="true"
        android:text="Gửi lại"
        android:textColor="@color/sky"
        app:layout_constraintStart_toEndOf="@+id/textview"
        app:layout_constraintTop_toBottomOf="@+id/btn_signup"
        android:focusable="true"
        tools:ignore="HardcodedText" />
</androidx.constraintlayout.widget.ConstraintLayout>
```

### src\main\res\layout\admin_vehicle_card.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.cardview.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/admin_vehicle_card"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    app:cardCornerRadius="12dp"
    app:cardElevation="4dp"
    android:layout_marginHorizontal="12dp"
    android:layout_marginVertical="8dp">

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:padding="12dp">

        <!-- Ảnh xe -->
        <ImageView
            android:id="@+id/vehicle_image"
            android:layout_width="100dp"
            android:layout_height="60dp"
            android:scaleType="centerCrop"
            android:background="@drawable/rounded_corner"
            android:clipToOutline="true"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            tools:src="@mipmap/ic_launcher" />

        <!-- Thông tin xe -->
        <LinearLayout
            android:id="@+id/vehicle_info"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_marginStart="12dp"
            android:layout_marginEnd="12dp"
            android:orientation="vertical"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toEndOf="@id/vehicle_image"
            app:layout_constraintTop_toTopOf="@id/vehicle_image">

            <!-- Tên xe -->
            <TextView
                android:id="@+id/vehicle_name"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:textColor="#202020"
                android:textSize="16sp"
                android:textStyle="bold"
                android:maxLines="1"
                android:ellipsize="end"
                tools:text="Vinfast Lux A2.0" />

            <!-- Thương hiệu -->
            <TextView
                android:id="@+id/vehicle_brand"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="4dp"
                android:textColor="#888888"
                android:textSize="14sp"
                tools:text="Vinfast" />

            <!-- Biển số xe -->
            <TextView
                android:id="@+id/vehicle_number"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="4dp"
                android:textColor="#888888"
                android:textSize="14sp"
                tools:text="51A-12345" />

            <!-- Giá -->
            <TextView
                android:id="@+id/vehicle_price"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="4dp"
                android:textColor="#202020"
                android:textSize="14sp"
                tools:text="899.000 VNĐ/Ngày" />

            <!-- Trạng thái sẵn có -->
            <TextView
                android:id="@+id/vehicle_availability"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="4dp"
                android:textColor="#888888"
                android:textSize="14sp"
                tools:text="Có sẵn" />

            <!-- Trạng thái duyệt -->
            <TextView
                android:id="@+id/verification_status"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="4dp"
                android:textColor="#FF6200EE"
                android:textSize="14sp"
                android:textStyle="bold"
                tools:text="Chưa duyệt" />

            <!-- Đánh giá -->
            <LinearLayout
                android:id="@+id/rating_container"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="4dp"
                android:orientation="horizontal">

                <ImageView
                    android:id="@+id/rating_icon"
                    android:layout_width="16dp"
                    android:layout_height="16dp"
                    android:layout_gravity="center_vertical"
                    android:src="@drawable/vector_main"
                    tools:ignore="ContentDescription" />

                <TextView
                    android:id="@+id/vehicle_rating"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginStart="4dp"
                    android:textColor="#888888"
                    android:textSize="14sp"
                    tools:text="4.9 (18 Đánh giá)" />
            </LinearLayout>
        </LinearLayout>
    </androidx.constraintlayout.widget.ConstraintLayout>
</androidx.cardview.widget.CardView>

```

### src\main\res\layout\customer_activity_main.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <FrameLayout
        android:id="@+id/frame_layout_customer"
        android:layout_width="0dp"
        android:layout_height="0dp"
        app:layout_constraintBottom_toTopOf="@id/bottomNavigationView"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <com.google.android.material.bottomnavigation.BottomNavigationView
        android:id="@+id/bottomNavigationView"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:background="?android:attr/windowBackground"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:menu="@menu/customer_bottom_menu" />

</androidx.constraintlayout.widget.ConstraintLayout>
```

### src\main\res\layout\customer_booking_detail.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:padding="16dp"
    android:background="@color/white">

    <!-- Back Button -->
    <ImageView
        android:id="@+id/btn_noti_back"
        android:layout_width="32dp"
        android:layout_height="32dp"
        android:src="@drawable/ic_arrow_left"
        android:contentDescription="Back"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <!-- Title -->
    <TextView
        android:id="@+id/tv_booking_title"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Chi tiết đặt xe"
        android:textSize="24sp"
        android:textStyle="bold"
        android:textColor="@color/text_title"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/btn_noti_back"
        android:layout_marginTop="16dp" />

    <!-- Vehicle Image -->
    <ImageView
        android:id="@+id/img_noti_car"
        android:layout_width="0dp"
        android:layout_height="200dp"
        android:scaleType="centerCrop"
        android:background="@drawable/rounded_corner"
        android:clipToOutline="true"
        app:layout_constraintDimensionRatio="16:9"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/tv_booking_title"
        android:layout_marginTop="16dp" />

    <!-- Booking ID -->
    <TextView
        android:id="@+id/txtview_noti_id_label"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Mã đặt xe:"
        android:textSize="16sp"
        android:textColor="@color/text_input_hint"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/img_noti_car"
        android:layout_marginTop="16dp" />

    <TextView
        android:id="@+id/txtview_noti_id"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="@color/text_title"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toEndOf="@id/txtview_noti_id_label"
        app:layout_constraintTop_toTopOf="@id/txtview_noti_id_label"
        android:layout_marginStart="8dp" />

    <!-- Vehicle Name -->
    <TextView
        android:id="@+id/txtview_noti_BrandCar_label"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Tên xe:"
        android:textSize="16sp"
        android:textColor="@color/text_input_hint"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/txtview_noti_id_label"
        android:layout_marginTop="8dp" />

    <TextView
        android:id="@+id/txtview_noti_BrandCar"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="@color/text_title"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toEndOf="@id/txtview_noti_BrandCar_label"
        app:layout_constraintTop_toTopOf="@id/txtview_noti_BrandCar_label"
        android:layout_marginStart="8dp" />

    <!-- Provider Name -->
    <TextView
        android:id="@+id/txtview_noti_name_label"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Nhà cung cấp:"
        android:textSize="16sp"
        android:textColor="@color/text_input_hint"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/txtview_noti_BrandCar_label"
        android:layout_marginTop="8dp" />

    <TextView
        android:id="@+id/txtview_noti_name"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="@color/text_title"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toEndOf="@id/txtview_noti_name_label"
        app:layout_constraintTop_toTopOf="@id/txtview_noti_name_label"
        android:layout_marginStart="8dp" />

    <!-- Provider Email -->
    <TextView
        android:id="@+id/txtview_noti_email_label"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Email:"
        android:textSize="16sp"
        android:textColor="@color/text_input_hint"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/txtview_noti_name_label"
        android:layout_marginTop="8dp" />

    <TextView
        android:id="@+id/txtview_noti_email"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="@color/text_title"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toEndOf="@id/txtview_noti_email_label"
        app:layout_constraintTop_toTopOf="@id/txtview_noti_email_label"
        android:layout_marginStart="8dp" />

    <!-- Provider Phone -->
    <TextView
        android:id="@+id/txtview_noti_phoneNumber_label"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Số điện thoại:"
        android:textSize="16sp"
        android:textColor="@color/text_input_hint"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/txtview_noti_email_label"
        android:layout_marginTop="8dp" />

    <TextView
        android:id="@+id/txtview_noti_phoneNumber"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="@color/text_title"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toEndOf="@id/txtview_noti_phoneNumber_label"
        app:layout_constraintTop_toTopOf="@id/txtview_noti_phoneNumber_label"
        android:layout_marginStart="8dp" />

    <!-- Parking Location -->
    <TextView
        android:id="@+id/txt_checkout_address_label"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Nơi đỗ xe:"
        android:textSize="16sp"
        android:textColor="@color/text_input_hint"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/txtview_noti_phoneNumber_label"
        android:layout_marginTop="8dp" />

    <TextView
        android:id="@+id/txt_checkout_address"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="@color/text_title"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toEndOf="@id/txt_checkout_address_label"
        app:layout_constraintTop_toTopOf="@id/txt_checkout_address_label"
        android:layout_marginStart="8dp" />

    <!-- Pickup Time -->
    <TextView
        android:id="@+id/tv_noti_pickup_label"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Ngày nhận:"
        android:textSize="16sp"
        android:textColor="@color/text_input_hint"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/txt_checkout_address_label"
        android:layout_marginTop="8dp" />

    <TextView
        android:id="@+id/tv_noti_pickup"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="@color/text_title"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toEndOf="@id/tv_noti_pickup_label"
        app:layout_constraintTop_toTopOf="@id/tv_noti_pickup_label"
        android:layout_marginStart="8dp" />

    <!-- Dropoff Time -->
    <TextView
        android:id="@+id/tv_noti_dropoff_label"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Ngày trả:"
        android:textSize="16sp"
        android:textColor="@color/text_input_hint"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/tv_noti_pickup_label"
        android:layout_marginTop="8dp" />

    <TextView
        android:id="@+id/tv_noti_dropoff"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="@color/text_title"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toEndOf="@id/tv_noti_dropoff_label"
        app:layout_constraintTop_toTopOf="@id/tv_noti_dropoff_label"
        android:layout_marginStart="8dp" />

    <!-- Price per Day -->
    <TextView
        android:id="@+id/txtview_noti_price_label"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Giá thuê/ngày:"
        android:textSize="16sp"
        android:textColor="@color/text_input_hint"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/tv_noti_dropoff_label"
        android:layout_marginTop="8dp" />

    <TextView
        android:id="@+id/txtview_noti_price"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="@color/text_title"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toEndOf="@id/txtview_noti_price_label"
        app:layout_constraintTop_toTopOf="@id/txtview_noti_price_label"
        android:layout_marginStart="8dp" />

    <!-- Total Cost -->
    <TextView
        android:id="@+id/txtview_noti_totalCost_label"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Tổng tiền:"
        android:textSize="16sp"
        android:textColor="@color/text_input_hint"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/txtview_noti_price_label"
        android:layout_marginTop="8dp" />

    <TextView
        android:id="@+id/txtview_noti_totalCost"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="@color/sunset"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toEndOf="@id/txtview_noti_totalCost_label"
        app:layout_constraintTop_toTopOf="@id/txtview_noti_totalCost_label"
        android:layout_marginStart="8dp" />

    <!-- Status -->
    <TextView
        android:id="@+id/txtview_noti_status_label"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Trạng thái:"
        android:textSize="16sp"
        android:textColor="@color/text_input_hint"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/txtview_noti_totalCost_label"
        android:layout_marginTop="8dp" />

    <TextView
        android:id="@+id/txtview_noti_status"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="@color/text_title"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toEndOf="@id/txtview_noti_status_label"
        app:layout_constraintTop_toTopOf="@id/txtview_noti_status_label"
        android:layout_marginStart="8dp" />

    <!-- Pay Button -->
    <Button
        android:id="@+id/btn_customer_pay"
        android:layout_width="0dp"
        android:layout_height="48dp"
        android:layout_marginTop="24dp"
        android:layout_marginEnd="8dp"
        android:background="@drawable/blue_round_button"
        android:text="Thanh toán"
        android:textColor="@color/white"
        android:textSize="16sp"
        android:fontFamily="@font/relay_roboto_flex_regular"
        android:visibility="gone"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/txtview_noti_status_label" />

    <!-- Cancel Button -->
    <Button
        android:id="@+id/customer_details_btn"
        android:layout_width="0dp"
        android:layout_height="48dp"
        android:layout_marginTop="24dp"
        android:layout_marginStart="8dp"
        android:background="@drawable/red_round_button"
        android:text="Hủy"
        android:textColor="@color/white"
        android:textSize="16sp"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toEndOf="@id/btn_customer_pay"
        app:layout_constraintTop_toBottomOf="@id/txtview_noti_status_label" />

</androidx.constraintlayout.widget.ConstraintLayout>
```

### src\main\res\layout\customer_fragment_activity.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/white">

    <!-- Tiêu đề -->
    <TextView
        android:id="@+id/tv_title"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="16dp"
        android:layout_marginTop="16dp"
        android:text="Lịch sử thuê xe"
        android:textSize="24sp"
        android:textStyle="bold"
        android:textColor="@color/text_title"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <!-- RecyclerView -->
    <androidx.recyclerview.widget.RecyclerView
        android:id="@+id/rv_activities"
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:layout_marginTop="16dp"
        android:paddingHorizontal="16dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/tv_title"
        tools:listitem="@layout/item_activity" />

    <!-- TextView khi không có dữ liệu -->
    <TextView
        android:id="@+id/tv_empty"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_margin="16dp"
        android:fontFamily="@font/relay_roboto_flex_regular"
        android:padding="16dp"
        android:text="Không có lịch sử thuê xe"
        android:textColor="@color/text_input_hint"
        android:textSize="16sp"
        android:visibility="gone"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/tv_title" />

</androidx.constraintlayout.widget.ConstraintLayout>

```

### src\main\res\layout\customer_fragment_home.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#FFFFFF"
    tools:context=".FragmentPages.Customer.CustomerHomeFragment">

    <!-- Thanh tìm kiếm và nút filter -->
    <LinearLayout
        android:id="@+id/search_layout"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:gravity="center_vertical"
        android:paddingHorizontal="26dp"
        android:layout_marginTop="16dp"
        android:layout_marginBottom="16dp"
        android:orientation="horizontal"
        app:layout_constraintTop_toTopOf="parent">

        <!-- Nút Filter -->
        <ImageView
            android:id="@+id/filter_button"
            android:layout_width="24dp"
            android:layout_height="24dp"
            android:layout_marginEnd="8dp"
            android:src="@drawable/ic_filter"
            android:contentDescription="@string/filter_vehicles"
            android:scaleType="fitXY" />

        <!-- Thanh tìm kiếm -->
        <LinearLayout
            android:id="@+id/search_container"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:gravity="center_vertical"
            android:background="@drawable/s4d3a4dsw1cr8bffffff"
            android:paddingVertical="4dp"
            android:clickable="true"
            android:focusable="true"
            android:orientation="horizontal">

            <EditText
                android:id="@+id/search_input"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:hint="@string/search_vehicles"
                android:textColor="#716676"
                android:textColorHint="#716676"
                android:textSize="16sp"
                android:background="@null"
                android:inputType="text"
                android:imeOptions="actionSearch" />

            <ImageView
                android:id="@+id/search_button"
                android:layout_width="24dp"
                android:layout_height="24dp"
                android:layout_marginEnd="4dp"
                android:src="@drawable/ic_search"
                android:contentDescription="@string/search"
                android:scaleType="fitXY" />
        </LinearLayout>
    </LinearLayout>

    <!-- Danh sách xe -->
    <androidx.recyclerview.widget.RecyclerView
        android:id="@+id/recycler_view_vehicles"
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_marginTop="8dp"
        app:layout_constraintTop_toBottomOf="@id/search_layout"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintBottom_toBottomOf="parent"
        tools:listitem="@layout/vehicle_card" />

    <!-- Floating Action Button -->
    <com.google.android.material.floatingactionbutton.FloatingActionButton
        android:id="@+id/fab_chat"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:src="@drawable/floating_chat_icon"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintBottom_toBottomOf="parent"
        android:layout_margin="16dp" />

</androidx.constraintlayout.widget.ConstraintLayout>

```

### src\main\res\layout\customer_fragment_notification.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/white">

    <!-- Tiêu đề -->
    <TextView
        android:id="@+id/tv_title"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="16dp"
        android:layout_marginTop="16dp"
        android:text="Thông báo"
        android:textSize="24sp"
        android:textStyle="bold"
        android:textColor="@color/text_title"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <!-- RecyclerView -->
    <androidx.recyclerview.widget.RecyclerView
        android:id="@+id/rv_notifications"
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:layout_marginTop="16dp"
        android:paddingHorizontal="16dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/tv_title"
        tools:listitem="@layout/item_notification" />

    <!-- TextView khi không có dữ liệu -->
    <TextView
        android:id="@+id/tv_empty"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_margin="16dp"
        android:fontFamily="@font/relay_roboto_flex_regular"
        android:padding="16dp"
        android:text="Không có thông báo nào"
        android:textColor="@color/text_input_hint"
        android:textSize="16sp"
        android:visibility="gone"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/tv_title" />

</androidx.constraintlayout.widget.ConstraintLayout>

```

### src\main\res\layout\customer_fragment_setting.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/white"
    tools:context=".FragmentPages.Customer.CustomerSettingFragment">

    <!-- Header -->
    <androidx.constraintlayout.widget.ConstraintLayout
        android:id="@+id/header"
        android:layout_width="349dp"
        android:layout_height="wrap_content"
        android:layout_marginStart="32dp"
        android:layout_marginTop="58dp"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent">

        <!-- Avatar -->
        <de.hdodenhof.circleimageview.CircleImageView
            android:id="@+id/img_avatar"
            android:layout_width="70dp"
            android:layout_height="70dp"
            android:src="@drawable/ic_person"
            android:contentDescription="Avatar người dùng"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent" />

        <!-- Name and Edit Text -->
        <LinearLayout
            android:id="@+id/text_info"
            android:layout_width="164dp"
            android:layout_height="wrap_content"
            android:layout_marginStart="16dp"
            android:orientation="vertical"
            app:layout_constraintStart_toEndOf="@id/img_avatar"
            app:layout_constraintTop_toTopOf="parent">

            <TextView
                android:id="@+id/tv_name"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="Trương Đăng Khôi"
                android:textColor="@color/setting_text_name"
                android:textSize="19.7sp"
                android:fontFamily="@font/relay_roboto_flex_regular"
                android:fontWeight="700"
                android:lineHeight="24dp" />

            <TextView
                android:id="@+id/tv_edit"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginTop="5dp"
                android:text="Chỉnh sửa thông tin"
                android:textColor="@color/setting_text_edit"
                android:textSize="17.51sp"
                android:fontFamily="@font/relay_roboto_flex_regular"
                android:lineHeight="20.5dp"
                android:contentDescription="Chỉnh sửa thông tin cá nhân" />
        </LinearLayout>

        <!-- Edit Icon -->
        <ImageView
            android:id="@+id/edit_icon"
            android:layout_width="20dp"
            android:layout_height="20dp"
            android:src="@drawable/vector_settings"
            android:contentDescription="Chỉnh sửa thông tin cá nhân"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toTopOf="@id/text_info"
            app:layout_constraintBottom_toBottomOf="@id/text_info" />
    </androidx.constraintlayout.widget.ConstraintLayout>

    <!-- Divider -->
    <View
        android:id="@+id/divider"
        android:layout_width="278dp"
        android:layout_height="0.5dp"
        android:layout_marginTop="1dp"
        android:background="@drawable/line_8_settings"
        app:layout_constraintStart_toStartOf="@id/header"
        app:layout_constraintTop_toBottomOf="@id/header" />

    <!-- ScrollView for Settings -->
    <ScrollView
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:layout_marginTop="16dp"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toBottomOf="@id/divider"
        app:layout_constraintBottom_toBottomOf="parent">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical"
            android:paddingBottom="16dp">

            <!-- Thông tin tài khoản -->
            <include
                android:id="@+id/layout_information"
                layout="@layout/item_setting_row"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginHorizontal="20dp"
                android:layout_marginVertical="12dp" />

            <!-- Giao diện nhà cung cấp -->
            <include
                android:id="@+id/layout_connect"
                layout="@layout/item_setting_row"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginHorizontal="20dp"
                android:layout_marginVertical="12dp" />

            <!-- Thay đổi mật khẩu -->
            <include
                android:id="@+id/layout_change_password"
                layout="@layout/item_setting_row"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginHorizontal="20dp"
                android:layout_marginVertical="12dp" />

            <!-- Yêu cầu xóa tài khoản -->
            <include
                android:id="@+id/layout_delete_account"
                layout="@layout/item_setting_row"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginHorizontal="20dp"
                android:layout_marginVertical="12dp" />

            <!-- Cài đặt -->
            <include
                android:id="@+id/layout_settings"
                layout="@layout/item_setting_row"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginHorizontal="20dp"
                android:layout_marginVertical="12dp" />

            <!-- Đăng xuất -->
            <TextView
                android:id="@+id/layout_sign_out"
                android:layout_width="194dp"
                android:layout_height="48dp"
                android:layout_gravity="end"
                android:layout_marginHorizontal="20dp"
                android:layout_marginVertical="12dp"
                android:background="@drawable/setting_sign_out_gradient"
                android:elevation="4dp"
                android:fontFamily="@font/relay_roboto_flex_regular"
                android:gravity="center"
                android:lineHeight="18dp"
                android:paddingHorizontal="16dp"
                android:paddingVertical="8dp"
                android:text="Đăng xuất"
                android:textColor="@color/white"
                android:textSize="22sp"
                android:contentDescription="Đăng xuất khỏi ứng dụng" />
        </LinearLayout>
    </ScrollView>

</androidx.constraintlayout.widget.ConstraintLayout>
```

### src\main\res\layout\customer_vehicle_filter.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <LinearLayout
        android:background="#FFFFFF"
        android:orientation="vertical"
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <ScrollView
            android:id="@+id/rot0ocrqsqn"
            android:layout_width="match_parent"
            android:layout_height="0dp"
            android:layout_weight="1"
            android:background="@drawable/s003087sw1bffffff">

            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:orientation="vertical">

                <!-- Tiêu đề và nút đóng -->
                <LinearLayout
                    android:id="@+id/r3lq3xaoi8n6"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:gravity="center_vertical"
                    android:background="#FFFFFF"
                    android:paddingVertical="12dp"
                    android:layout_marginTop="12dp"
                    android:layout_marginBottom="16dp"
                    android:layout_marginHorizontal="12dp"
                    android:elevation="2dp"
                    android:orientation="horizontal">

                    <TextView
                        android:id="@+id/r4q7zkhz5wj9"
                        android:textColor="#4D3A4D"
                        android:textSize="18sp"
                        android:textStyle="bold"
                        android:layout_height="wrap_content"
                        android:layout_width="match_parent"
                        android:layout_weight="1"
                        android:text="Bộ lọc tìm kiếm" />

                    <ImageView
                        android:id="@+id/rz3n8dabzscm"
                        android:layout_width="32dp"
                        android:layout_height="32dp"
                        android:src="@drawable/close_cicle"
                        android:scaleType="fitXY" />
                </LinearLayout>

                <!-- Theo loại xe -->
                <LinearLayout
                    android:id="@+id/rw6fld1d1mte"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:paddingBottom="16dp"
                    android:layout_marginBottom="16dp"
                    android:layout_marginHorizontal="12dp"
                    android:orientation="vertical">

                    <TextView
                        android:id="@+id/rvv1babw21a"
                        android:textColor="#4D3A4D"
                        android:textSize="16sp"
                        android:textStyle="bold"
                        android:layout_marginBottom="12dp"
                        android:layout_height="wrap_content"
                        android:layout_width="wrap_content"
                        android:text="Theo loại xe" />

                    <LinearLayout
                        android:id="@+id/ru0titw95a6p"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:layout_marginBottom="12dp"
                        android:orientation="horizontal">

                        <LinearLayout
                            android:id="@+id/re5bkjyzw71a"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:background="@drawable/s4d3a4dsw1cr100"
                            android:paddingVertical="4dp"
                            android:paddingHorizontal="12dp"
                            android:layout_marginEnd="8dp"
                            android:clickable="true"
                            android:focusable="true"
                            android:orientation="vertical">

                            <TextView
                                android:id="@+id/r5fi7w847cf4"
                                android:textColor="#4D3A4D"
                                android:textSize="14sp"
                                android:layout_height="wrap_content"
                                android:layout_width="wrap_content"
                                android:text="Vinfast" />
                        </LinearLayout>

                        <LinearLayout
                            android:id="@+id/r29lmqq8qqka"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:background="@drawable/s003087sw1cr100b0030871f"
                            android:paddingVertical="4dp"
                            android:paddingHorizontal="12dp"
                            android:layout_marginEnd="8dp"
                            android:clickable="true"
                            android:focusable="true"
                            android:orientation="vertical">

                            <TextView
                                android:id="@+id/rtdzyabnxj9h"
                                android:textColor="#003087"
                                android:textSize="14sp"
                                android:textStyle="bold"
                                android:layout_height="wrap_content"
                                android:layout_width="wrap_content"
                                android:text="Honda" />
                        </LinearLayout>

                        <LinearLayout
                            android:id="@+id/r5wpc3jutt9d"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:background="@drawable/s4d3a4dsw1cr100"
                            android:paddingVertical="4dp"
                            android:paddingHorizontal="12dp"
                            android:clickable="true"
                            android:focusable="true"
                            android:orientation="vertical">

                            <TextView
                                android:id="@+id/rk80q24qy51e"
                                android:textColor="#4D3A4D"
                                android:textSize="14sp"
                                android:layout_height="wrap_content"
                                android:layout_width="wrap_content"
                                android:text="Mercedes" />
                        </LinearLayout>
                    </LinearLayout>

                    <LinearLayout
                        android:id="@+id/rmclr5q8pf7f"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:orientation="horizontal">

                        <LinearLayout
                            android:id="@+id/r047t6es9ecg6"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:background="@drawable/s003087sw1cr100b0030871f"
                            android:paddingVertical="4dp"
                            android:paddingHorizontal="12dp"
                            android:layout_marginEnd="8dp"
                            android:clickable="true"
                            android:focusable="true"
                            android:orientation="vertical">

                            <TextView
                                android:id="@+id/r1pubpl9glnt"
                                android:textColor="#003087"
                                android:textSize="14sp"
                                android:textStyle="bold"
                                android:layout_height="wrap_content"
                                android:layout_width="wrap_content"
                                android:text="BMW" />
                        </LinearLayout>

                        <LinearLayout
                            android:id="@+id/rwviyruuyw0d"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:background="@drawable/s4d3a4dsw1cr100"
                            android:paddingVertical="4dp"
                            android:paddingHorizontal="12dp"
                            android:layout_marginEnd="8dp"
                            android:clickable="true"
                            android:focusable="true"
                            android:orientation="vertical">

                            <TextView
                                android:id="@+id/rkeblvd7zmp"
                                android:textColor="#4D3A4D"
                                android:textSize="14sp"
                                android:layout_height="wrap_content"
                                android:layout_width="wrap_content"
                                android:text="Ford" />
                        </LinearLayout>

                        <LinearLayout
                            android:id="@+id/r2lvmia82fj5"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:background="@drawable/s4d3a4dsw1cr100"
                            android:paddingVertical="4dp"
                            android:paddingHorizontal="12dp"
                            android:clickable="true"
                            android:focusable="true"
                            android:orientation="vertical">

                            <TextView
                                android:id="@+id/rbwpmmmhe8l"
                                android:textColor="#4D3A4D"
                                android:textSize="14sp"
                                android:layout_height="wrap_content"
                                android:layout_width="wrap_content"
                                android:text="Toyota" />
                        </LinearLayout>
                    </LinearLayout>
                </LinearLayout>

                <!-- Theo trạng thái -->
                <LinearLayout
                    android:id="@+id/rsuwpb6itn1"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:paddingBottom="16dp"
                    android:layout_marginBottom="16dp"
                    android:layout_marginHorizontal="12dp"
                    android:orientation="vertical">

                    <TextView
                        android:id="@+id/rfy9m05n4qyn"
                        android:textColor="#4D3A4D"
                        android:textSize="16sp"
                        android:textStyle="bold"
                        android:layout_marginBottom="12dp"
                        android:layout_height="wrap_content"
                        android:layout_width="wrap_content"
                        android:text="Theo trạng thái" />

                    <LinearLayout
                        android:id="@+id/rtmf03jggzbh"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:orientation="horizontal">

                        <LinearLayout
                            android:id="@+id/rzvu0zdr3b79"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:background="@drawable/s003087sw1cr100b0030871f"
                            android:paddingVertical="4dp"
                            android:paddingHorizontal="12dp"
                            android:layout_marginEnd="8dp"
                            android:clickable="true"
                            android:focusable="true"
                            android:orientation="vertical">

                            <TextView
                                android:id="@+id/r6tv6q6llfyh"
                                android:textColor="#003087"
                                android:textSize="14sp"
                                android:textStyle="bold"
                                android:layout_height="wrap_content"
                                android:layout_width="wrap_content"
                                android:text="Có sẵn" />
                        </LinearLayout>
                    </LinearLayout>
                </LinearLayout>

                <!-- Theo đánh giá -->
                <LinearLayout
                    android:id="@+id/re338tflgim"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:paddingBottom="16dp"
                    android:layout_marginBottom="16dp"
                    android:layout_marginHorizontal="12dp"
                    android:orientation="vertical">

                    <TextView
                        android:id="@+id/rtfu20we8h1"
                        android:textColor="#4D3A4D"
                        android:textSize="16sp"
                        android:textStyle="bold"
                        android:layout_marginBottom="12dp"
                        android:layout_height="wrap_content"
                        android:layout_width="wrap_content"
                        android:text="Theo đánh giá" />

                    <LinearLayout
                        android:id="@+id/r7r4owx90wkb"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:orientation="vertical">

                        <LinearLayout
                            android:id="@+id/r2re9lvhfwqt"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:layout_marginBottom="6dp"
                            android:orientation="horizontal">

                            <LinearLayout
                                android:id="@+id/rozw79prjrbs"
                                android:layout_width="wrap_content"
                                android:layout_height="wrap_content"
                                android:gravity="center_vertical"
                                android:background="@drawable/s4d3a4dsw1cr100"
                                android:paddingVertical="4dp"
                                android:paddingHorizontal="12dp"
                                android:layout_marginEnd="8dp"
                                android:clickable="true"
                                android:focusable="true"
                                android:orientation="horizontal">

                                <TextView
                                    android:id="@+id/r6vwmwwzhigk"
                                    android:textColor="#4D3A4D"
                                    android:textSize="14sp"
                                    android:textStyle="bold"
                                    android:layout_marginEnd="4dp"
                                    android:layout_height="wrap_content"
                                    android:layout_width="wrap_content"
                                    android:text="5 " />

                                <com.google.android.material.imageview.ShapeableImageView
                                    android:id="@+id/r4y8nv6c7mpc"
                                    app:shapeAppearanceOverlay="@style/cr100"
                                    android:layout_width="12dp"
                                    android:layout_height="12dp"
                                    android:src="@drawable/vector_main"
                                    android:scaleType="fitXY" />
                            </LinearLayout>

                            <LinearLayout
                                android:id="@+id/rx3ytiykf6v"
                                android:layout_width="wrap_content"
                                android:layout_height="wrap_content"
                                android:gravity="center_vertical"
                                android:background="@drawable/s4d3a4dsw1cr100bffbc7d33"
                                android:paddingVertical="4dp"
                                android:paddingHorizontal="12dp"
                                android:layout_marginEnd="8dp"
                                android:clickable="true"
                                android:focusable="true"
                                android:orientation="horizontal">

                                <TextView
                                    android:id="@+id/rdjqxvxj343u"
                                    android:textColor="#4D3A4D"
                                    android:textSize="14sp"
                                    android:textStyle="bold"
                                    android:layout_marginEnd="4dp"
                                    android:layout_height="wrap_content"
                                    android:layout_width="wrap_content"
                                    android:text="5" />

                                <com.google.android.material.imageview.ShapeableImageView
                                    android:id="@+id/rb6215hqc4bl"
                                    app:shapeAppearanceOverlay="@style/cr100"
                                    android:layout_width="12dp"
                                    android:layout_height="12dp"
                                    android:layout_marginEnd="2dp"
                                    android:src="@drawable/vector_main"
                                    android:scaleType="fitXY" />

                                <TextView
                                    android:id="@+id/ry0sjlz6t2q"
                                    android:textColor="#4D3A4D"
                                    android:textSize="14sp"
                                    android:textStyle="bold"
                                    android:layout_marginEnd="5dp"
                                    android:layout_height="wrap_content"
                                    android:layout_width="wrap_content"
                                    android:text="-" />

                                <TextView
                                    android:id="@+id/rzakpxmoxv1"
                                    android:textColor="#4D3A4D"
                                    android:textSize="14sp"
                                    android:textStyle="bold"
                                    android:layout_marginEnd="4dp"
                                    android:layout_height="wrap_content"
                                    android:layout_width="wrap_content"
                                    android:text="4" />

                                <com.google.android.material.imageview.ShapeableImageView
                                    android:id="@+id/rtnetjohacza"
                                    app:shapeAppearanceOverlay="@style/cr100"
                                    android:layout_width="12dp"
                                    android:layout_height="12dp"
                                    android:src="@drawable/vector_main"
                                    android:scaleType="fitXY" />
                            </LinearLayout>

                            <LinearLayout
                                android:id="@+id/rsooed0x193"
                                android:layout_width="wrap_content"
                                android:layout_height="wrap_content"
                                android:gravity="center_vertical"
                                android:background="@drawable/s4d3a4dsw1cr100"
                                android:paddingVertical="4dp"
                                android:paddingHorizontal="12dp"
                                android:layout_marginEnd="8dp"
                                android:clickable="true"
                                android:focusable="true"
                                android:orientation="horizontal">

                                <TextView
                                    android:id="@+id/rl1q0hssiaif"
                                    android:textColor="#4D3A4D"
                                    android:textSize="14sp"
                                    android:textStyle="bold"
                                    android:layout_marginEnd="4dp"
                                    android:layout_height="wrap_content"
                                    android:layout_width="wrap_content"
                                    android:text="4" />

                                <com.google.android.material.imageview.ShapeableImageView
                                    android:id="@+id/rw0l5x2vl8bi"
                                    app:shapeAppearanceOverlay="@style/cr100"
                                    android:layout_width="12dp"
                                    android:layout_height="12dp"
                                    android:src="@drawable/vector_main"
                                    android:scaleType="fitXY" />
                            </LinearLayout>
                        </LinearLayout>

                        <LinearLayout
                            android:id="@+id/rusqd789cwjj"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:gravity="center_vertical"
                            android:background="@drawable/s4d3a4dsw1cr100"
                            android:paddingVertical="4dp"
                            android:paddingHorizontal="12dp"
                            android:layout_marginEnd="8dp"
                            android:clickable="true"
                            android:focusable="true"
                            android:orientation="horizontal">

                            <TextView
                                android:id="@+id/rthh7z3rn2d"
                                android:textColor="#4D3A4D"
                                android:textSize="14sp"
                                android:textStyle="bold"
                                android:layout_marginEnd="4dp"
                                android:layout_height="wrap_content"
                                android:layout_width="wrap_content"
                                android:text="3" />

                            <com.google.android.material.imageview.ShapeableImageView
                                android:id="@+id/rwwi7sxl6nz"
                                app:shapeAppearanceOverlay="@style/cr100"
                                android:layout_width="12dp"
                                android:layout_height="12dp"
                                android:src="@drawable/vector_main"
                                android:scaleType="fitXY" />
                        </LinearLayout>

                        <LinearLayout
                            android:id="@+id/ru6lopcq6jh"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:gravity="center_vertical"
                            android:background="@drawable/s4d3a4dsw1cr100"
                            android:paddingVertical="4dp"
                            android:paddingHorizontal="12dp"
                            android:clickable="true"
                            android:focusable="true"
                            android:orientation="horizontal">

                            <TextView
                                android:id="@+id/rabqwvwqco"
                                android:textColor="#4D3A4D"
                                android:textSize="14sp"
                                android:textStyle="bold"
                                android:layout_marginEnd="4dp"
                                android:layout_height="wrap_content"
                                android:layout_width="wrap_content"
                                android:text="2" />

                            <com.google.android.material.imageview.ShapeableImageView
                                android:id="@+id/rayfaxchsqb8"
                                app:shapeAppearanceOverlay="@style/cr100"
                                android:layout_width="12dp"
                                android:layout_height="12dp"
                                android:layout_marginEnd="2dp"
                                android:src="@drawable/vector_main"
                                android:scaleType="fitXY" />

                            <TextView
                                android:id="@+id/rvzg2lkv0idk"
                                android:textColor="#4D3A4D"
                                android:textSize="14sp"
                                android:textStyle="bold"
                                android:layout_marginEnd="5dp"
                                android:layout_height="wrap_content"
                                android:layout_width="wrap_content"
                                android:text="-" />

                            <TextView
                                android:id="@+id/r9tx64h8qbuu"
                                android:textColor="#4D3A4D"
                                android:textSize="14sp"
                                android:textStyle="bold"
                                android:layout_marginEnd="4dp"
                                android:layout_height="wrap_content"
                                android:layout_width="wrap_content"
                                android:text="1" />

                            <com.google.android.material.imageview.ShapeableImageView
                                android:id="@+id/r46s7tlb9ka4"
                                app:shapeAppearanceOverlay="@style/cr100"
                                android:layout_width="12dp"
                                android:layout_height="12dp"
                                android:src="@drawable/vector_main"
                                android:scaleType="fitXY" />
                        </LinearLayout>
                    </LinearLayout>
                </LinearLayout>

                <!-- Đường phân cách -->
                <LinearLayout
                    android:id="@+id/r33ci7pmxdzl"
                    android:layout_width="match_parent"
                    android:layout_height="1dp"
                    android:background="#4D3A4D"
                    android:layout_marginBottom="15dp"
                    android:layout_marginHorizontal="12dp"
                    android:orientation="vertical" />

                <!-- Nút thiết lập lại và xác nhận -->
                <LinearLayout
                    android:id="@+id/rljmd26t2q9"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:paddingLeft="72dp"
                    android:layout_marginBottom="2dp"
                    android:layout_marginHorizontal="12dp"
                    android:orientation="horizontal">

                    <LinearLayout
                        android:id="@+id/rvai73xq5syc"
                        android:layout_width="0dp"
                        android:layout_height="wrap_content"
                        android:layout_weight="1"
                        android:background="@drawable/s4d3a4dsw1cr12"
                        android:paddingVertical="8dp"
                        android:layout_marginEnd="8dp"
                        android:orientation="vertical">

                        <TextView
                            android:id="@+id/rhokc4oyc7cp"
                            android:textColor="#4D3A4D"
                            android:textSize="14sp"
                            android:textStyle="bold"
                            android:layout_marginHorizontal="24dp"
                            android:layout_height="wrap_content"
                            android:layout_width="wrap_content"
                            android:text="Thiết lập lại" />
                    </LinearLayout>

                    <LinearLayout
                        android:id="@+id/rt94tooyri0r"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:background="@drawable/cr12b003087"
                        android:paddingVertical="8dp"
                        android:paddingHorizontal="24dp"
                        android:clickable="true"
                        android:focusable="true"
                        android:orientation="vertical">

                        <TextView
                            android:id="@+id/rbr2mtec8ucf"
                            android:textColor="#FFF6FC"
                            android:textSize="14sp"
                            android:textStyle="bold"
                            android:layout_height="wrap_content"
                            android:layout_width="wrap_content"
                            android:text="Xác nhận" />
                    </LinearLayout>
                </LinearLayout>
            </LinearLayout>
        </ScrollView>
    </LinearLayout>

</androidx.constraintlayout.widget.ConstraintLayout>

```

### src\main\res\layout\dialog_request_supplement.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:background="#FFFFFF"
    android:orientation="vertical"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <ScrollView
        android:id="@+id/r21ll5e08hu0j"
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_weight="1"
        android:background="#E7EDF4">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical">

            <LinearLayout
                android:id="@+id/r657e2rezujq"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="22dp"
                android:layout_marginBottom="10dp"
                android:layout_marginStart="39dp"
                android:orientation="vertical">

                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="horizontal"
                    android:gravity="center_vertical">

                    <TextView
                        android:id="@+id/rk1bxbo5ts2e"
                        android:textColor="#003087"
                        android:textSize="20sp"
                        android:textStyle="bold"
                        android:layout_marginBottom="9dp"
                        android:layout_height="wrap_content"
                        android:layout_width="0dp"
                        android:layout_weight="1"
                        android:text="Nội dung" />

                    <ImageView
                        android:id="@+id/close_cicle"
                        android:layout_width="32dp"
                        android:layout_height="32dp"
                        android:src="@drawable/close_cicle"
                        android:scaleType="fitXY"
                        android:contentDescription="Đóng dialog"
                        android:clickable="true"
                        android:focusable="true" />
                </LinearLayout>

                <LinearLayout
                    android:id="@+id/rlzc9dbi059n"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:background="@drawable/s000000sw1bfffcfc"
                    android:paddingTop="14dp"
                    android:paddingBottom="331dp"
                    android:paddingLeft="19dp"
                    android:paddingRight="135dp"
                    android:orientation="vertical">

                    <EditText
                        android:id="@+id/ro1uxzv0nk4"
                        android:textColor="#000000"
                        android:textSize="14sp"
                        android:layout_height="wrap_content"
                        android:layout_width="wrap_content"
                        android:text="Nhập yêu cầu tại đây!..."
                        android:inputType="textMultiLine"
                        android:enabled="true"
                        android:hint="Nhập nội dung..." />
                </LinearLayout>
            </LinearLayout>

            <LinearLayout
                android:id="@+id/r7nlv9onk9j3"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:gravity="center_horizontal"
                android:background="@drawable/cr48b003087"
                android:paddingVertical="18dp"
                android:layout_marginBottom="33dp"
                android:layout_marginHorizontal="39dp"
                android:clickable="true"
                android:focusable="true"
                android:orientation="vertical">

                <TextView
                    android:id="@+id/r1n0kyrqqmof"
                    android:textColor="#FFFFFF"
                    android:textSize="22sp"
                    android:textStyle="bold"
                    android:layout_height="wrap_content"
                    android:layout_width="wrap_content"
                    android:text="Gửi" />
            </LinearLayout>
        </LinearLayout>
    </ScrollView>
</LinearLayout>

```

### src\main\res\layout\dialog_vehicle_filter.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:padding="16dp"
    tools:context=".FragmentPages.Admin.AdminVehicleListFragment">

    <!-- Title -->
    <TextView
        android:id="@+id/tv_filter_title"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="@string/filter_vehicles"
        android:textSize="18sp"
        android:textStyle="bold"
        android:textColor="@color/text_title"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

    <!-- Brand Spinner -->
    <TextView
        android:id="@+id/tv_brand_label"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="@string/brand"
        android:textSize="16sp"
        android:layout_marginTop="16dp"
        app:layout_constraintTop_toBottomOf="@id/tv_filter_title"
        app:layout_constraintStart_toStartOf="parent" />

    <Spinner
        android:id="@+id/spinner_brand"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_marginTop="8dp"
        app:layout_constraintTop_toBottomOf="@id/tv_brand_label"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

    <!-- Availability Spinner (Admin only) -->
    <TextView
        android:id="@+id/tv_availability_label"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="@string/availability"
        android:textSize="16sp"
        android:layout_marginTop="16dp"
        app:layout_constraintTop_toBottomOf="@id/spinner_brand"
        app:layout_constraintStart_toStartOf="parent" />

    <Spinner
        android:id="@+id/spinner_availability"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_marginTop="8dp"
        app:layout_constraintTop_toBottomOf="@id/tv_availability_label"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

    <!-- Verification Status Spinner (Admin only) -->
    <TextView
        android:id="@+id/tv_verification_label"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="@string/verification_status"
        android:textSize="16sp"
        android:layout_marginTop="16dp"
        app:layout_constraintTop_toBottomOf="@id/spinner_availability"
        app:layout_constraintStart_toStartOf="parent" />

    <Spinner
        android:id="@+id/spinner_verification"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_marginTop="8dp"
        app:layout_constraintTop_toBottomOf="@id/tv_verification_label"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

    <!-- Fuel Type Spinner (Customer only) -->
    <TextView
        android:id="@+id/tv_fuel_type_label"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="@string/fuel_type"
        android:textSize="16sp"
        android:layout_marginTop="16dp"
        app:layout_constraintTop_toBottomOf="@id/spinner_verification"
        app:layout_constraintStart_toStartOf="parent" />

    <Spinner
        android:id="@+id/spinner_fuel_type"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_marginTop="8dp"
        app:layout_constraintTop_toBottomOf="@id/tv_fuel_type_label"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

    <!-- Rating Range -->
    <TextView
        android:id="@+id/tv_rating_label"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="@string/rating"
        android:textSize="16sp"
        android:layout_marginTop="16dp"
        app:layout_constraintTop_toBottomOf="@id/spinner_fuel_type"
        app:layout_constraintStart_toStartOf="parent" />

    <com.google.android.material.slider.RangeSlider
        android:id="@+id/slider_rating"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_marginTop="8dp"
        android:valueFrom="0.0"
        android:valueTo="5.0"
        android:stepSize="0.1"
        app:layout_constraintTop_toBottomOf="@id/tv_rating_label"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        tools:values="0.0,5.0" />

    <!-- Price Range (Customer only) -->
    <TextView
        android:id="@+id/tv_price_label"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="@string/price_range"
        android:textSize="16sp"
        android:layout_marginTop="16dp"
        app:layout_constraintTop_toBottomOf="@id/slider_rating"
        app:layout_constraintStart_toStartOf="parent" />

    <com.google.android.material.slider.RangeSlider
        android:id="@+id/slider_price"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_marginTop="8dp"
        android:valueFrom="0"
        android:valueTo="5000000"
        android:stepSize="100000"
        app:layout_constraintTop_toBottomOf="@id/tv_price_label"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        tools:values="0,5000000" />

    <!-- Buttons -->
    <Button
        android:id="@+id/btn_clear_filter"
        android:layout_width="0dp"
        android:layout_height="48dp"
        android:text="@string/clear_filter"
        android:textSize="16sp"
        android:backgroundTint="@color/gray"
        android:layout_marginTop="24dp"
        android:layout_marginEnd="8dp"
        app:layout_constraintTop_toBottomOf="@id/slider_price"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toStartOf="@id/btn_apply_filter"
        app:layout_constraintHorizontal_weight="1" />

    <Button
        android:id="@+id/btn_apply_filter"
        android:layout_width="0dp"
        android:layout_height="48dp"
        android:text="@string/apply_filter"
        android:textSize="16sp"
        android:backgroundTint="@color/sky"
        android:layout_marginTop="24dp"
        android:layout_marginStart="8dp"
        app:layout_constraintTop_toBottomOf="@id/slider_price"
        app:layout_constraintStart_toEndOf="@id/btn_clear_filter"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_weight="1" />

    <Button
        android:id="@+id/btn_cancel"
        android:layout_width="0dp"
        android:layout_height="48dp"
        android:text="@string/cancel"
        android:textSize="16sp"
        android:backgroundTint="@color/gradient_register_start"
        android:layout_marginTop="8dp"
        app:layout_constraintTop_toBottomOf="@id/btn_apply_filter"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

</androidx.constraintlayout.widget.ConstraintLayout>

```

### src\main\res\layout\fragment_admin_settings.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#FFFFFF"
    tools:context=".FragmentPages.Admin.AdminSettingsFragment">

    <ScrollView
        android:id="@+id/rbvpgg6jtjse"
        android:layout_width="0dp"
        android:layout_height="0dp"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical">

            <LinearLayout
                android:id="@+id/ryzjg3x9mz6h"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginBottom="25dp"
                android:orientation="vertical">

                <LinearLayout
                    android:id="@+id/rpapl3ee5io8"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:background="#D9D9D9"
                    android:gravity="center_vertical"
                    android:orientation="horizontal"
                    android:paddingHorizontal="16dp"
                    android:paddingVertical="8dp">

                    <TextView
                        android:id="@+id/rb7dbsyk483n"
                        android:layout_width="0dp"
                        android:layout_height="wrap_content"
                        android:layout_weight="1"
                        android:gravity="center"
                        android:text="Cài đặt hệ thống"
                        android:textColor="#003087"
                        android:textSize="25sp"
                        android:textStyle="bold" />
                </LinearLayout>
            </LinearLayout>

            <LinearLayout
                android:id="@+id/ruo1p0hvbn2"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginHorizontal="31dp"
                android:gravity="center_vertical"
                android:orientation="horizontal">

                <ImageView
                    android:id="@+id/rqqkbht2nw9"
                    android:layout_width="70dp"
                    android:layout_height="70dp"
                    android:layout_marginEnd="16dp"
                    android:contentDescription="Avatar admin"
                    android:scaleType="fitXY"
                    tools:src="@mipmap/ic_launcher" />

                <LinearLayout
                    android:id="@+id/rx1lgi4wg30g"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:layout_weight="1"
                    android:layout_marginEnd="12dp"
                    android:orientation="vertical">

                    <TextView
                        android:id="@+id/rzxbt2b9du3b"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:layout_weight="1"
                        android:layout_marginBottom="6dp"
                        android:fontFamily="@font/relay_roboto_flex_regular"
                        android:text="Chị em chúng mình"
                        android:textColor="#4A4A4A"
                        android:textSize="19sp"
                        android:textStyle="bold" />

                    <TextView
                        android:id="@+id/rwemqtod737b"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:fontFamily="@font/relay_roboto_flex_regular"
                        android:text="Chỉnh sửa thông tin"
                        android:textColor="#5FB0FF"
                        android:textSize="17sp" />
                </LinearLayout>

                <ImageView
                    android:id="@+id/ryhyrsup3suq"
                    android:layout_width="20dp"
                    android:layout_height="20dp"
                    android:contentDescription="Edit icon"
                    android:scaleType="fitXY"
                    tools:src="@mipmap/ic_launcher" />
            </LinearLayout>

            <View
                android:id="@+id/r80lphpslvif"
                android:layout_width="278dp"
                android:layout_height="1dp"
                android:layout_marginStart="103dp"
                android:layout_marginBottom="35dp"
                android:background="#B0B0B0" />

            <!-- Quản lý tài khoản quản trị viên -->
            <include
                android:id="@+id/layout_admin_account"
                layout="@layout/item_setting_row"
                android:layout_width="match_parent"
                android:layout_height="48dp"
                android:layout_marginHorizontal="16dp"
                android:layout_marginBottom="17dp" />

            <!-- Cấu hình hoa hồng sàn -->
            <include
                android:id="@+id/layout_commission"
                layout="@layout/item_setting_row"
                android:layout_width="match_parent"
                android:layout_height="48dp"
                android:layout_marginHorizontal="16dp"
                android:layout_marginBottom="17dp" />

            <!-- Cấu hình hệ thống thông báo -->
            <include
                android:id="@+id/layout_notifications"
                layout="@layout/item_setting_row"
                android:layout_width="match_parent"
                android:layout_height="48dp"
                android:layout_marginHorizontal="16dp"
                android:layout_marginBottom="17dp" />

            <!-- Lịch sử thao tác admin -->
            <include
                android:id="@+id/layout_admin_history"
                layout="@layout/item_setting_row"
                android:layout_width="match_parent"
                android:layout_height="48dp"
                android:layout_marginHorizontal="16dp"
                android:layout_marginBottom="18dp" />

            <!-- Nút đăng xuất -->
            <LinearLayout
                android:id="@+id/r6uqs59f1co"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginHorizontal="25dp"
                android:layout_marginBottom="20dp"
                android:background="@drawable/cr12b123094"
                android:clickable="true"
                android:focusable="true"
                android:gravity="center_horizontal"
                android:orientation="vertical"
                android:paddingVertical="15dp">

                <TextView
                    android:id="@+id/rtgo54l4yzea"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:fontFamily="@font/relay_roboto_flex_regular"
                    android:text="Đăng xuất"
                    android:textColor="#FFFFFF"
                    android:textSize="22sp" />
            </LinearLayout>
        </LinearLayout>
    </ScrollView>
</androidx.constraintlayout.widget.ConstraintLayout>

```

### src\main\res\layout\fragment_admin_statistics.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#FFFFFF"
    android:orientation="vertical"
    tools:context=".FragmentPages.Admin.AdminStatisticsFragment">

    <ScrollView
        android:id="@+id/r8w6st0867vv"
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_weight="1"
        android:background="#FFFFFF">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical">

            <LinearLayout
                android:id="@+id/rwd8jwb325x"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginBottom="29dp"
                android:orientation="vertical">

                <LinearLayout
                    android:id="@+id/rha6jn85huxv"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:background="#D9D9D9"
                    android:gravity="center_vertical"
                    android:orientation="horizontal"
                    android:paddingHorizontal="16dp"
                    android:paddingVertical="8dp">

                    <TextView
                        android:id="@+id/rz4lyu1iv1t"
                        android:layout_width="0dp"
                        android:layout_height="wrap_content"
                        android:layout_weight="1"
                        android:gravity="center"
                        android:text="Báo cáo thống kê"
                        android:textColor="#003087"
                        android:textSize="25sp"
                        android:textStyle="bold" />

                    <LinearLayout
                        android:id="@+id/rmbyoaze73jh"
                        android:layout_width="30dp"
                        android:layout_height="30dp"
                        android:orientation="vertical" />
                </LinearLayout>
            </LinearLayout>

            <TextView
                android:id="@+id/rd4i2mchnigr"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginStart="29dp"
                android:layout_marginBottom="7dp"
                android:text="Số liệu tổng quát"
                android:textColor="#3C3C3C"
                android:textSize="14sp"
                android:textStyle="bold" />

            <LinearLayout
                android:id="@+id/r8wnyuj074ab"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginBottom="8dp"
                android:orientation="horizontal"
                android:paddingHorizontal="16dp">

                <LinearLayout
                    android:id="@+id/reftx1mj8"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:layout_marginEnd="21dp"
                    android:layout_weight="1"
                    android:background="@drawable/cr4bfbfbfb"
                    android:orientation="vertical"
                    android:paddingVertical="11dp">

                    <TextView
                        android:id="@+id/rk8yaftk1cxq"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:layout_marginStart="12dp"
                        android:layout_marginBottom="5dp"
                        android:text="Tổng số người dùng"
                        android:textColor="#565656"
                        android:textSize="11sp"
                        android:textStyle="bold" />

                    <LinearLayout
                        android:id="@+id/r78265qmy47h"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:layout_marginHorizontal="12dp"
                        android:gravity="center_vertical"
                        android:orientation="horizontal">

                        <TextView
                            android:id="@+id/rp42wc0fjdv"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:text="25,000"
                            android:textColor="#3E3E3E"
                            android:textSize="18sp"
                            android:textStyle="bold" />

                        <View
                            android:layout_width="0dp"
                            android:layout_height="0dp"
                            android:layout_weight="1" />

                        <LinearLayout
                            android:id="@+id/r1zm6pqdu6pz"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:background="@drawable/cr3be53535"
                            android:gravity="center_vertical"
                            android:orientation="horizontal"
                            android:paddingVertical="2dp"
                            android:paddingStart="3dp"
                            android:paddingEnd="2dp">

                            <TextView
                                android:id="@+id/re2jt0zg5a0k"
                                android:layout_width="wrap_content"
                                android:layout_height="wrap_content"
                                android:layout_marginEnd="2dp"
                                android:text="10%"
                                android:textColor="#E53535"
                                android:textSize="7sp" />

                            <ImageView
                                android:id="@+id/r3qtlrf08vac"
                                android:layout_width="7dp"
                                android:layout_height="6dp"
                                android:scaleType="fitXY"
                                tools:src="@mipmap/ic_launcher" />
                        </LinearLayout>
                    </LinearLayout>
                </LinearLayout>

                <LinearLayout
                    android:id="@+id/r895aux50i9h"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:layout_weight="1"
                    android:background="@drawable/cr4bfbfbfb"
                    android:orientation="vertical"
                    android:paddingVertical="11dp">

                    <TextView
                        android:id="@+id/ritodqegalis"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:layout_marginStart="12dp"
                        android:layout_marginBottom="5dp"
                        android:text="Tổng chủ xe"
                        android:textColor="#565656"
                        android:textSize="11sp"
                        android:textStyle="bold" />

                    <LinearLayout
                        android:id="@+id/rg6w3e5ye9p"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:layout_marginHorizontal="12dp"
                        android:gravity="center_vertical"
                        android:orientation="horizontal">

                        <TextView
                            android:id="@+id/rtcscqww51js"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:text="1000"
                            android:textColor="#3E3E3E"
                            android:textSize="18sp"
                            android:textStyle="bold" />

                        <View
                            android:layout_width="0dp"
                            android:layout_height="0dp"
                            android:layout_weight="1" />

                        <LinearLayout
                            android:id="@+id/rxhsq8ph7sll"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:background="@drawable/cr3b19b800"
                            android:gravity="center_vertical"
                            android:orientation="horizontal"
                            android:paddingVertical="2dp"
                            android:paddingStart="2dp"
                            android:paddingEnd="3dp">

                            <TextView
                                android:id="@+id/rjfv6g5djwdm"
                                android:layout_width="wrap_content"
                                android:layout_height="wrap_content"
                                android:layout_marginEnd="2dp"
                                android:text="10%"
                                android:textColor="#19B800"
                                android:textSize="7sp" />

                            <ImageView
                                android:id="@+id/rerhjwf5h2qm"
                                android:layout_width="7dp"
                                android:layout_height="6dp"
                                android:scaleType="fitXY"
                                tools:src="@mipmap/ic_launcher" />
                        </LinearLayout>
                    </LinearLayout>
                </LinearLayout>
            </LinearLayout>

            <LinearLayout
                android:id="@+id/r0elgidq9fppb"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginBottom="20dp"
                android:orientation="horizontal"
                android:paddingHorizontal="16dp">

                <LinearLayout
                    android:id="@+id/r0twqmc1q473"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:layout_weight="1"
                    android:layout_marginEnd="21dp"
                    android:background="@drawable/cr4bfbfbfb"
                    android:orientation="vertical"
                    android:paddingVertical="11dp">

                    <TextView
                        android:id="@+id/rpnj08cb0tu7"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:layout_marginStart="12dp"
                        android:layout_marginBottom="5dp"
                        android:text="Doanh thu"
                        android:textColor="#565656"
                        android:textSize="11sp"
                        android:textStyle="bold" />

                    <TextView
                        android:id="@+id/r26rof30hetx"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:layout_marginStart="12dp"
                        android:text="900M"
                        android:textColor="#3E3E3E"
                        android:textSize="18sp"
                        android:textStyle="bold" />
                </LinearLayout>

                <LinearLayout
                    android:id="@+id/rhex6wv8u2m"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:layout_weight="1"
                    android:background="@drawable/cr4bfbfbfb"
                    android:orientation="vertical"
                    android:paddingVertical="11dp">

                    <TextView
                        android:id="@+id/r43m7myc54p3"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:layout_marginStart="12dp"
                        android:layout_marginBottom="5dp"
                        android:text="Doanh thu tháng này"
                        android:textColor="#565656"
                        android:textSize="11sp"
                        android:textStyle="bold" />

                    <TextView
                        android:id="@+id/rk10ooehcyo"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:layout_marginStart="12dp"
                        android:text="90,000,000"
                        android:textColor="#3E3E3E"
                        android:textSize="18sp"
                        android:textStyle="bold" />
                </LinearLayout>
            </LinearLayout>

            <TextView
                android:id="@+id/rmdmzgx4jh9"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginStart="29dp"
                android:layout_marginBottom="5dp"
                android:text="Thống kê người dùng"
                android:textColor="#3C3C3C"
                android:textSize="14sp"
                android:textStyle="bold" />

            <LinearLayout
                android:id="@+id/r4bw82dxnrcg"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginHorizontal="16dp"
                android:layout_marginBottom="27dp"
                android:orientation="vertical">

                <LinearLayout
                    android:id="@+id/rtdtl3diaex7"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:background="#FBFBFB"
                    android:elevation="2dp"
                    android:orientation="vertical"
                    android:paddingVertical="12dp">

                    <TextView
                        android:id="@+id/rswmq3grymt"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:layout_marginStart="24dp"
                        android:layout_marginBottom="1dp"
                        android:text="3,000"
                        android:textColor="#000000"
                        android:textSize="9sp" />

                        <com.uit.carrental.FragmentPages.Admin.SimpleBarChart
                            android:id="@+id/ro9qh5aork5"
                            android:layout_width="match_parent"
                            android:layout_height="100dp"
                            android:layout_marginStart="24dp"
                            android:layout_marginBottom="3dp" />

                    <LinearLayout
                        android:id="@+id/r7uuyqweexgs"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:layout_marginBottom="5dp"
                        android:gravity="center_horizontal"
                        android:orientation="vertical">

                        <LinearLayout
                            android:id="@+id/ruttd7bict"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:gravity="center_vertical"
                            android:orientation="horizontal"
                            android:paddingEnd="9dp">

                            <TextView
                                android:id="@+id/rny34gwbes3l"
                                android:layout_width="wrap_content"
                                android:layout_height="wrap_content"
                                android:layout_marginEnd="21dp"
                                android:text="T11"
                                android:textColor="#000000"
                                android:textSize="9sp" />

                            <TextView
                                android:id="@+id/ratufam80bpg"
                                android:layout_width="wrap_content"
                                android:layout_height="wrap_content"
                                android:layout_marginEnd="23dp"
                                android:text="T12"
                                android:textColor="#000000"
                                android:textSize="9sp" />

                            <TextView
                                android:id="@+id/r29itk2f1q1q"
                                android:layout_width="wrap_content"
                                android:layout_height="wrap_content"
                                android:layout_marginEnd="27dp"
                                android:text="T1"
                                android:textColor="#000000"
                                android:textSize="9sp" />

                            <TextView
                                android:id="@+id/rh8gbd51lmnp"
                                android:layout_width="wrap_content"
                                android:layout_height="wrap_content"
                                android:layout_marginEnd="25dp"
                                android:text="T2"
                                android:textColor="#000000"
                                android:textSize="9sp" />

                            <TextView
                                android:id="@+id/ryjaco85a6bm"
                                android:layout_width="wrap_content"
                                android:layout_height="wrap_content"
                                android:layout_marginEnd="25dp"
                                android:text="T3"
                                android:textColor="#000000"
                                android:textSize="9sp" />

                            <TextView
                                android:id="@+id/ro3yfy1c989i"
                                android:layout_width="wrap_content"
                                android:layout_height="wrap_content"
                                android:layout_marginEnd="25dp"
                                android:text="T4"
                                android:textColor="#000000"
                                android:textSize="9sp" />

                            <TextView
                                android:id="@+id/r569dyhpllx9"
                                android:layout_width="wrap_content"
                                android:layout_height="wrap_content"
                                android:layout_marginEnd="24dp"
                                android:text="T5"
                                android:textColor="#000000"
                                android:textSize="9sp" />

                            <TextView
                                android:id="@+id/r6oa8ct96e0e"
                                android:layout_width="wrap_content"
                                android:layout_height="wrap_content"
                                android:text="T6"
                                android:textColor="#000000"
                                android:textSize="9sp" />
                        </LinearLayout>
                    </LinearLayout>

                    <LinearLayout
                        android:id="@+id/r7f5kcc79w6"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:gravity="end"
                        android:orientation="vertical">

                        <TextView
                            android:id="@+id/rjf3zbmrthy"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:layout_marginEnd="17dp"
                            android:text="Xem chi tiết"
                            android:textColor="#B92C2C"
                            android:textSize="12sp" />
                    </LinearLayout>
                </LinearLayout>
            </LinearLayout>

            <TextView
                android:id="@+id/rkpw45inpofe"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginStart="29dp"
                android:layout_marginBottom="10dp"
                android:text="Thống kê doanh thu"
                android:textColor="#3C3C3C"
                android:textSize="14sp"
                android:textStyle="bold" />

            <RelativeLayout
                android:id="@+id/r15sr6ipgnjs_rl"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginHorizontal="16dp"
                android:layout_marginBottom="20dp">

                <ImageView
                    android:id="@+id/r15sr6ipgnjs"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:scaleType="fitXY"
                    tools:src="@mipmap/ic_launcher" />

                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="155dp"
                    android:orientation="vertical"
                    android:paddingBottom="10dp">

                    <LinearLayout
                        android:id="@+id/r7f5kcc79w6_revenue"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:gravity="end"
                        android:orientation="vertical">

                        <TextView
                            android:id="@+id/rjf3zbmrthy_revenue"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:layout_marginEnd="17dp"
                            android:text="Xem chi tiết"
                            android:textColor="#B92C2C"
                            android:textSize="12sp" />
                    </LinearLayout>
                </LinearLayout>
            </RelativeLayout>

            <LinearLayout
                android:id="@+id/r7br5h9c61rw"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginBottom="1dp"
                android:orientation="vertical">

                <TextView
                    android:id="@+id/raqv6n9i39qv"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginStart="16dp"
                    android:text="Top 5 xe được thuê nhiều nhất"
                    android:textColor="#3C3C3C"
                    android:textSize="14sp"
                    android:textStyle="bold" />

                <TextView
                    android:id="@+id/r9xolrvo8zi"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginStart="16dp"
                    android:layout_marginBottom="19dp"
                    android:text="Trong vòng 30 ngày"
                    android:textColor="#3C3C3C"
                    android:textSize="14sp" />

                <LinearLayout
                    android:id="@+id/rb280jomjzh5"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="vertical">

                    <LinearLayout
                        android:id="@+id/rb7mgn9yjdge"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:layout_marginHorizontal="24dp"
                        android:layout_marginBottom="5dp"
                        android:gravity="center_vertical"
                        android:orientation="horizontal">

                        <TextView
                            android:id="@+id/rsts6l9r6ubs"
                            android:layout_width="0dp"
                            android:layout_height="wrap_content"
                            android:layout_weight="1"
                            android:gravity="center"
                            android:text="Sản phẩm"
                            android:textColor="#555555"
                            android:textSize="14sp"
                            android:textStyle="bold" />

                        <TextView
                            android:id="@+id/rtndzqxeb78g"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:layout_marginEnd="19dp"
                            android:text="Tổng đơn"
                            android:textColor="#555555"
                            android:textSize="14sp"
                            android:textStyle="bold" />

                        <TextView
                            android:id="@+id/rjff0jlz5dc"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:text="Doanh thu"
                            android:textColor="#555555"
                            android:textSize="14sp"
                            android:textStyle="bold" />
                    </LinearLayout>

                    <androidx.recyclerview.widget.RecyclerView
                        android:id="@+id/rutuu0f5fk3"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:background="@drawable/sbbbbbbsw1"
                        android:elevation="4dp"
                        android:paddingTop="5dp"
                        android:paddingBottom="23dp"
                        tools:listitem="@layout/vehicle_stat_item" />
                </LinearLayout>
            </LinearLayout>
        </LinearLayout>
    </ScrollView>
</LinearLayout>
```

### src\main\res\layout\fragment_admin_user_list.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/white"
    tools:context=".FragmentPages.Admin.AdminUserListFragment">

    <LinearLayout
        android:id="@+id/header_layout"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="@dimen/_16sdp"
        android:orientation="vertical"
        android:padding="@dimen/_16sdp"
        app:layout_constraintTop_toTopOf="parent">

        <TextView
            android:id="@+id/tv_greeting"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:fontFamily="@font/relay_roboto_flex_regular"
            android:text="Hi Admin!"
            android:textColor="@color/black"
            android:textSize="20sp"
            android:textStyle="bold"
            tools:ignore="HardcodedText" />

        <TextView
            android:id="@+id/tv_subtitle"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="@dimen/_4sdp"
            android:fontFamily="@font/relay_roboto_flex_regular"
            android:text="Quản lý người dùng của bạn!"
            android:textColor="@color/text_input_hint"
            android:textSize="14sp"
            tools:ignore="HardcodedText" />
    </LinearLayout>

    <LinearLayout
        android:id="@+id/search_layout"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:gravity="center_vertical"
        android:paddingHorizontal="26dp"
        android:layout_marginTop="8dp"
        android:layout_marginBottom="8dp"
        android:orientation="horizontal"
        app:layout_constraintTop_toBottomOf="@+id/header_layout">

        <!-- Nút Filter -->
        <ImageView
            android:id="@+id/filter_button"
            android:layout_width="24dp"
            android:layout_height="24dp"
            android:layout_marginEnd="8dp"
            android:contentDescription="Filter"
            android:scaleType="fitXY"
            android:src="@drawable/ic_filter"
            tools:ignore="HardcodedText" />

        <!-- Thanh tìm kiếm -->
        <LinearLayout
            android:id="@+id/search_container"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:background="@drawable/s4d3a4dsw1cr8bffffff"
            android:clickable="true"
            android:focusable="true"
            android:gravity="center_vertical"
            android:orientation="horizontal"
            android:paddingVertical="4dp">

            <EditText
                android:id="@+id/search_input"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:background="@null"
                android:hint="Tìm kiếm"
                android:inputType="text"
                android:textColor="#716676"
                android:textColorHint="#716676"
                android:textSize="16sp"
                tools:ignore="HardcodedText" />

            <ImageView
                android:id="@+id/search_button"
                android:layout_width="24dp"
                android:layout_height="24dp"
                android:layout_marginEnd="4dp"
                android:contentDescription="Search"
                android:scaleType="fitXY"
                android:src="@drawable/ic_search"
                tools:ignore="HardcodedText" />
        </LinearLayout>
    </LinearLayout>

    <LinearLayout
        android:id="@+id/count_layout"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginStart="16dp"
        android:layout_marginTop="8dp"
        android:orientation="horizontal"
        app:layout_constraintTop_toBottomOf="@+id/search_layout">

        <TextView
            android:id="@+id/tv_user_count"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:fontFamily="@font/relay_roboto_flex_regular"
            android:text="Tổng số người dùng: 0"
            android:textColor="@color/text_input_hint"
            android:textSize="14sp"
            tools:ignore="HardcodedText" />

        <TextView
            android:id="@+id/btn_user_stats"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginStart="16dp"
            android:background="@drawable/cr12b003087"
            android:fontFamily="@font/relay_roboto_flex_regular"
            android:paddingHorizontal="12dp"
            android:paddingVertical="4dp"
            android:text="Thống kê người dùng"
            android:textColor="#FFFFFF"
            android:textSize="14sp"
            android:clickable="true"
            android:focusable="true"
            tools:ignore="HardcodedText" />
    </LinearLayout>

    <androidx.recyclerview.widget.RecyclerView
        android:id="@+id/user_list"
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_marginTop="8dp"
        app:layout_constraintBottom_toTopOf="@+id/pagination_layout"
        app:layout_constraintTop_toBottomOf="@+id/count_layout"
        tools:listitem="@layout/item_user" />

    <LinearLayout
        android:id="@+id/pagination_layout"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:gravity="center_vertical"
        android:orientation="horizontal"
        android:paddingHorizontal="88dp"
        android:layout_marginBottom="15dp"
        app:layout_constraintBottom_toBottomOf="parent">

        <ImageView
            android:id="@+id/prev_page_button"
            android:layout_width="24dp"
            android:layout_height="24dp"
            android:layout_marginEnd="24dp"
            android:scaleType="fitXY"
            android:src="@drawable/ic_pre"
            tools:ignore="ContentDescription" />

        <LinearLayout
            android:id="@+id/page_buttons_container"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:layout_marginEnd="12dp"
            android:orientation="horizontal">

            <LinearLayout
                android:id="@+id/page_1_button"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:background="@drawable/cr15b003087"
                android:clickable="true"
                android:focusable="true"
                android:orientation="vertical"
                android:paddingHorizontal="14dp"
                android:paddingVertical="7dp"
                android:layout_marginEnd="10dp">

                <TextView
                    android:id="@+id/page_1_text"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="1"
                    android:textColor="#FFFFFF"
                    android:textSize="20sp"
                    android:textStyle="bold" />
            </LinearLayout>

            <LinearLayout
                android:id="@+id/page_2_button"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:background="@drawable/s003087sw1cr15bffffff"
                android:clickable="true"
                android:focusable="true"
                android:orientation="vertical"
                android:paddingHorizontal="14dp"
                android:paddingVertical="7dp"
                android:layout_marginEnd="10dp">

                <TextView
                    android:id="@+id/page_2_text"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="2"
                    android:textColor="#003087"
                    android:textSize="20sp"
                    android:textStyle="bold" />
            </LinearLayout>

            <LinearLayout
                android:id="@+id/page_3_button"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:background="@drawable/s003087sw1cr15bffffff"
                android:clickable="true"
                android:focusable="true"
                android:orientation="vertical"
                android:paddingHorizontal="14dp"
                android:paddingVertical="7dp">

                <TextView
                    android:id="@+id/page_3_text"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="3"
                    android:textColor="#003087"
                    android:textSize="20sp"
                    android:textStyle="bold" />
            </LinearLayout>
        </LinearLayout>

        <ImageView
            android:id="@+id/next_page_button"
            android:layout_width="24dp"
            android:layout_height="24dp"
            android:scaleType="fitXY"
            android:src="@drawable/ic_next"
            tools:ignore="ContentDescription" />
    </LinearLayout>
</androidx.constraintlayout.widget.ConstraintLayout>

```

### src\main\res\layout\fragment_admin_vehicle_list.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#FFFFFF"
    tools:context=".FragmentPages.Admin.AdminVehicleListFragment">

    <!-- Thanh tìm kiếm và nút filter -->
    <LinearLayout
        android:id="@+id/search_layout"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:gravity="center_vertical"
        android:paddingHorizontal="26dp"
        android:layout_marginTop="16dp"
        android:layout_marginBottom="16dp"
        android:orientation="horizontal"
        app:layout_constraintTop_toTopOf="parent">

        <!-- Nút Filter -->
        <ImageView
            android:id="@+id/filter_button"
            android:layout_width="24dp"
            android:layout_height="24dp"
            android:layout_marginEnd="8dp"
            android:src="@drawable/ic_filter"
            android:contentDescription="@string/filter_vehicles"
            android:scaleType="fitXY" />

        <!-- Thanh tìm kiếm -->
        <LinearLayout
            android:id="@+id/rmhryoy6hglh"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:gravity="center_vertical"
            android:background="@drawable/s4d3a4dsw1cr8bffffff"
            android:paddingVertical="4dp"
            android:clickable="true"
            android:focusable="true"
            android:orientation="horizontal">

            <EditText
                android:id="@+id/search_input"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:hint="@string/search_vehicles"
                android:textColor="#716676"
                android:textColorHint="#716676"
                android:textSize="16sp"
                android:background="@null"
                android:inputType="text"
                android:imeOptions="actionSearch" />

            <ImageView
                android:id="@+id/search_button"
                android:layout_width="24dp"
                android:layout_height="24dp"
                android:layout_marginEnd="4dp"
                android:src="@drawable/ic_search"
                android:contentDescription="@string/search"
                android:scaleType="fitXY" />
        </LinearLayout>
    </LinearLayout>

    <!-- Số lượng xe -->
    <TextView
        android:id="@+id/tv_vehicle_count"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="@string/total_vehicles"
        android:textSize="16sp"
        android:layout_marginStart="26dp"
        android:layout_marginTop="8dp"
        app:layout_constraintTop_toBottomOf="@id/search_layout"
        app:layout_constraintStart_toStartOf="parent" />

    <!-- Danh sách xe -->
    <androidx.recyclerview.widget.RecyclerView
        android:id="@+id/recycler_view_vehicles"
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_marginTop="8dp"
        app:layout_constraintTop_toBottomOf="@id/tv_vehicle_count"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintBottom_toBottomOf="parent"
        tools:listitem="@layout/admin_vehicle_card" />

</androidx.constraintlayout.widget.ConstraintLayout>

```

### src\main\res\layout\fragment_chat.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/white">

    <!-- Draggable Chat Container -->
    <LinearLayout
        android:id="@+id/draggable_chat_container"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:orientation="vertical"
        android:background="@drawable/rectangle_199_ai"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent">

        <!-- Close Button -->

        <!-- Chat RecyclerView -->

        <ImageView
            android:id="@+id/close_button"
            android:layout_width="match_parent"
            android:layout_height="40dp"
            android:layout_gravity="end"
            android:layout_margin="8dp"
            android:contentDescription="Đóng khung chat"
            android:padding="8dp"
            android:src="@drawable/create_account_arrow" />

        <androidx.recyclerview.widget.RecyclerView
            android:id="@+id/chat_recycler_view"
            android:layout_width="match_parent"
            android:layout_height="0dp"
            android:layout_weight="1"
            android:padding="8dp"
            android:clipToPadding="false"
            android:scrollbars="vertical" />

        <!-- Input Area -->
        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="horizontal"
            android:padding="8dp"
            android:background="@drawable/rectangle_ai"
            android:layout_margin="8dp">

            <EditText
                android:id="@+id/message_input"
                android:layout_width="0dp"
                android:layout_height="48dp"
                android:layout_weight="1"
                android:background="@drawable/round_card"
                android:hint="@string/chat_hint"
                android:paddingStart="12dp"
                android:paddingEnd="12dp"
                android:textColor="@color/white"
                android:textColorHint="@color/input_text_color"
                android:fontFamily="@font/relay_roboto_flex_regular"
                android:textSize="16sp" />

            <ImageView
                android:id="@+id/send_button"
                android:layout_width="40dp"
                android:layout_height="40dp"
                android:src="@drawable/icon1_ai"
                android:contentDescription="@string/send_content_description"
                android:padding="8dp"
                android:layout_marginStart="8dp" />
        </LinearLayout>
    </LinearLayout>

</androidx.constraintlayout.widget.ConstraintLayout>

```

### src\main\res\layout\fragment_user_stats.xml
```xml
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:background="#FFFFFF"
    android:orientation="vertical"
    android:layout_width="match_parent"
    android:layout_height="match_parent">
    <ScrollView
        android:id="@+id/rlizjq6p6tjr"
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_weight="1"
        android:background="#FAFCFF">
        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical">
            <LinearLayout
                android:id="@+id/reu0knkgwgng"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:gravity="center_vertical"
                android:background="#D9D9D9"
                android:paddingVertical="10dp"
                android:paddingHorizontal="3dp"
                android:layout_marginBottom="15dp"
                android:orientation="horizontal">
                <ImageView
                    android:id="@+id/rj72dc7rtuc"
                    android:layout_width="30dp"
                    android:layout_height="30dp"
                    android:src="@drawable/ic_arrow_left"
                    android:scaleType="fitXY"
                    />
                <View
                    android:layout_width="0dp"
                    android:layout_height="0dp"
                    android:layout_weight="1"
                    />
                <TextView
                    android:id="@+id/r7jyowi2xqwx"
                    android:textColor="#003087"
                    android:textSize="26sp"
                    android:textStyle="bold"
                    android:layout_height="wrap_content"
                    android:layout_width="wrap_content"
                    android:text="XÁC MINH TÀI KHOẢN"
                    />
                <View
                    android:layout_width="0dp"
                    android:layout_height="0dp"
                    android:layout_weight="1"
                    />
                <LinearLayout
                    android:id="@+id/rhwaf5iijf3r"
                    android:layout_width="30dp"
                    android:layout_height="30dp"
                    android:orientation="vertical">
                </LinearLayout>
            </LinearLayout>
            <LinearLayout
                android:id="@+id/rbnavoynwwcp"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginBottom="18dp"
                android:layout_marginHorizontal="43dp"
                android:orientation="vertical">
                <LinearLayout
                    android:id="@+id/req250jtgw8t"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:gravity="center_vertical"
                    android:layout_marginBottom="20dp"
                    android:orientation="horizontal">
                    <ImageView
                        android:id="@+id/rjorhrg7xhw"
                        android:layout_width="142dp"
                        android:layout_height="100dp"
                        android:layout_marginEnd="10dp"
                        android:src="@mipmap/ic_launcher"
                        android:scaleType="fitXY"
                        />
                    <LinearLayout
                        android:id="@+id/rfbbvefku96"
                        android:layout_width="0dp"
                        android:layout_height="wrap_content"
                        android:layout_weight="1"
                        android:paddingVertical="10dp"
                        android:orientation="vertical">
                        <TextView
                            android:id="@+id/rxntl0e8qr7m"
                            android:textColor="#003087"
                            android:textSize="22sp"
                            android:textStyle="bold"
                            android:layout_marginBottom="10dp"
                            android:layout_marginHorizontal="10dp"
                            android:layout_height="wrap_content"
                            android:layout_width="match_parent"
                            android:layout_weight="1"
                            android:gravity="center"
                            android:text="Tên người dùng"
                            />
                        <TextView
                            android:id="@+id/rhj4q0f9p29s"
                            android:textColor="#000000"
                            android:textSize="16sp"
                            android:layout_marginHorizontal="11dp"
                            android:layout_height="wrap_content"
                            android:layout_width="match_parent"
                            android:layout_weight="1"
                            android:gravity="center"
                            android:text="Thông tin người dùng"
                            />
                    </LinearLayout>
                </LinearLayout>
                <TextView
                    android:id="@+id/rxem3gpl3efc"
                    android:textColor="#000000"
                    android:textSize="16sp"
                    android:layout_marginBottom="10dp"
                    android:layout_marginStart="12dp"
                    android:layout_height="wrap_content"
                    android:layout_width="wrap_content"
                    android:text="Ảnh CCCD (mặt trước):"
                    />
                <ImageView
                    android:id="@+id/r6ijhjkh2w4x"
                    android:layout_width="match_parent"
                    android:layout_height="169dp"
                    android:layout_marginBottom="20dp"
                    android:layout_marginHorizontal="12dp"
                    android:src="@mipmap/ic_launcher"
                    android:scaleType="fitXY"
                    />
                <TextView
                    android:id="@+id/rf9ah2n56ocp"
                    android:textColor="#000000"
                    android:textSize="16sp"
                    android:layout_marginBottom="10dp"
                    android:layout_marginStart="12dp"
                    android:layout_height="wrap_content"
                    android:layout_width="wrap_content"
                    android:text="Ảnh CCCD (mặt sau):"
                    />
                <ImageView
                    android:id="@+id/ri7x9glaq17"
                    android:layout_width="match_parent"
                    android:layout_height="169dp"
                    android:layout_marginBottom="20dp"
                    android:layout_marginHorizontal="12dp"
                    android:src="@mipmap/ic_launcher"
                    android:scaleType="fitXY"
                    />
                <TextView
                    android:id="@+id/resyxc24w8x"
                    android:textColor="#000000"
                    android:textSize="16sp"
                    android:layout_marginBottom="10dp"
                    android:layout_marginStart="12dp"
                    android:layout_height="wrap_content"
                    android:layout_width="wrap_content"
                    android:text="Ảnh bằng lái xe:"
                    />
                <ImageView
                    android:id="@+id/rnou1o5qbz7l"
                    android:layout_width="match_parent"
                    android:layout_height="174dp"
                    android:layout_marginHorizontal="12dp"
                    android:src="@mipmap/ic_launcher"
                    android:scaleType="fitXY"
                    />
            </LinearLayout>
            <LinearLayout
                android:id="@+id/reoetm4zwh4m"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:gravity="center_horizontal"
                android:layout_marginBottom="16dp"
                android:orientation="vertical">
                <LinearLayout
                    android:id="@+id/rc4povqvxwjh"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:orientation="horizontal">
                    <LinearLayout
                        android:id="@+id/rygcfobvaozi"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:background="@drawable/cr48bff4500"
                        android:paddingVertical="15dp"
                        android:paddingHorizontal="39dp"
                        android:layout_marginVertical="1dp"
                        android:layout_marginEnd="39dp"
                        android:clickable="true"
                        android:focusable="true"
                        android:orientation="vertical">
                        <TextView
                            android:id="@+id/ror06nr4i9m"
                            android:textColor="#FFFFFF"
                            android:textSize="22sp"
                            android:textStyle="bold"
                            android:layout_height="wrap_content"
                            android:layout_width="wrap_content"
                            android:text="Duyệt"
                            />
                    </LinearLayout>
                    <LinearLayout
                        android:id="@+id/rgfc3wpe0gx"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:background="@drawable/cr48bcacaca"
                        android:paddingVertical="15dp"
                        android:paddingHorizontal="25dp"
                        android:clickable="true"
                        android:focusable="true"
                        android:orientation="vertical">
                        <TextView
                            android:id="@+id/rtgpxg8pvcu"
                            android:textColor="#FFFFFF"
                            android:textSize="22sp"
                            android:textStyle="bold"
                            android:layout_height="wrap_content"
                            android:layout_width="wrap_content"
                            android:text="Từ chối"
                            />
                    </LinearLayout>
                </LinearLayout>
            </LinearLayout>
            <LinearLayout
                android:id="@+id/ryzlxldw14do"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:gravity="center_horizontal"
                android:layout_marginBottom="18dp"
                android:orientation="vertical">
                <LinearLayout
                    android:id="@+id/ry07qbxzq9t"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:background="@drawable/cr48b003087"
                    android:paddingVertical="15dp"
                    android:paddingHorizontal="7dp"
                    android:clickable="true"
                    android:focusable="true"
                    android:orientation="vertical">
                    <TextView
                        android:id="@+id/rmfrles0dexi"
                        android:textColor="#FFFFFF"
                        android:textSize="22sp"
                        android:textStyle="bold"
                        android:layout_height="wrap_content"
                        android:layout_width="wrap_content"
                        android:text="Yêu cầu bổ sung"
                        />
                </LinearLayout>
            </LinearLayout>
            <ImageView
                android:id="@+id/rkodxw1boy8r"
                android:layout_width="32dp"
                android:layout_height="1dp"
                android:layout_marginStart="43dp"
                android:src="@mipmap/ic_launcher"
                android:scaleType="fitXY"
                />
        </LinearLayout>
    </ScrollView>
</LinearLayout>

```

### src\main\res\layout\fragment_vehicle_filter.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <LinearLayout
        android:background="#FFFFFF"
        android:orientation="vertical"
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <ScrollView
            android:id="@+id/rot0ocrqsqn"
            android:layout_width="match_parent"
            android:layout_height="0dp"
            android:layout_weight="1"
            android:background="@drawable/s003087sw1bffffff">

            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:orientation="vertical">

                <LinearLayout
                    android:id="@+id/r3lq3xaoi8n6"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:gravity="center_vertical"
                    android:background="#FFFFFF"
                    android:paddingVertical="12dp"
                    android:layout_marginTop="12dp"
                    android:layout_marginBottom="16dp"
                    android:layout_marginHorizontal="12dp"
                    android:elevation="2dp"
                    android:orientation="horizontal">

                    <TextView
                        android:id="@+id/r4q7zkhz5wj9"
                        android:textColor="#4D3A4D"
                        android:textSize="18sp"
                        android:textStyle="bold"
                        android:layout_height="wrap_content"
                        android:layout_width="0dp"
                        android:layout_weight="1"
                        android:text="Bộ lọc tìm kiếm" />

                    <ImageView
                        android:id="@+id/rz3n8dabzscm"
                        android:layout_width="32dp"
                        android:layout_height="32dp"
                        android:src="@drawable/close_cicle"
                        android:scaleType="fitXY"
                        android:contentDescription="Đóng bộ lọc"
                        android:clickable="true"
                        android:focusable="true" />
                </LinearLayout>

                <!-- Theo loại xe -->
                <LinearLayout
                    android:id="@+id/rw6fld1d1mte"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:paddingBottom="16dp"
                    android:layout_marginBottom="16dp"
                    android:layout_marginHorizontal="12dp"
                    android:orientation="vertical">

                    <TextView
                        android:id="@+id/rvv1babw21a"
                        android:textColor="#4D3A4D"
                        android:textSize="16sp"
                        android:textStyle="bold"
                        android:layout_marginBottom="12dp"
                        android:layout_height="wrap_content"
                        android:layout_width="wrap_content"
                        android:text="Theo loại xe" />

                    <LinearLayout
                        android:id="@+id/ru0titw95a6p"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:layout_marginBottom="12dp"
                        android:orientation="horizontal">

                        <LinearLayout
                            android:id="@+id/re5bkjyzw71a"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:background="@drawable/s4d3a4dsw1cr100"
                            android:paddingVertical="4dp"
                            android:paddingHorizontal="12dp"
                            android:layout_marginEnd="8dp"
                            android:clickable="true"
                            android:focusable="true"
                            android:orientation="vertical">

                            <TextView
                                android:id="@+id/r5fi7w847cf4"
                                android:textColor="#4D3A4D"
                                android:textSize="14sp"
                                android:layout_height="wrap_content"
                                android:layout_width="wrap_content"
                                android:text="Vinfast" />
                        </LinearLayout>

                        <LinearLayout
                            android:id="@+id/r29lmqq8qqka"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:background="@drawable/s003087sw1cr100b0030871f"
                            android:paddingVertical="4dp"
                            android:paddingHorizontal="12dp"
                            android:layout_marginEnd="8dp"
                            android:clickable="true"
                            android:focusable="true"
                            android:orientation="vertical">

                            <TextView
                                android:id="@+id/rtdzyabnxj9h"
                                android:textColor="#003087"
                                android:textSize="14sp"
                                android:textStyle="bold"
                                android:layout_height="wrap_content"
                                android:layout_width="wrap_content"
                                android:text="Honda" />
                        </LinearLayout>

                        <LinearLayout
                            android:id="@+id/r5wpc3jutt9d"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:background="@drawable/s4d3a4dsw1cr100"
                            android:paddingVertical="4dp"
                            android:paddingHorizontal="12dp"
                            android:clickable="true"
                            android:focusable="true"
                            android:orientation="vertical">

                            <TextView
                                android:id="@+id/rk80q24qy51e"
                                android:textColor="#4D3A4D"
                                android:textSize="14sp"
                                android:layout_height="wrap_content"
                                android:layout_width="wrap_content"
                                android:text="Mercedes" />
                        </LinearLayout>
                    </LinearLayout>

                    <LinearLayout
                        android:id="@+id/rmclr5q8pf7f"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:orientation="horizontal">

                        <LinearLayout
                            android:id="@+id/r047t6es9ecg6"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:background="@drawable/s003087sw1cr100b0030871f"
                            android:paddingVertical="4dp"
                            android:paddingHorizontal="12dp"
                            android:layout_marginEnd="8dp"
                            android:clickable="true"
                            android:focusable="true"
                            android:orientation="vertical">

                            <TextView
                                android:id="@+id/r1pubpl9glnt"
                                android:textColor="#003087"
                                android:textSize="14sp"
                                android:textStyle="bold"
                                android:layout_height="wrap_content"
                                android:layout_width="wrap_content"
                                android:text="BMW" />
                        </LinearLayout>

                        <LinearLayout
                            android:id="@+id/rwviyruuyw0d"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:background="@drawable/s4d3a4dsw1cr100"
                            android:paddingVertical="4dp"
                            android:paddingHorizontal="12dp"
                            android:layout_marginEnd="8dp"
                            android:clickable="true"
                            android:focusable="true"
                            android:orientation="vertical">

                            <TextView
                                android:id="@+id/rkeblvd7zmp"
                                android:textColor="#4D3A4D"
                                android:textSize="14sp"
                                android:layout_height="wrap_content"
                                android:layout_width="wrap_content"
                                android:text="Ford" />
                        </LinearLayout>

                        <LinearLayout
                            android:id="@+id/r2lvmia82fj5"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:background="@drawable/s4d3a4dsw1cr100"
                            android:paddingVertical="4dp"
                            android:paddingHorizontal="12dp"
                            android:clickable="true"
                            android:focusable="true"
                            android:orientation="vertical">

                            <TextView
                                android:id="@+id/rbwpmmmhe8l"
                                android:textColor="#4D3A4D"
                                android:textSize="14sp"
                                android:layout_height="wrap_content"
                                android:layout_width="wrap_content"
                                android:text="Toyota" />
                        </LinearLayout>
                    </LinearLayout>
                </LinearLayout>

                <!-- Theo trạng thái -->
                <LinearLayout
                    android:id="@+id/rsuwpb6itn1"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:paddingBottom="16dp"
                    android:layout_marginBottom="16dp"
                    android:layout_marginHorizontal="12dp"
                    android:orientation="vertical">

                    <TextView
                        android:id="@+id/rfy9m05n4qyn"
                        android:textColor="#4D3A4D"
                        android:textSize="16sp"
                        android:textStyle="bold"
                        android:layout_marginBottom="12dp"
                        android:layout_height="wrap_content"
                        android:layout_width="wrap_content"
                        android:text="Theo trạng thái" />

                    <LinearLayout
                        android:id="@+id/rtmf03jggzbh"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:orientation="vertical">

                        <LinearLayout
                            android:id="@+id/rzbwsyxq0qb"
                            android:layout_width="match_parent"
                            android:layout_height="wrap_content"
                            android:layout_marginBottom="6dp"
                            android:orientation="horizontal">

                            <LinearLayout
                                android:id="@+id/rv2rbtkh118"
                                android:layout_width="0dp"
                                android:layout_height="wrap_content"
                                android:layout_weight="1"
                                android:background="@drawable/s4d3a4dsw1cr100"
                                android:paddingVertical="4dp"
                                android:layout_marginEnd="8dp"
                                android:clickable="true"
                                android:focusable="true"
                                android:orientation="vertical">

                                <TextView
                                    android:id="@+id/rhydxqbz7aui"
                                    android:textColor="#4D3A4D"
                                    android:textSize="14sp"
                                    android:layout_marginHorizontal="12dp"
                                    android:layout_height="wrap_content"
                                    android:layout_width="wrap_content"
                                    android:text="Đang cho thuê" />
                            </LinearLayout>

                            <LinearLayout
                                android:id="@+id/rzvu0zdr3b79"
                                android:layout_width="wrap_content"
                                android:layout_height="wrap_content"
                                android:background="@drawable/s003087sw1cr100b0030871f"
                                android:paddingVertical="4dp"
                                android:paddingHorizontal="12dp"
                                android:layout_marginEnd="8dp"
                                android:clickable="true"
                                android:focusable="true"
                                android:orientation="vertical">

                                <TextView
                                    android:id="@+id/r6tv6q6llfyh"
                                    android:textColor="#003087"
                                    android:textSize="14sp"
                                    android:textStyle="bold"
                                    android:layout_height="wrap_content"
                                    android:layout_width="wrap_content"
                                    android:text="Có sẵn" />
                            </LinearLayout>

                            <LinearLayout
                                android:id="@+id/rpdbvxqwor8"
                                android:layout_width="wrap_content"
                                android:layout_height="wrap_content"
                                android:background="@drawable/sb60101sw1cr100bb6050233"
                                android:paddingVertical="4dp"
                                android:paddingHorizontal="12dp"
                                android:clickable="true"
                                android:focusable="true"
                                android:orientation="vertical">

                                <TextView
                                    android:id="@+id/rhsahxevgvp4"
                                    android:textColor="#B60101"
                                    android:textSize="14sp"
                                    android:textStyle="bold"
                                    android:layout_height="wrap_content"
                                    android:layout_width="wrap_content"
                                    android:text="Đang bảo trì" />
                            </LinearLayout>
                        </LinearLayout>

                        <LinearLayout
                            android:id="@+id/r14thtgj04tg"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:background="@drawable/sb66e01sw1cr100bb64d0233"
                            android:paddingVertical="4dp"
                            android:paddingHorizontal="12dp"
                            android:clickable="true"
                            android:focusable="true"
                            android:orientation="vertical">

                            <TextView
                                android:id="@+id/rmb2i92118f"
                                android:textColor="#B66E01"
                                android:textSize="14sp"
                                android:textStyle="bold"
                                android:layout_height="wrap_content"
                                android:layout_width="wrap_content"
                                android:text="Đang chờ duyệt" />
                        </LinearLayout>
                    </LinearLayout>
                </LinearLayout>

                <!-- Theo trạng thái duyệt -->
                <LinearLayout
                    android:id="@+id/r_verification_status"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:paddingBottom="16dp"
                    android:layout_marginBottom="16dp"
                    android:layout_marginHorizontal="12dp"
                    android:orientation="vertical">

                    <TextView
                        android:id="@+id/r_verification_status_label"
                        android:textColor="#4D3A4D"
                        android:textSize="16sp"
                        android:textStyle="bold"
                        android:layout_marginBottom="12dp"
                        android:layout_height="wrap_content"
                        android:layout_width="wrap_content"
                        android:text="Theo trạng thái duyệt" />

                    <LinearLayout
                        android:id="@+id/r_verification_status_container"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:orientation="horizontal">

                        <LinearLayout
                            android:id="@+id/r_verified"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:background="@drawable/s4d3a4dsw1cr100"
                            android:paddingVertical="4dp"
                            android:paddingHorizontal="12dp"
                            android:layout_marginEnd="8dp"
                            android:clickable="true"
                            android:focusable="true"
                            android:orientation="vertical">

                            <TextView
                                android:id="@+id/r_verified_label"
                                android:textColor="#4D3A4D"
                                android:textSize="14sp"
                                android:layout_height="wrap_content"
                                android:layout_width="wrap_content"
                                android:text="Đã duyệt" />
                        </LinearLayout>

                        <LinearLayout
                            android:id="@+id/r_unverified"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:background="@drawable/s4d3a4dsw1cr100"
                            android:paddingVertical="4dp"
                            android:paddingHorizontal="12dp"
                            android:layout_marginEnd="8dp"
                            android:clickable="true"
                            android:focusable="true"
                            android:orientation="vertical">

                            <TextView
                                android:id="@+id/r_unverified_label"
                                android:textColor="#4D3A4D"
                                android:textSize="14sp"
                                android:layout_height="wrap_content"
                                android:layout_width="wrap_content"
                                android:text="Chưa duyệt" />
                        </LinearLayout>
                    </LinearLayout>
                </LinearLayout>

                <!-- Theo đánh giá -->
                <LinearLayout
                    android:id="@+id/re338tflgim"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:paddingBottom="16dp"
                    android:layout_marginBottom="16dp"
                    android:layout_marginHorizontal="12dp"
                    android:orientation="vertical">

                    <TextView
                        android:id="@+id/rtfu20we8h1"
                        android:textColor="#4D3A4D"
                        android:textSize="16sp"
                        android:textStyle="bold"
                        android:layout_marginBottom="12dp"
                        android:layout_height="wrap_content"
                        android:layout_width="wrap_content"
                        android:text="Theo đánh giá" />

                    <LinearLayout
                        android:id="@+id/r7r4owx90wkb"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:orientation="vertical">

                        <LinearLayout
                            android:id="@+id/r2re9lvhfwqt"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:layout_marginBottom="6dp"
                            android:orientation="horizontal">

                            <LinearLayout
                                android:id="@+id/rozw79prjrbs"
                                android:layout_width="wrap_content"
                                android:layout_height="wrap_content"
                                android:gravity="center_vertical"
                                android:background="@drawable/s4d3a4dsw1cr100"
                                android:paddingVertical="4dp"
                                android:paddingHorizontal="12dp"
                                android:layout_marginEnd="8dp"
                                android:clickable="true"
                                android:focusable="true"
                                android:orientation="horizontal">

                                <TextView
                                    android:id="@+id/r6vwmwwzhigk"
                                    android:textColor="#4D3A4D"
                                    android:textSize="14sp"
                                    android:textStyle="bold"
                                    android:layout_marginEnd="4dp"
                                    android:layout_height="wrap_content"
                                    android:layout_width="wrap_content"
                                    android:text="5 " />

                                <com.google.android.material.imageview.ShapeableImageView
                                    android:id="@+id/r4y8nv6c7mpc"
                                    app:shapeAppearanceOverlay="@style/cr100"
                                    android:layout_width="12dp"
                                    android:layout_height="12dp"
                                    android:src="@mipmap/ic_launcher"
                                    android:scaleType="fitXY" />
                            </LinearLayout>

                            <LinearLayout
                                android:id="@+id/rx3ytiykf6v"
                                android:layout_width="wrap_content"
                                android:layout_height="wrap_content"
                                android:gravity="center_vertical"
                                android:background="@drawable/s4d3a4dsw1cr100bffbc7d33"
                                android:paddingVertical="4dp"
                                android:paddingHorizontal="12dp"
                                android:layout_marginEnd="8dp"
                                android:clickable="true"
                                android:focusable="true"
                                android:orientation="horizontal">

                                <TextView
                                    android:id="@+id/rdjqxvxj343u"
                                    android:textColor="#4D3A4D"
                                    android:textSize="14sp"
                                    android:textStyle="bold"
                                    android:layout_marginEnd="4dp"
                                    android:layout_height="wrap_content"
                                    android:layout_width="wrap_content"
                                    android:text="5" />

                                <com.google.android.material.imageview.ShapeableImageView
                                    android:id="@+id/rb6215hqc4bl"
                                    app:shapeAppearanceOverlay="@style/cr100"
                                    android:layout_width="12dp"
                                    android:layout_height="12dp"
                                    android:layout_marginEnd="2dp"
                                    android:src="@mipmap/ic_launcher"
                                    android:scaleType="fitXY" />

                                <TextView
                                    android:id="@+id/ry0sjlz6t2q"
                                    android:textColor="#4D3A4D"
                                    android:textSize="14sp"
                                    android:textStyle="bold"
                                    android:layout_marginEnd="5dp"
                                    android:layout_height="wrap_content"
                                    android:layout_width="wrap_content"
                                    android:text="-" />

                                <TextView
                                    android:id="@+id/rzakpxmoxv1"
                                    android:textColor="#4D3A4D"
                                    android:textSize="14sp"
                                    android:textStyle="bold"
                                    android:layout_marginEnd="4dp"
                                    android:layout_height="wrap_content"
                                    android:layout_width="wrap_content"
                                    android:text="4" />

                                <com.google.android.material.imageview.ShapeableImageView
                                    android:id="@+id/rtnetjohacza"
                                    app:shapeAppearanceOverlay="@style/cr100"
                                    android:layout_width="12dp"
                                    android:layout_height="12dp"
                                    android:src="@mipmap/ic_launcher"
                                    android:scaleType="fitXY" />
                            </LinearLayout>

                            <LinearLayout
                                android:id="@+id/rsooed0x193"
                                android:layout_width="wrap_content"
                                android:layout_height="wrap_content"
                                android:gravity="center_vertical"
                                android:background="@drawable/s4d3a4dsw1cr100"
                                android:paddingVertical="4dp"
                                android:paddingHorizontal="12dp"
                                android:layout_marginEnd="8dp"
                                android:clickable="true"
                                android:focusable="true"
                                android:orientation="horizontal">

                                <TextView
                                    android:id="@+id/rl1q0hssiaif"
                                    android:textColor="#4D3A4D"
                                    android:textSize="14sp"
                                    android:textStyle="bold"
                                    android:layout_marginEnd="4dp"
                                    android:layout_height="wrap_content"
                                    android:layout_width="wrap_content"
                                    android:text="4" />

                                <com.google.android.material.imageview.ShapeableImageView
                                    android:id="@+id/rw0l5x2vl8bi"
                                    app:shapeAppearanceOverlay="@style/cr100"
                                    android:layout_width="12dp"
                                    android:layout_height="12dp"
                                    android:src="@mipmap/ic_launcher"
                                    android:scaleType="fitXY" />
                            </LinearLayout>

                            <LinearLayout
                                android:id="@+id/rusqd789cwjj"
                                android:layout_width="wrap_content"
                                android:layout_height="wrap_content"
                                android:gravity="center_vertical"
                                android:background="@drawable/s4d3a4dsw1cr100"
                                android:paddingVertical="4dp"
                                android:paddingHorizontal="12dp"
                                android:layout_marginEnd="8dp"
                                android:clickable="true"
                                android:focusable="true"
                                android:orientation="horizontal">

                                <TextView
                                    android:id="@+id/rthh7z3rn2d"
                                    android:textColor="#4D3A4D"
                                    android:textSize="14sp"
                                    android:textStyle="bold"
                                    android:layout_marginEnd="4dp"
                                    android:layout_height="wrap_content"
                                    android:layout_width="wrap_content"
                                    android:text="3" />

                                <com.google.android.material.imageview.ShapeableImageView
                                    android:id="@+id/rwwi7sxl6nz"
                                    app:shapeAppearanceOverlay="@style/cr100"
                                    android:layout_width="12dp"
                                    android:layout_height="12dp"
                                    android:src="@mipmap/ic_launcher"
                                    android:scaleType="fitXY" />
                            </LinearLayout>
                        </LinearLayout>

                        <LinearLayout
                            android:id="@+id/ru6lopcq6jh"
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:gravity="center_vertical"
                            android:background="@drawable/s4d3a4dsw1cr100"
                            android:paddingVertical="4dp"
                            android:paddingHorizontal="12dp"
                            android:layout_marginEnd="8dp"
                            android:clickable="true"
                            android:focusable="true"
                            android:orientation="horizontal">

                            <TextView
                                android:id="@+id/rabqwvwqco"
                                android:textColor="#4D3A4D"
                                android:textSize="14sp"
                                android:textStyle="bold"
                                android:layout_marginEnd="4dp"
                                android:layout_height="wrap_content"
                                android:layout_width="wrap_content"
                                android:text="2" />

                            <com.google.android.material.imageview.ShapeableImageView
                                android:id="@+id/rayfaxchsqb8"
                                app:shapeAppearanceOverlay="@style/cr100"
                                android:layout_width="12dp"
                                android:layout_height="12dp"
                                android:layout_marginEnd="2dp"
                                android:src="@mipmap/ic_launcher"
                                android:scaleType="fitXY" />

                            <TextView
                                android:id="@+id/rvzg2lkv0idk"
                                android:textColor="#4D3A4D"
                                android:textSize="14sp"
                                android:textStyle="bold"
                                android:layout_marginEnd="5dp"
                                android:layout_height="wrap_content"
                                android:layout_width="wrap_content"
                                android:text="-" />

                            <TextView
                                android:id="@+id/r9tx64h8qbuu"
                                android:textColor="#4D3A4D"
                                android:textSize="14sp"
                                android:textStyle="bold"
                                android:layout_marginEnd="4dp"
                                android:layout_height="wrap_content"
                                android:layout_width="wrap_content"
                                android:text="1" />

                            <com.google.android.material.imageview.ShapeableImageView
                                android:id="@+id/r46s7tlb9ka4"
                                app:shapeAppearanceOverlay="@style/cr100"
                                android:layout_width="12dp"
                                android:layout_height="12dp"
                                android:src="@mipmap/ic_launcher"
                                android:scaleType="fitXY" />
                        </LinearLayout>
                    </LinearLayout>
                </LinearLayout>

                <!-- Đường phân cách -->
                <LinearLayout
                    android:id="@+id/r33ci7pmxdzl"
                    android:layout_width="match_parent"
                    android:layout_height="1dp"
                    android:background="#4D3A4D"
                    android:layout_marginBottom="15dp"
                    android:layout_marginHorizontal="12dp"
                    android:orientation="vertical" />

                <!-- Nút điều khiển -->
                <LinearLayout
                    android:id="@+id/rljmd26t2q9"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:paddingLeft="72dp"
                    android:layout_marginBottom="2dp"
                    android:layout_marginHorizontal="12dp"
                    android:orientation="horizontal">

                    <LinearLayout
                        android:id="@+id/rvai73xq5syc"
                        android:layout_width="0dp"
                        android:layout_height="wrap_content"
                        android:layout_weight="1"
                        android:background="@drawable/s4d3a4dsw1cr12"
                        android:paddingVertical="8dp"
                        android:layout_marginEnd="8dp"
                        android:clickable="true"
                        android:focusable="true"
                        android:orientation="vertical">

                        <TextView
                            android:id="@+id/rhokc4oyc7cp"
                            android:textColor="#4D3A4D"
                            android:textSize="14sp"
                            android:textStyle="bold"
                            android:layout_marginHorizontal="24dp"
                            android:layout_height="wrap_content"
                            android:layout_width="wrap_content"
                            android:text="Thiết lập lại" />
                    </LinearLayout>

                    <LinearLayout
                        android:id="@+id/rt94tooyri0r"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:background="@drawable/cr12b003087"
                        android:paddingVertical="8dp"
                        android:paddingHorizontal="24dp"
                        android:clickable="true"
                        android:focusable="true"
                        android:orientation="vertical">

                        <TextView
                            android:id="@+id/rbr2mtec8ucf"
                            android:textColor="#FFF6FC"
                            android:textSize="14sp"
                            android:textStyle="bold"
                            android:layout_height="wrap_content"
                            android:layout_width="wrap_content"
                            android:text="Xác nhận" />
                    </LinearLayout>
                </LinearLayout>
            </LinearLayout>
        </ScrollView>
    </LinearLayout>
</androidx.constraintlayout.widget.ConstraintLayout>
```

### src\main\res\layout\item_activity.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.cardview.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_margin="16dp"
    app:cardCornerRadius="15dp"
    app:cardElevation="4dp">

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:padding="16dp">

        <TextView
            android:id="@+id/tv_noti_ID"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:fontFamily="@font/relay_roboto_flex_regular"
            android:textColor="@color/text_title"
            android:textSize="16sp"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            tools:text="BOOKING123" />

        <TextView
            android:id="@+id/tv_noti_name"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="8dp"
            android:fontFamily="@font/relay_roboto_flex_regular"
            android:textColor="@color/text_input_hint"
            android:textSize="14sp"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/tv_noti_ID"
            tools:text="Vinfast Lux A2.0" />

        <TextView
            android:id="@+id/tv_Status"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="8dp"
            android:fontFamily="@font/relay_roboto_flex_regular"
            android:textColor="@color/sunset"
            android:textSize="14sp"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/tv_noti_name"
            tools:text="Chưa xác nhận" />

    </androidx.constraintlayout.widget.ConstraintLayout>
</androidx.cardview.widget.CardView>

```

### src\main\res\layout\item_brand.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="84dp"
    android:layout_height="70dp"
    xmlns:tools="http://schemas.android.com/tools"
    android:orientation="vertical"
    android:gravity="center"
    android:layout_marginEnd="8dp">

    <ImageView
        android:id="@+id/brand_image"
        android:layout_width="41dp"
        android:layout_height="41dp"
        android:scaleType="centerCrop"
        tools:src="@drawable/bmw_svg" />

    <TextView
        android:id="@+id/brand_name"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="4dp"
        android:fontFamily="@font/relay_roboto_flex_regular"
        android:fontWeight="700"
        android:textColor="@color/black"
        android:textSize="17.51sp"
        tools:text="BMW" />
</LinearLayout>
```

### src\main\res\layout\item_notification.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.cardview.widget.CardView
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:layout_margin="16dp"
    app:cardCornerRadius="15dp"
    app:cardElevation="4dp">

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:padding="16dp">

        <TextView
            android:id="@+id/tv_title"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:fontFamily="@font/relay_roboto_flex_regular"
            android:textColor="@color/text_title"
            android:textSize="16sp"
            android:textStyle="bold"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            tools:text="Tài khoản đã được duyệt" />

        <TextView
            android:id="@+id/tv_customer_name"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="8dp"
            android:fontFamily="@font/relay_roboto_flex_regular"
            android:textColor="@color/text_title"
            android:textSize="14sp"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/tv_title"
            tools:text="Nguyễn Văn A" />

        <TextView
            android:id="@+id/tv_time_range"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="8dp"
            android:fontFamily="@font/relay_roboto_flex_regular"
            android:textColor="@color/text_input_hint"
            android:textSize="14sp"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/tv_customer_name"
            tools:text="01/01/2025 10:00" />

        <TextView
            android:id="@+id/tv_noti_text"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="8dp"
            android:fontFamily="@font/relay_roboto_flex_regular"
            android:textColor="@color/sunset"
            android:textSize="14sp"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/tv_time_range"
            tools:text="Tài khoản của bạn đã được duyệt thành công." />

        <TextView
            android:id="@+id/tv_status"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:fontFamily="@font/relay_roboto_flex_regular"
            android:textColor="@color/orange_pending"
            android:textSize="12sp"
            android:text="Chưa đọc"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            tools:visibility="visible" />

    </androidx.constraintlayout.widget.ConstraintLayout>
</androidx.cardview.widget.CardView>
```

### src\main\res\layout\item_setting_row.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="48dp"
    android:layout_marginHorizontal="20dp"
    android:layout_marginVertical="12dp"
    android:background="@drawable/setting_button_gradient"
    android:elevation="4dp"
    android:clipToPadding="false"
    android:clipChildren="false">

    <!-- Icon -->
    <ImageView
        android:id="@+id/setting_icon"
        android:layout_width="24dp"
        android:layout_height="24dp"
        android:layout_marginStart="23dp"
        android:contentDescription="@null"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintBottom_toBottomOf="parent" />

    <!-- Text -->
    <TextView
        android:id="@+id/setting_text"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_marginStart="10dp"
        android:layout_marginEnd="23dp"
        android:textColor="@color/setting_text_edit"
        android:textSize="21sp"
        android:fontFamily="@font/relay_roboto_flex_regular"
        android:lineHeight="24dp"
        app:layout_constraintStart_toEndOf="@id/setting_icon"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintBottom_toBottomOf="parent" />

</androidx.constraintlayout.widget.ConstraintLayout>
```

### src\main\res\layout\item_user.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.cardview.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:layout_marginHorizontal="@dimen/_16sdp"
    android:layout_marginVertical="@dimen/_8sdp"
    app:cardCornerRadius="10dp"
    app:cardElevation="4dp">

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:background="@drawable/cr10bffffff"
        android:orientation="horizontal"
        android:paddingHorizontal="@dimen/_8sdp"
        android:paddingVertical="@dimen/_12sdp">

        <ImageView
            android:id="@+id/user_avatar"
            android:layout_width="48dp"
            android:layout_height="48dp"
            android:layout_marginEnd="@dimen/_16sdp"
            android:scaleType="centerCrop"
            android:src="@drawable/ic_person" />

        <LinearLayout
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:orientation="vertical">

            <TextView
                android:id="@+id/user_name"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:fontFamily="@font/relay_roboto_flex_regular"
                android:text="User Name"
                android:textColor="@color/text_title"
                android:textSize="16sp"
                android:textStyle="bold" />

            <TextView
                android:id="@+id/user_description"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="@dimen/_4sdp"
                android:fontFamily="@font/relay_roboto_flex_regular"
                android:text="User description"
                android:textColor="@color/text_input_hint"
                android:textSize="12sp" />
        </LinearLayout>

        <ImageView
            android:id="@+id/btn_edit"
            android:layout_width="24dp"
            android:layout_height="24dp"
            android:layout_marginEnd="@dimen/_8sdp"
            android:src="@drawable/ic_setting"
            app:tint="@color/sky" />

        <ImageView
            android:id="@+id/btn_delete"
            android:layout_width="24dp"
            android:layout_height="24dp"
            android:src="@drawable/ic_delete"
            app:tint="@color/sunset" />
    </LinearLayout>
</androidx.cardview.widget.CardView>
```

### src\main\res\layout\message_item.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:paddingStart="8dp"
    android:paddingEnd="8dp"
    android:paddingTop="4dp"
    android:paddingBottom="4dp">

    <!-- AI Avatar -->
    <ImageView
        android:id="@+id/avatar"
        android:layout_width="40dp"
        android:layout_height="40dp"
        android:src="@drawable/image_56_ai"
        android:contentDescription="AI avatar"
        android:visibility="gone"
        app:layout_constraintBottom_toBottomOf="@id/message_container"
        app:layout_constraintStart_toStartOf="parent" />

    <!-- Message Container -->
    <LinearLayout
        android:id="@+id/message_container"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:maxWidth="250dp"
        android:orientation="vertical"
        android:padding="12dp"
        android:background="@drawable/message_bubble_background"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent">

        <TextView
            android:id="@+id/message_text"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="@color/white"
            android:fontFamily="@font/relay_roboto_flex_regular"
            android:textSize="16sp" />
    </LinearLayout>

</androidx.constraintlayout.widget.ConstraintLayout>
```

### src\main\res\layout\owner_activity_main.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".ActivityPages.OwnerMainActivity">

    <FrameLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:id="@+id/frame_layout_owner"/>
    <com.google.android.material.bottomappbar.BottomAppBar
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/bottomAppBar"
        android:layout_gravity="bottom"
        app:fabCradleMargin="@dimen/_10sdp"
        app:fabCradleRoundedCornerRadius="@dimen/_50sdp">
        <com.google.android.material.bottomnavigation.BottomNavigationView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:id="@+id/bottomNavigationView"
            android:layout_marginEnd="@dimen/_15sdp"
            app:labelVisibilityMode="labeled"
            app:menu="@menu/owner_bottom_menu"
            android:background="@color/transparent"/>
    </com.google.android.material.bottomappbar.BottomAppBar>
</androidx.coordinatorlayout.widget.CoordinatorLayout>
```

### src\main\res\layout\owner_booking_detail.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:padding="16dp"
    android:background="@color/white">

    <!-- Nút quay lại -->
    <ImageView
        android:id="@+id/btn_noti_back"
        android:layout_width="32dp"
        android:layout_height="32dp"
        android:src="@drawable/ic_arrow_left"
        android:contentDescription="Back"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <!-- Tiêu đề -->
    <TextView
        android:id="@+id/tv_title"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Chi tiết yêu cầu thuê xe"
        android:textSize="24sp"
        android:textStyle="bold"
        android:textColor="@color/text_title"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/btn_noti_back"
        app:layout_constraintTop_toTopOf="parent"
        android:layout_marginTop="16dp" />

    <!-- Ảnh xe -->
    <ImageView
        android:id="@+id/img_noti_car"
        android:layout_width="0dp"
        android:layout_height="200dp"
        android:scaleType="centerCrop"
        android:background="@drawable/rounded_corner"
        android:clipToOutline="true"
        app:layout_constraintDimensionRatio="16:9"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/tv_title"
        android:layout_marginTop="16dp" />

    <!-- ID yêu cầu -->
    <TextView
        android:id="@+id/txtview_noti_id_label"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Mã yêu cầu:"
        android:textSize="16sp"
        android:textColor="@color/text_input_hint"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/img_noti_car"
        android:layout_marginTop="16dp" />

    <TextView
        android:id="@+id/txtview_noti_id"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="@color/text_title"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toEndOf="@id/txtview_noti_id_label"
        app:layout_constraintTop_toTopOf="@id/txtview_noti_id_label"
        android:layout_marginStart="8dp" />

    <!-- Tên xe -->
    <TextView
        android:id="@+id/txtview_noti_BrandCar_label"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Tên xe:"
        android:textSize="16sp"
        android:textColor="@color/text_input_hint"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/txtview_noti_id_label"
        android:layout_marginTop="8dp" />

    <TextView
        android:id="@+id/txtview_noti_BrandCar"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="@color/text_title"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toEndOf="@id/txtview_noti_BrandCar_label"
        app:layout_constraintTop_toTopOf="@id/txtview_noti_BrandCar_label"
        android:layout_marginStart="8dp" />

    <!-- Tên khách hàng -->
    <TextView
        android:id="@+id/txtview_noti_name_label"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Khách hàng:"
        android:textSize="16sp"
        android:textColor="@color/text_input_hint"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/txtview_noti_BrandCar_label"
        android:layout_marginTop="8dp" />

    <TextView
        android:id="@+id/txtview_noti_name"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="@color/text_title"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toEndOf="@id/txtview_noti_name_label"
        app:layout_constraintTop_toTopOf="@id/txtview_noti_name_label"
        android:layout_marginStart="8dp" />

    <!-- Email -->
    <TextView
        android:id="@+id/txtview_noti_email_label"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Email:"
        android:textSize="16sp"
        android:textColor="@color/text_input_hint"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/txtview_noti_name_label"
        android:layout_marginTop="8dp" />

    <TextView
        android:id="@+id/txtview_noti_email"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="@color/text_title"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toEndOf="@id/txtview_noti_email_label"
        app:layout_constraintTop_toTopOf="@id/txtview_noti_email_label"
        android:layout_marginStart="8dp" />

    <!-- Số điện thoại -->
    <TextView
        android:id="@+id/txtview_noti_phoneNumber_label"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Số điện thoại:"
        android:textSize="16sp"
        android:textColor="@color/text_input_hint"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/txtview_noti_email_label"
        android:layout_marginTop="8dp" />

    <TextView
        android:id="@+id/txtview_noti_phoneNumber"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="@color/text_title"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toEndOf="@id/txtview_noti_phoneNumber_label"
        app:layout_constraintTop_toTopOf="@id/txtview_noti_phoneNumber_label"
        android:layout_marginStart="8dp" />

    <!-- Địa chỉ -->
    <TextView
        android:id="@+id/txt_checkout_address_label"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Địa chỉ:"
        android:textSize="16sp"
        android:textColor="@color/text_input_hint"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/txtview_noti_phoneNumber_label"
        android:layout_marginTop="8dp" />

    <TextView
        android:id="@+id/txt_checkout_address"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="@color/text_title"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toEndOf="@id/txt_checkout_address_label"
        app:layout_constraintTop_toTopOf="@id/txt_checkout_address_label"
        android:layout_marginStart="8dp" />

    <!-- Thời gian nhận xe -->
    <TextView
        android:id="@+id/tv_noti_pickup_label"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Thời gian nhận:"
        android:textSize="16sp"
        android:textColor="@color/text_input_hint"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/txt_checkout_address_label"
        android:layout_marginTop="8dp" />

    <TextView
        android:id="@+id/tv_noti_pickup"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="@color/text_title"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toEndOf="@id/tv_noti_pickup_label"
        app:layout_constraintTop_toTopOf="@id/tv_noti_pickup_label"
        android:layout_marginStart="8dp" />

    <!-- Thời gian trả xe -->
    <TextView
        android:id="@+id/tv_noti_dropoff_label"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Thời gian trả:"
        android:textSize="16sp"
        android:textColor="@color/text_input_hint"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/tv_noti_pickup_label"
        android:layout_marginTop="8dp" />

    <TextView
        android:id="@+id/tv_noti_dropoff"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="@color/text_title"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toEndOf="@id/tv_noti_dropoff_label"
        app:layout_constraintTop_toTopOf="@id/tv_noti_dropoff_label"
        android:layout_marginStart="8dp" />

    <!-- Giá thuê -->
    <TextView
        android:id="@+id/txtview_noti_price_label"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Giá thuê/ngày:"
        android:textSize="16sp"
        android:textColor="@color/text_input_hint"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/tv_noti_dropoff_label"
        android:layout_marginTop="8dp" />

    <TextView
        android:id="@+id/txtview_noti_price"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="@color/text_title"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toEndOf="@id/txtview_noti_price_label"
        app:layout_constraintTop_toTopOf="@id/txtview_noti_price_label"
        android:layout_marginStart="8dp" />

    <!-- Tổng chi phí -->
    <TextView
        android:id="@+id/txtview_noti_totalCost_label"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Tổng chi phí:"
        android:textSize="16sp"
        android:textColor="@color/text_input_hint"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/txtview_noti_price_label"
        android:layout_marginTop="8dp" />

    <TextView
        android:id="@+id/txtview_noti_totalCost"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="@color/sunset"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toEndOf="@id/txtview_noti_totalCost_label"
        app:layout_constraintTop_toTopOf="@id/txtview_noti_totalCost_label"
        android:layout_marginStart="8dp" />

    <!-- Trạng thái -->
    <TextView
        android:id="@+id/txtview_noti_status_label"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Trạng thái:"
        android:textSize="16sp"
        android:textColor="@color/text_input_hint"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/txtview_noti_totalCost_label"
        android:layout_marginTop="8dp" />

    <TextView
        android:id="@+id/txtview_noti_status"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:textColor="@color/text_title"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toEndOf="@id/txtview_noti_status_label"
        app:layout_constraintTop_toTopOf="@id/txtview_noti_status_label"
        android:layout_marginStart="8dp" />

    <!-- Nút xác nhận -->
    <Button
        android:id="@+id/btn_noti_XacNhan"
        android:layout_width="0dp"
        android:layout_height="48dp"
        android:layout_marginTop="24dp"
        android:layout_marginEnd="8dp"
        android:background="@drawable/blue_round_button"
        android:text="@string/confirm"
        android:textColor="@color/white"
        android:textSize="16sp"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintEnd_toStartOf="@id/btn_noti_huy"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/txtview_noti_status_label" />

    <!-- Nút hủy -->
    <Button
        android:id="@+id/btn_noti_huy"
        android:layout_width="0dp"
        android:layout_height="48dp"
        android:layout_marginTop="24dp"
        android:layout_marginStart="8dp"
        android:background="@drawable/red_round_button"
        android:text="@string/reject"
        android:textColor="@color/white"
        android:textSize="16sp"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toEndOf="@id/btn_noti_XacNhan"
        app:layout_constraintTop_toBottomOf="@id/txtview_noti_status_label" />

</androidx.constraintlayout.widget.ConstraintLayout>

```

### src\main\res\layout\owner_fragment_activity.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/white">

    <!-- Tiêu đề -->
    <TextView
        android:id="@+id/tv_title"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="16dp"
        android:layout_marginTop="16dp"
        android:text="Yêu cầu thuê xe"
        android:textSize="24sp"
        android:textStyle="bold"
        android:textColor="@color/text_title"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <!-- RecyclerView -->
    <androidx.recyclerview.widget.RecyclerView
        android:id="@+id/activity_list"
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:layout_marginTop="16dp"
        android:paddingHorizontal="16dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/tv_title"
        tools:listitem="@layout/item_activity" />

    <!-- TextView khi không có dữ liệu -->
    <TextView
        android:id="@+id/tv_empty"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_margin="16dp"
        android:fontFamily="@font/relay_roboto_flex_regular"
        android:padding="16dp"
        android:text="Không có yêu cầu nào"
        android:textColor="@color/text_input_hint"
        android:textSize="16sp"
        android:visibility="gone"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/tv_title" />

</androidx.constraintlayout.widget.ConstraintLayout>

```

### src\main\res\layout\owner_fragment_notification.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    xmlns:tools="http://schemas.android.com/tools"
    android:background="@color/white">

    <!-- Tiêu đề -->
    <TextView
        android:id="@+id/tv_title"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="16dp"
        android:layout_marginTop="16dp"
        android:text="Thông báo"
        android:textSize="24sp"
        android:textStyle="bold"
        android:textColor="@color/text_title"
        android:fontFamily="@font/relay_roboto_flex_regular"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <!-- RecyclerView -->
    <androidx.recyclerview.widget.RecyclerView
        android:id="@+id/notification_list"
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:layout_marginTop="16dp"
        android:paddingHorizontal="16dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/tv_title"
        tools:listitem="@layout/item_notification" />

    <!-- TextView khi không có dữ liệu -->
    <TextView
        android:id="@+id/tv_empty"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_margin="16dp"
        android:fontFamily="@font/relay_roboto_flex_regular"
        android:padding="16dp"
        android:text="Không có thông báo nào"
        android:textColor="@color/text_input_hint"
        android:textSize="16sp"
        android:visibility="gone"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/tv_title" />

</androidx.constraintlayout.widget.ConstraintLayout>

```

### src\main\res\layout\owner_fragment_setting.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/white"
    tools:context=".FragmentPages.Owner.OwnerSettingFragment">

    <!-- Header -->
    <androidx.constraintlayout.widget.ConstraintLayout
        android:id="@+id/header"
        android:layout_width="349dp"
        android:layout_height="wrap_content"
        android:layout_marginStart="32dp"
        android:layout_marginTop="58dp"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent">

        <!-- Avatar -->
        <de.hdodenhof.circleimageview.CircleImageView
            android:id="@+id/img_avatar"
            android:layout_width="70dp"
            android:layout_height="70dp"
            android:src="@drawable/ic_person"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent" />

        <!-- Name and Edit Text -->
        <LinearLayout
            android:id="@+id/text_info"
            android:layout_width="164dp"
            android:layout_height="wrap_content"
            android:layout_marginStart="16dp"
            android:orientation="vertical"
            app:layout_constraintStart_toEndOf="@id/img_avatar"
            app:layout_constraintTop_toTopOf="parent">

            <TextView
                android:id="@+id/tv_name"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="Trương Đăng Khôi"
                android:textColor="@color/setting_text_name"
                android:textSize="19.7sp"
                android:fontFamily="@font/relay_roboto_flex_regular"
                android:fontWeight="700"
                android:lineHeight="24dp" />

            <TextView
                android:id="@+id/tv_edit"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginTop="5dp"
                android:text="Chỉnh sửa thông tin"
                android:textColor="@color/setting_text_edit"
                android:textSize="17.51sp"
                android:fontFamily="@font/relay_roboto_flex_regular"
                android:lineHeight="20.5dp" />
        </LinearLayout>

        <!-- Edit Icon -->
        <ImageView
            android:id="@+id/edit_icon"
            android:layout_width="20dp"
            android:layout_height="20dp"
            android:src="@drawable/vector_settings"
            android:contentDescription="Edit Profile"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toTopOf="@id/text_info"
            app:layout_constraintBottom_toBottomOf="@id/text_info" />
    </androidx.constraintlayout.widget.ConstraintLayout>

    <!-- Divider -->
    <View
        android:id="@+id/divider"
        android:layout_width="278dp"
        android:layout_height="0.5dp"
        android:layout_marginTop="1dp"
        android:background="@drawable/line_8_settings"
        app:layout_constraintStart_toStartOf="@id/header"
        app:layout_constraintTop_toBottomOf="@id/header" />

    <!-- ScrollView for Settings -->
    <ScrollView
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:layout_marginTop="16dp"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toBottomOf="@id/divider"
        app:layout_constraintBottom_toBottomOf="parent">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical"
            android:paddingBottom="16dp">

            <!-- Thông tin tài khoản -->
            <include
                android:id="@+id/layout_information"
                layout="@layout/item_setting_row"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginHorizontal="20dp"
                android:layout_marginVertical="12dp" />

            <!-- Giao diện khách hàng -->
            <include
                android:id="@+id/layout_switch_to_customer"
                layout="@layout/item_setting_row"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginHorizontal="20dp"
                android:layout_marginVertical="12dp" />

            <!-- Thay đổi mật khẩu -->
            <include
                android:id="@+id/layout_change_password"
                layout="@layout/item_setting_row"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginHorizontal="20dp"
                android:layout_marginVertical="12dp" />

            <!-- Yêu cầu xóa tài khoản -->
            <include
                android:id="@+id/layout_delete_account"
                layout="@layout/item_setting_row"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginHorizontal="20dp"
                android:layout_marginVertical="12dp" />

            <!-- Cài đặt -->
            <include
                android:id="@+id/layout_settings"
                layout="@layout/item_setting_row"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginHorizontal="20dp"
                android:layout_marginVertical="12dp" />

            <!-- Đăng xuất -->
            <TextView
                android:id="@+id/layout_sign_out"
                android:layout_width="wrap_content"
                android:layout_height="48dp"
                android:layout_gravity="end"
                android:layout_marginHorizontal="20dp"
                android:layout_marginVertical="12dp"
                android:background="@drawable/setting_sign_out_gradient"
                android:fontFamily="@font/relay_roboto_flex_regular"
                android:gravity="center"
                android:lineHeight="18dp"
                android:paddingHorizontal="16dp"
                android:paddingVertical="8dp"
                android:text="Đăng xuất"
                android:textColor="@color/white"
                android:textSize="22sp"
                android:elevation="4dp" />
        </LinearLayout>
    </ScrollView>

</androidx.constraintlayout.widget.ConstraintLayout>
```

### src\main\res\layout\owner_fragment_vehicle.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/white"
    tools:context=".FragmentPages.Owner.OwnerVehicleFragment">

    <TextView
        android:id="@+id/tv_title"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="@dimen/_10sdp"
        android:layout_marginTop="@dimen/_20sdp"
        android:fontFamily="@font/relay_roboto_flex_regular"
        android:text="@string/manage_vehicles"
        android:textColor="@color/text_title"
        android:textSize="@dimen/_24ssp"
        android:textStyle="bold"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <androidx.appcompat.widget.AppCompatButton
        android:id="@+id/btn_add"
        android:layout_width="@dimen/_100sdp"
        android:layout_height="@dimen/_35sdp"
        android:layout_marginTop="28dp"
        android:layout_marginEnd="16dp"
        android:background="@drawable/blue_round_button"
        android:backgroundTint="@color/sky"
        android:fontFamily="@font/relay_roboto_flex_regular"
        android:text="@string/add_vehicle"
        android:textColor="@color/white"
        android:textSize="@dimen/_14ssp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <androidx.recyclerview.widget.RecyclerView
        android:id="@+id/vehicle_list"
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:layout_marginTop="16dp"
        android:paddingHorizontal="@dimen/_15sdp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/tv_title"
        tools:listitem="@layout/owner_vehicle_card" />

    <TextView
        android:id="@+id/text_empty"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_margin="16dp"
        android:fontFamily="@font/relay_roboto_flex_regular"
        android:padding="16dp"
        android:text="@string/no_vehicles"
        android:textColor="@color/text_input_hint"
        android:textSize="16sp"
        android:visibility="gone"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/tv_title" />
</androidx.constraintlayout.widget.ConstraintLayout>
```

### src\main\res\layout\owner_vehicle_card.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.cardview.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/vehicle_card"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    app:cardCornerRadius="15dp"
    app:cardElevation="4dp"
    android:layout_margin="16dp">

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="321dp"
        android:padding="4dp">

        <ImageView
            android:id="@+id/img_vehicle"
            android:layout_width="0dp"
            android:layout_height="167dp"
            android:background="@drawable/rounded_corner"
            android:clipToOutline="true"
            android:scaleType="centerCrop"
            app:layout_constraintDimensionRatio="314:167"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            tools:src="@drawable/a2_0_1" />

        <TextView
            android:id="@+id/vehicle_name"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginStart="32dp"
            android:layout_marginTop="8dp"
            android:fontFamily="@font/relay_roboto_flex_regular"
            android:fontWeight="700"
            android:textColor="@color/text_title"
            android:textSize="19.7sp"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/img_vehicle"
            tools:text="Vinfast Lux A2.0" />

        <TextView
            android:id="@+id/verification_status"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="8dp"
            android:layout_marginEnd="16dp"
            android:fontFamily="@font/relay_roboto_flex_regular"
            android:text="Đang chờ duyệt"
            android:textColor="@color/orange_pending"
            android:textSize="14sp"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toBottomOf="@id/img_vehicle"
            tools:visibility="visible" />

        <TextView
            android:id="@+id/provider_name"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginStart="32dp"
            android:layout_marginTop="4dp"
            android:fontFamily="@font/relay_roboto_flex_regular"
            android:textColor="@color/gray"
            android:textSize="17.51sp"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/vehicle_name"
            tools:text="Công ty ABC" />

        <ImageView
            android:id="@+id/rating_icon"
            android:layout_width="32dp"
            android:layout_height="32dp"
            android:layout_marginStart="32dp"
            android:layout_marginBottom="4dp"
            android:src="@drawable/vector_main"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            tools:ignore="ContentDescription" />

        <TextView
            android:id="@+id/vehicle_rating"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginStart="4dp"
            android:layout_marginBottom="4dp"
            android:fontFamily="@font/relay_roboto_flex_regular"
            android:textColor="@color/text_input_hint"
            android:textSize="17.51sp"
            app:layout_constraintBottom_toBottomOf="@id/rating_icon"
            app:layout_constraintStart_toEndOf="@id/rating_icon"
            tools:text="4.9 (18 Đánh giá)" />

        <TextView
            android:id="@+id/tv_vehicle_price"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="8dp"
            android:layout_marginEnd="36dp"
            android:fontFamily="@font/relay_roboto_flex_regular"
            android:textColor="@color/text_input_hint"
            android:textSize="17.51sp"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toBottomOf="@id/verification_status"
            tools:text="899.000VNĐ/Ngày" />

    </androidx.constraintlayout.widget.ConstraintLayout>
</androidx.cardview.widget.CardView>
```

### src\main\res\layout\sflash_1.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#E9EDF6">

    <!-- Logo -->
    <ImageView
        android:id="@+id/splash_logo"
        android:layout_width="390dp"
        android:layout_height="264dp"
        android:layout_marginStart="11dp"
        android:layout_marginTop="195dp"
        android:contentDescription="@string/app_name"
        android:scaleType="centerCrop"
        android:src="@drawable/screenshot_2025_04_03_154923_removebg_preview_1"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <!-- Description Card -->
    <androidx.constraintlayout.widget.ConstraintLayout
        android:id="@+id/description_card"
        android:layout_width="412dp"
        android:layout_height="390dp"
        android:background="#CCFFFFFF"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent">

        <!-- Scroll Circles -->
        <LinearLayout
            android:id="@+id/scroll_circles"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="25dp"
            android:orientation="horizontal"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent">

            <View
                android:id="@+id/scroll_circle_1"
                android:layout_width="17.5dp"
                android:layout_height="6.6dp"
                android:layout_marginEnd="8.8dp"
                android:background="@color/splash_scroll_active" />

            <View
                android:id="@+id/scroll_circle_2"
                android:layout_width="17.5dp"
                android:layout_height="6.6dp"
                android:layout_marginEnd="8.8dp"
                android:background="@drawable/splash_scroll_inactive" />

            <View
                android:id="@+id/scroll_circle_3"
                android:layout_width="17.5dp"
                android:layout_height="6.6dp"
                android:layout_marginEnd="8.8dp"
                android:background="@drawable/splash_scroll_inactive" />

            <View
                android:id="@+id/scroll_circle_4"
                android:layout_width="17.5dp"
                android:layout_height="6.6dp"
                android:background="@drawable/splash_scroll_inactive" />
        </LinearLayout>

        <!-- Description -->
        <TextView
            android:id="@+id/title_text"
            android:layout_width="366dp"
            android:layout_height="wrap_content"
            android:layout_marginTop="44dp"
            android:fontFamily="@font/relay_roboto_flex_regular"
            android:fontWeight="600"
            android:gravity="center"
            android:lineSpacingMultiplier="1.5"
            android:text="Xin chào!"
            android:textColor="@color/splash_title"
            android:textSize="32sp"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/scroll_circles" />

        <TextView
            android:id="@+id/description_text"
            android:layout_width="300dp"
            android:layout_height="wrap_content"
            android:layout_marginTop="48dp"
            android:fontFamily="@font/relay_roboto_flex_regular"
            android:fontWeight="500"
            android:gravity="center"
            android:lineSpacingMultiplier="1.5"
            android:text="Chào mừng bạn đến với \nT9 Car Rental"
            android:textColor="@color/splash_description"
            android:textSize="22sp"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/title_text" />

        <Button
            android:id="@+id/next_button"
            style="@style/AppButton"
            android:layout_width="328dp"
            android:layout_height="48dp"
            android:layout_marginTop="20dp"
            android:background="@drawable/bg_gradient_splash_button"
            android:drawableEnd="@drawable/vector2_2"
            android:drawablePadding="8dp"
            android:fontFamily="@font/relay_roboto_flex_regular"
            android:fontWeight="700"
            android:gravity="center"
            android:text="Tiếp theo"
            android:textColor="@color/white"
            android:textSize="22sp"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/description_text" />
    </androidx.constraintlayout.widget.ConstraintLayout>

</androidx.constraintlayout.widget.ConstraintLayout>
```

### src\main\res\layout\sflash_2.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#E9EDF6">

    <!-- Background Image -->
    <ImageView
        android:id="@+id/splash_background"
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:scaleType="fitCenter"
        android:src="@drawable/image_splash_2"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <!-- Description Card -->
    <androidx.constraintlayout.widget.ConstraintLayout
        android:id="@+id/description_card"
        android:layout_width="412dp"
        android:layout_height="387dp"
        android:background="#CCFFFFFF"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent">

        <!-- Scroll Circles -->
        <LinearLayout
            android:id="@+id/scroll_circles"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="25dp"
            android:orientation="horizontal"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent">

            <View
                android:id="@+id/scroll_circle_1"
                android:layout_width="17.5dp"
                android:layout_height="6.6dp"
                android:layout_marginEnd="8.8dp"
                android:background="@drawable/splash_scroll_inactive" />

            <View
                android:id="@+id/scroll_circle_2"
                android:layout_width="17.5dp"
                android:layout_height="6.6dp"
                android:layout_marginEnd="8.8dp"
                android:background="@color/splash_scroll_active" />

            <View
                android:id="@+id/scroll_circle_3"
                android:layout_width="17.5dp"
                android:layout_height="6.6dp"
                android:layout_marginEnd="8.8dp"
                android:background="@drawable/splash_scroll_inactive" />

            <View
                android:id="@+id/scroll_circle_4"
                android:layout_width="17.5dp"
                android:layout_height="6.6dp"
                android:background="@drawable/splash_scroll_inactive" />
        </LinearLayout>

        <!-- Logo -->
        <ImageView
            android:id="@+id/splash_logo"
            android:layout_width="84dp"
            android:layout_height="57dp"
            android:layout_marginTop="8dp"
            android:contentDescription="@string/app_name"
            android:scaleType="centerCrop"
            android:src="@drawable/screenshot_2025_04_03_154923_removebg_preview_2"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/scroll_circles" />

        <!-- Description -->
        <TextView
            android:id="@+id/title_text"
            android:layout_width="366dp"
            android:layout_height="wrap_content"
            android:layout_marginTop="30dp"
            android:fontFamily="@font/relay_roboto_flex_regular"
            android:fontWeight="600"
            android:gravity="center"
            android:lineSpacingMultiplier="1.5"
            android:text="Tìm xe dễ dàng"
            android:textColor="@color/splash_title"
            android:textSize="32sp"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/splash_logo" />

        <TextView
            android:id="@+id/description_text"
            android:layout_width="300dp"
            android:layout_height="wrap_content"
            android:layout_marginTop="16dp"
            android:fontFamily="@font/relay_roboto_flex_regular"
            android:fontWeight="500"
            android:gravity="center"
            android:lineSpacingMultiplier="1.5"
            android:text="Lọc theo giá, địa điểm và loại xe để đạt được lựa chọn tốt nhất."
            android:textColor="@color/splash_description"
            android:textSize="22sp"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/title_text" />

        <Button
            android:id="@+id/next_button"
            style="@style/AppButton"
            android:layout_width="328dp"
            android:layout_height="48dp"
            android:layout_marginTop="16dp"
            android:background="@drawable/bg_gradient_splash_button"
            android:drawableEnd="@drawable/vector2_2"
            android:drawablePadding="8dp"
            android:fontFamily="@font/relay_roboto_flex_regular"
            android:fontWeight="700"
            android:gravity="center"
            android:text="Tiếp theo"
            android:textColor="@color/white"
            android:textSize="22sp"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/description_text" />
    </androidx.constraintlayout.widget.ConstraintLayout>

</androidx.constraintlayout.widget.ConstraintLayout>
```

### src\main\res\layout\sflash_3.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#E9EDF6">

    <!-- Background Image -->
    <ImageView
        android:id="@+id/splash_background"
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:scaleType="fitCenter"
        android:src="@drawable/image_splash_3"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <!-- Description Card -->
    <androidx.constraintlayout.widget.ConstraintLayout
        android:id="@+id/description_card"
        android:layout_width="412dp"
        android:layout_height="387dp"
        android:background="#CCFFFFFF"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent">

        <!-- Scroll Circles -->
        <LinearLayout
            android:id="@+id/scroll_circles"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="25dp"
            android:orientation="horizontal"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent">

            <View
                android:id="@+id/scroll_circle_1"
                android:layout_width="17.5dp"
                android:layout_height="6.6dp"
                android:layout_marginEnd="8.8dp"
                android:background="@drawable/splash_scroll_inactive" />

            <View
                android:id="@+id/scroll_circle_2"
                android:layout_width="17.5dp"
                android:layout_height="6.6dp"
                android:layout_marginEnd="8.8dp"
                android:background="@drawable/splash_scroll_inactive" />

            <View
                android:id="@+id/scroll_circle_3"
                android:layout_width="17.5dp"
                android:layout_height="6.6dp"
                android:layout_marginEnd="8.8dp"
                android:background="@color/splash_scroll_active" />

            <View
                android:id="@+id/scroll_circle_4"
                android:layout_width="17.5dp"
                android:layout_height="6.6dp"
                android:background="@drawable/splash_scroll_inactive" />
        </LinearLayout>

        <!-- Logo -->
        <ImageView
            android:id="@+id/splash_logo"
            android:layout_width="84dp"
            android:layout_height="57dp"
            android:layout_marginTop="30dp"
            android:contentDescription="@string/app_name"
            android:scaleType="centerCrop"
            android:src="@drawable/screenshot_2025_04_03_154923_removebg_preview_2"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/scroll_circles" />

        <!-- Description -->
        <TextView
            android:id="@+id/title_text"
            android:layout_width="366dp"
            android:layout_height="wrap_content"
            android:layout_marginTop="16dp"
            android:fontFamily="@font/relay_roboto_flex_regular"
            android:fontWeight="600"
            android:gravity="center"
            android:lineSpacingMultiplier="1.5"
            android:text="Đặt xe nhanh chóng"
            android:textColor="@color/splash_title"
            android:textSize="32sp"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/splash_logo" />

        <TextView
            android:id="@+id/description_text"
            android:layout_width="300dp"
            android:layout_height="wrap_content"
            android:layout_marginTop="16dp"
            android:fontFamily="@font/relay_roboto_flex_regular"
            android:fontWeight="500"
            android:gravity="center"
            android:lineSpacingMultiplier="1.5"
            android:text="Chọn xe, xác nhận và lên đường ngay thôi."
            android:textColor="@color/splash_description"
            android:textSize="22sp"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/title_text" />

        <Button
            android:id="@+id/next_button"
            style="@style/AppButton"
            android:layout_width="328dp"
            android:layout_height="48dp"
            android:layout_marginTop="16dp"
            android:background="@drawable/bg_gradient_splash_button"
            android:drawableEnd="@drawable/vector2_2"
            android:drawablePadding="8dp"
            android:fontFamily="@font/relay_roboto_flex_regular"
            android:fontWeight="700"
            android:gravity="center"
            android:text="Tiếp theo"
            android:textColor="@color/white"
            android:textSize="22sp"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/description_text" />
    </androidx.constraintlayout.widget.ConstraintLayout>

</androidx.constraintlayout.widget.ConstraintLayout>
```

### src\main\res\layout\sflash_4.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#E9EDF6">

    <!-- Background Image -->
    <ImageView
        android:id="@+id/splash_background"
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:scaleType="fitCenter"
        android:src="@drawable/image_splash_4"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <!-- Description Card -->
    <androidx.constraintlayout.widget.ConstraintLayout
        android:id="@+id/description_card"
        android:layout_width="412dp"
        android:layout_height="387dp"
        android:background="#CCFFFFFF"
        android:paddingHorizontal="40dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent">

        <!-- Scroll Circles -->
        <LinearLayout
            android:id="@+id/scroll_circles"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="25dp"
            android:orientation="horizontal"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent">

            <View
                android:id="@+id/scroll_circle_1"
                android:layout_width="17.5dp"
                android:layout_height="6.6dp"
                android:layout_marginEnd="8.8dp"
                android:background="@drawable/splash_scroll_inactive" />

            <View
                android:id="@+id/scroll_circle_2"
                android:layout_width="17.5dp"
                android:layout_height="6.6dp"
                android:layout_marginEnd="8.8dp"
                android:background="@drawable/splash_scroll_inactive" />

            <View
                android:id="@+id/scroll_circle_3"
                android:layout_width="17.5dp"
                android:layout_height="6.6dp"
                android:layout_marginEnd="8.8dp"
                android:background="@drawable/splash_scroll_inactive" />

            <View
                android:id="@+id/scroll_circle_4"
                android:layout_width="17.5dp"
                android:layout_height="6.6dp"
                android:background="@color/splash_scroll_active" />
        </LinearLayout>

        <!-- Logo -->
        <ImageView
            android:id="@+id/splash_logo"
            android:layout_width="84dp"
            android:layout_height="57dp"
            android:layout_marginTop="40dp"
            android:contentDescription="@string/app_name"
            android:scaleType="centerCrop"
            android:src="@drawable/screenshot_2025_04_03_154923_removebg_preview_2"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/scroll_circles" />

        <!-- Description -->
        <TextView
            android:id="@+id/title_text"
            android:layout_width="332dp"
            android:layout_height="wrap_content"
            android:layout_marginTop="40dp"
            android:fontFamily="@font/relay_roboto_flex_regular"
            android:fontWeight="600"
            android:gravity="center"
            android:lineSpacingMultiplier="1.5"
            android:text="Bắt đầu chuyến đi của bạn ngay!"
            android:textColor="@color/splash_title"
            android:textSize="32sp"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/splash_logo" />

        <Button
            android:id="@+id/next_button"
            style="@style/AppButton"
            android:layout_width="328dp"
            android:layout_height="48dp"
            android:layout_marginTop="40dp"
            android:background="@drawable/bg_gradient_splash_button"
            android:drawableEnd="@drawable/vector2_2"
            android:drawablePadding="8dp"
            android:fontFamily="@font/relay_roboto_flex_regular"
            android:fontWeight="700"
            android:gravity="center"
            android:text="Bắt đầu"
            android:textColor="@color/white"
            android:textSize="22sp"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/title_text" />
    </androidx.constraintlayout.widget.ConstraintLayout>

</androidx.constraintlayout.widget.ConstraintLayout>
```

### src\main\res\layout\vehicle_card.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.cardview.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/vehicle_card"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    app:cardCornerRadius="15dp"
    app:cardElevation="4dp"
    android:layout_margin="16dp">

        <androidx.constraintlayout.widget.ConstraintLayout
            android:layout_width="match_parent"
            android:layout_height="263dp"
            android:padding="4dp">

                <ImageView
                    android:id="@+id/img_vehicle"
                    android:layout_width="0dp"
                    android:layout_height="167dp"
                    android:background="@drawable/rounded_corner"
                    android:clipToOutline="true"
                    android:scaleType="centerCrop"
                    app:layout_constraintDimensionRatio="314:167"
                    app:layout_constraintEnd_toEndOf="parent"
                    app:layout_constraintStart_toStartOf="parent"
                    app:layout_constraintTop_toTopOf="parent"
                    tools:src="@drawable/a2_0_1" />

                <TextView
                    android:id="@+id/vehicle_name"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginStart="28dp"
                    android:layout_marginTop="8dp"
                    android:fontFamily="@font/relay_roboto_flex_regular"
                    android:fontWeight="700"
                    android:textColor="@color/text_title"
                    android:textSize="19.7sp"
                    app:layout_constraintStart_toStartOf="parent"
                    app:layout_constraintTop_toBottomOf="@id/img_vehicle"
                    tools:text="Vinfast Lux A2.0" />

                <TextView
                    android:id="@+id/tv_vehicle_price"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="8dp"
                    android:layout_marginEnd="28dp"
                    android:fontFamily="@font/relay_roboto_flex_regular"
                    android:textColor="@color/text_input_hint"
                    android:textSize="17.51sp"
                    app:layout_constraintEnd_toEndOf="parent"
                    app:layout_constraintTop_toBottomOf="@id/img_vehicle"
                    tools:text="899.000VNĐ/Ngày" />

                <TextView
                    android:id="@+id/vehicle_rating"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginStart="4dp"
                    android:layout_marginBottom="4dp"
                    android:fontFamily="@font/relay_roboto_flex_regular"
                    android:textColor="@color/text_input_hint"
                    android:textSize="17.51sp"
                    app:layout_constraintBottom_toBottomOf="@id/rating_icon"
                    app:layout_constraintStart_toEndOf="@id/rating_icon"
                    tools:text="4.9 (18 Đánh giá)" />

                <ImageView
                    android:id="@+id/rating_icon"
                    android:layout_width="32dp"
                    android:layout_height="32dp"
                    android:layout_marginStart="8dp"
                    android:layout_marginBottom="4dp"
                    android:src="@drawable/vector_main"
                    app:layout_constraintBottom_toBottomOf="parent"
                    app:layout_constraintStart_toStartOf="parent"
                    tools:ignore="ContentDescription" />


        </androidx.constraintlayout.widget.ConstraintLayout>
</androidx.cardview.widget.CardView>
```

### src\main\res\layout\vehicle_stat_item.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:id="@+id/vehicle_stat_item"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:gravity="center_vertical"
    android:orientation="horizontal"
    android:paddingVertical="6dp"
    android:layout_marginHorizontal="16dp"
    android:layout_marginBottom="4dp">

    <ImageView
        android:id="@+id/vehicle_image"
        android:layout_width="73dp"
        android:layout_height="41dp"
        android:layout_marginEnd="8dp"
        android:scaleType="fitXY"
        android:src="@mipmap/ic_launcher" />

    <LinearLayout
        android:id="@+id/vehicle_info"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_weight="1"
        android:layout_marginEnd="12dp"
        android:orientation="vertical">

        <TextView
            android:id="@+id/vehicle_name"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginBottom="4dp"
            android:text="Vinfast Lux A2.0"
            android:textColor="#202020"
            android:textSize="14sp"
            android:textStyle="bold" />

        <TextView
            android:id="@+id/vehicle_number"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="CS254"
            android:textColor="#888888"
            android:textSize="14sp" />

    </LinearLayout>

    <TextView
        android:id="@+id/total_orders"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginEnd="46dp"
        android:text="187"
        android:textColor="#202020"
        android:textSize="14sp" />

    <TextView
        android:id="@+id/revenue"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="8,522,000"
        android:textColor="#202020"
        android:textSize="14sp" />

</LinearLayout>
```

### src\main\res\menu\admin_bottom_menu.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <item
        android:id="@+id/users"
        android:title="Users"
        android:icon="@drawable/ic_person"
        tools:ignore="HardcodedText" />

    <item
        android:id="@+id/vehicles"
        android:title="Vehicles"
        android:icon="@drawable/ic_car"
        tools:ignore="HardcodedText" />

    <item
        android:id="@+id/statistics"
        android:title="Statistics"
        android:icon="@drawable/ic_history"
        tools:ignore="HardcodedText" />

    <item
        android:id="@+id/settings"
        android:title="Settings"
        android:icon="@drawable/ic_setting"
        tools:ignore="HardcodedText" />
</menu>
```

### src\main\res\menu\customer_bottom_menu.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:tools="http://schemas.android.com/tools"
    xmlns:android="http://schemas.android.com/apk/res/android">

    <item
        android:id="@+id/home"
        android:title="Home"
        android:icon="@drawable/ic_home"
        tools:ignore="HardcodedText" />
    <item
        android:id="@+id/activity"
        android:title="Activity"
        android:icon="@drawable/ic_activity"
        tools:ignore="HardcodedText" />

    <item
        android:id="@+id/notifications"
        android:title="Notifications"
        android:icon="@drawable/ic_notifications"
        tools:ignore="HardcodedText" />
    <item
        android:id="@+id/setting"
        android:title="Setting"
        android:icon="@drawable/ic_setting"
        tools:ignore="HardcodedText" />
</menu>
```

### src\main\res\menu\owner_bottom_menu.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:tools="http://schemas.android.com/tools"
    xmlns:android="http://schemas.android.com/apk/res/android">

    <item
        android:id="@+id/vehicle"
        android:title="Vehicle"
        android:icon="@drawable/ic_car"
        tools:ignore="HardcodedText" />
    <item
        android:id="@+id/activity"
        android:title="Activity"
        android:icon="@drawable/ic_activity"
        tools:ignore="HardcodedText" />
    <item
        android:id="@+id/notifications"
        android:title="Notifications"
        android:icon="@drawable/ic_notifications"
        tools:ignore="HardcodedText" />
    <item
        android:id="@+id/setting"
        android:title="Setting"
        android:icon="@drawable/ic_setting"
        tools:ignore="HardcodedText" />
</menu>
```

### src\main\res\mipmap-anydpi-v26\ic_launcher.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
    <background android:drawable="@drawable/ic_launcher_background" />
    <foreground android:drawable="@drawable/ic_launcher_foreground" />
</adaptive-icon>
```

### src\main\res\mipmap-anydpi-v26\ic_launcher_round.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
    <background android:drawable="@drawable/ic_launcher_background" />
    <foreground android:drawable="@drawable/ic_launcher_foreground" />
</adaptive-icon>
```

### src\main\res\values\colors.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<resources>
    <!-- Core colors -->
    <color name="purple_700">#FF3700B3</color>
    <color name="teal_200">#FF03DAC5</color>
    <color name="teal_700">#FF018786</color>
    <color name="black">#1D1D1D</color>
    <color name="white">#FFFFFF</color>
    <color name="sky">#375E97</color>
    <color name="sunset">#FB6542</color>
    <color name="sunflower">#FFBB00</color>
    <color name="gray">#838181</color>

    <!-- Theme colors -->
    <color name="colorPrimary">#3F51B5</color>
    <color name="colorPrimaryDark">#303F9F</color>
    <color name="colorAccent">#FF4081</color>

    <!-- Additional colors -->
    <color name="green1">#29CF40</color>
    <color name="blue1">#66a3ff</color>
    <color name="blue2">#0033cc</color>
    <color name="darkGrey">#a6a6a6</color>
    <color name="Grey">#c3c3c3</color>
    <color name="transparent">#00000000</color>

    <!-- Gradient colors -->
    <color name="gradient_login_start">#7BA9F0</color>
    <color name="gradient_login_end">#1E90FF</color>
    <color name="gradient_register_start">#E8A159</color>
    <color name="gradient_register_end">#F56928</color>
    <color name="gradient_social_start">#3A4049</color>
    <color name="gradient_social_end">#20252A</color>
    <color name="splash_scroll_active">#0086D5</color>
    <color name="splash_title">#141523</color>
    <color name="splash_description">#A1A1A1</color>

    <!-- UI package colors -->
    <color name="text_title">#4A4A4A</color>
    <color name="text_instruction">#707070</color>
    <color name="or_text">#707070</color>
    <color name="text_input_hint">#B2B2B2</color>
    <color name="spec_title">#517077</color>
    <!-- Colors from setting_nh_h_ng.json -->
    <color name="setting_text_name">#4A4A4A</color>
    <color name="setting_text_edit">#00A3FF</color>
    <color name="setting_button_gradient_start">#C7F5F5</color>
    <color name="setting_button_gradient_end">#E2F9FA</color>
    <color name="setting_sign_out_gradient_start">#FF6B3D</color>
    <color name="setting_sign_out_gradient_mid">#F5290C</color>
    <color name="setting_sign_out_gradient_end">#D10800</color>
    <color name="setting_shadow">#3F000000</color>
    <!-- Colors from account_nh_h_ng.json -->
    <color name="account_title">#0A0F10</color>
    <color name="account_label">#1A3B7F</color>
    <color name="account_input_color">#192B70</color>
    <!-- Colors from update_profile_nh_h_ng.json -->
    <color name="update_profile_email">#4A4A4A</color>
    <color name="update_profile_cccd">#00A3FF</color>
    <!-- Colors from update_cccd_nh_h_ng.json -->
    <color name="cccd_label">#727A7A</color> <!-- HSV(202.5, 0.066, 0.478) -->
    <color name="chat_bubble_background">#D6D9D9</color> <!-- Frame 516, 521, 520, 522 -->
    <color name="input_area_background">#9387E9</color> <!-- Frame 519 -->
    <color name="message_text_color">#2D3E8C</color> <!-- Text in bubbles -->
    <color name="input_text_color">#B8FFFFFF</color> <!-- Input placeholder -->
    <color name="rating_text_color">#B0B0B0</color> <!-- Range Rover Evoq -->
    <color name="green_verified">#4CAF50</color>
    <color name="orange_pending">#FFA500</color>
</resources>
```

### src\main\res\values\dimens.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<resources>
    <dimen name="buttonSize">@dimen/_35sdp</dimen>
    <dimen name="widthLarge">@dimen/_231sdp</dimen>
    <dimen name="custom_marker_image">50dp</dimen>
    <dimen name="custom_marker_padding">2dp</dimen>
</resources>
```

### src\main\res\values\font_certs.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<resources>
    <array name="com_google_android_gms_fonts_certs">
        <item>@array/com_google_android_gms_fonts_certs_dev</item>
        <item>@array/com_google_android_gms_fonts_certs_prod</item>
    </array>
    <string-array name="com_google_android_gms_fonts_certs_dev">
        <item>
            MIIEqDCCA5CgAwIBAgIJANWFuGx90071MA0GCSqGSIb3DQEBBAUAMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNTW91bnRhaW4gVmlldzEQMA4GA1UEChMHQW5kcm9pZDEQMA4GA1UECxMHQW5kcm9pZDEQMA4GA1UEAxMHQW5kcm9pZDEiMCAGCSqGSIb3DQEJARYTYW5kcm9pZEBhbmRyb2lkLmNvbTAeFw0wODA0MTUyMzM2NTZaFw0zNTA5MDEyMzM2NTZaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNTW91bnRhaW4gVmlldzEQMA4GA1UEChMHQW5kcm9pZDEQMA4GA1UECxMHQW5kcm9pZDEQMA4GA1UEAxMHQW5kcm9pZDEiMCAGCSqGSIb3DQEJARYTYW5kcm9pZEBhbmRyb2lkLmNvbTCCASAwDQYJKoZIhvcNAQEBBQADggENADCCAQgCggEBANbOLggKv+IxTdGNs8/TGFy0PTP6DHThvbbR24kT9ixcOd9W+EaBPWW+wPPKQmsHxajtWjmQwWfna8mZuSeJS48LIgAZlKkpFeVyxW0qMBujb8X8ETrWy550NaFtI6t9+u7hZeTfHwqNvacKhp1RbE6dBRGWynwMVX8XW8N1+UjFaq6GCJukT4qmpN2afb8sCjUigq0GuMwYXrFVee74bQgLHWGJwPmvmLHC69EH6kWr22ijx4OKXlSIx2xT1AsSHee70w5iDBiK4aph27yH3TxkXy9V89TDdexAcKk/cVHYNnDBapcavl7y0RiQ4biu8ymM8Ga/nmzhRKya6G0cGw8CAQOjgfwwgfkwHQYDVR0OBBYEFI0cxb6VTEM8YYY6FbBMvAPyT+CyMIHJBgNVHSMEgcEwgb6AFI0cxb6VTEM8YYY6FbBMvAPyT+CyoYGapIGXMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNTW91bnRhaW4gVmlldzEQMA4GA1UEChMHQW5kcm9pZDEQMA4GA1UECxMHQW5kcm9pZDEQMA4GA1UEAxMHQW5kcm9pZDEiMCAGCSqGSIb3DQEJARYTYW5kcm9pZEBhbmRyb2lkLmNvbYIJANWFuGx90071MAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEEBQADggEBABnTDPEF+3iSP0wNfdIjIz1AlnrPzgAIHVvXxunW7SBrDhEglQZBbKJEk5kT0mtKoOD1JMrSu1xuTKEBahWRbqHsXclaXjoBADb0kkjVEJu/Lh5hgYZnOjvlba8Ld7HCKePCVePoTJBdI4fvugnL8TsgK05aIskyY0hKI9L8KfqfGTl1lzOv2KoWD0KWwtAWPoGChZxmQ+nBli+gwYMzM1vAkP+aayLe0a1EQimlOalO762r0GXO0ks+UeXde2Z4e+8S/pf7pITEI/tP+MxJTALw9QUWEv9lKTk+jkbqxbsh8nfBUapfKqYn0eidpwq2AzVp3juYl7//fKnaPhJD9gs=
        </item>
    </string-array>
    <string-array name="com_google_android_gms_fonts_certs_prod">
        <item>
            MIIEQzCCAyugAwIBAgIJAMLgh0ZkSjCNMA0GCSqGSIb3DQEBBAUAMHQxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1Nb3VudGFpbiBWaWV3MRQwEgYDVQQKEwtHb29nbGUgSW5jLjEQMA4GA1UECxMHQW5kcm9pZDEQMA4GA1UEAxMHQW5kcm9pZDAeFw0wODA4MjEyMzEzMzRaFw0zNjAxMDcyMzEzMzRaMHQxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1Nb3VudGFpbiBWaWV3MRQwEgYDVQQKEwtHb29nbGUgSW5jLjEQMA4GA1UECxMHQW5kcm9pZDEQMA4GA1UEAxMHQW5kcm9pZDCCASAwDQYJKoZIhvcNAQEBBQADggENADCCAQgCggEBAKtWLgDYO6IIrgqWbxJOKdoR8qtW0I9Y4sypEwPpt1TTcvZApxsdyxMJZ2JORland2qSGT2y5b+3JKkedxiLDmpHpDsz2WCbdxgxRczfey5YZnTJ4VZbH0xqWVW/8lGmPav5xVwnIiJS6HXk+BVKZF+JcWjAsb/GEuq/eFdpuzSqeYTcfi6idkyugwfYwXFU1+5fZKUaRKYCwkkFQVfcAs1fXA5V+++FGfvjJ/CxURaSxaBvGdGDhfXE28LWuT9ozCl5xw4Yq5OGazvV24mZVSoOO0yZ31j7kYvtwYK6NeADwbSxDdJEqO4k//0zOHKrUiGYXtqw/A0LFFtqoZKFjnkCAQOjgdkwgdYwHQYDVR0OBBYEFMd9jMIhF1Ylmn/Tgt9r45jk14alMIGmBgNVHSMEgZ4wgZuAFMd9jMIhF1Ylmn/Tgt9r45jk14aloXikdjB0MQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNTW91bnRhaW4gVmlldzEUMBIGA1UEChMLR29vZ2xlIEluYy4xEDAOBgNVBAsTB0FuZHJvaWQxEDAOBgNVBAMTB0FuZHJvaWSCCQDC4IdGZEowjTAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBAUAA4IBAQBt0lLO74UwLDYKqs6Tm8/yzKkEu116FmH4rkaymUIE0P9KaMftGlMexFlaYjzmB2OxZyl6euNXEsQH8gjwyxCUKRJNexBiGcCEyj6z+a1fuHHvkiaai+KL8W1EyNmgjmyy8AW7P+LLlkR+ho5zEHatRbM/YAnqGcFh5iZBqpknHf1SKMXFh4dd239FJ1jWYfbMDMy3NS5CTMQ2XFI1MvcyUTdZPErjQfTbQe3aDQsQcafEQPD+nqActifKZ0Np0IS9L9kR/wbNvyz6ENwPiTrjV2KRkEjH78ZMcUQXg0L3BYHJ3lc69Vs5Ddf9uUGGMYldX3WfMBEmh/9iFBDAaTCK
        </item>
    </string-array>
</resources>

```

### src\main\res\values\strings.xml
```xml
<resources>
    <string name="app_name">CarRenting</string>
    <!-- TODO: Remove or change this placeholder text -->
    <string name="google_maps_api_key">AIzaSyAPzOsCzNVbsbCZp8S0PXpGwk-Mmtn-j9o</string>

    <string name="getStarted">Bắt đầu</string>
    <string name="signIn">Đăng nhập</string>
    <string name="sign_in_forget">Quên mật khẩu ?</string>
    <string name="create_account">Create an account</string>
    <string name="create_account_text_1">Start with your information!</string>

    <!-- Owner -->
    <!-- Map -->

    <string name="action_sign_out">Sign out</string>

    <!-- Firestore Strings -->
    <string name="collection_users">Users</string>
    <string name="collection_chatrooms">Chatrooms</string>
    <string name="collection_chat_messages">Chat Messages</string>
    <string name="collection_chatroom_user_list">User List</string>
    <string name="collection_user_locations">User Locations</string>

    <!-- Intent extras -->
    <string name="intent_chatroom">intent_chatroom</string>
    <string name="intent_user_list">intent_user_list</string>
    <string name="intent_user_locations">intent_user_locations</string>

    <!-- Service and Broadcasts -->


    <!-- Fragments Names -->
    <string name="fragment_user_list">User List</string>
    <string name="manage_vehicles">Quản lý xe</string>
    <string name="add_vehicle">Thêm xe</string>
    <string name="no_vehicles">Không có xe nào</string>

    <!-- Other Strings -->
    <string name="action_leave_chatroom">Leave chatroom</string>
    <string name="action_chatroom_user_list">User list</string>
    <string name="action_profile">Profile</string>
    <string name="default_web_client_id">fake-client-id.apps.googleusercontent.com</string>


    <!-- Chat strings -->
    <string name="chat_hint">Type a message...</string>
    <string name="send_content_description">Send message</string>
    <string name="add_content_description">Add attachment</string>
    <!-- Tab strings -->
    <string name="tab_home">Home</string>
    <string name="tab_chat">Chat</string>

    <!-- Chuỗi cho ScheduleSelect -->
    <string name="select_rental_time">Chọn thời gian thuê xe</string>
    <string name="select_date">Chọn ngày</string>
    <string name="select_start_time">Chọn giờ bắt đầu</string>
    <string name="select_end_time">Chọn giờ kết thúc</string>
    <string name="confirm">Xác nhận</string>
    <string name="reject">Từ chối</string>
    <string name="no_date_selected">Chưa chọn ngày</string>
    <string name="no_time_selected">Chưa chọn giờ</string>
    <string name="time_overlap_error">Thời gian này đã được đặt hoặc trùng với lịch bảo trì. Vui lòng chọn thời gian khác.</string>
    <string name="invalid_time_error">Thời gian kết thúc phải sau thời gian bắt đầu.</string>
    <string name="missing_selection_error">Vui lòng chọn đầy đủ ngày và giờ.</string>
    <string name="booking_success">Yêu cầu đặt xe đã được gửi.</string>
    <string name="booking_failed">Lỗi gửi yêu cầu: %1$s</string>
    <string name="estimated_price">Ước tính giá thuê: %1$s VNĐ</string>

    <string name="no_vehicle_id">Không tìm thấy ID xe</string>
    <string name="vehicle_not_found">Không tìm thấy xe</string>
    <string name="load_vehicle_error">Lỗi tải dữ liệu xe</string>
    <string name="load_schedule_error">Lỗi tải lịch đặt xe</string>
    <string name="invalid_booking">Đặt xe không hợp lệ</string>


    <string name="select_rental_period">Chọn thời gian thuê xe</string>
    <string name="select_start_date">Chọn ngày bắt đầu</string>
    <string name="select_end_date">Chọn ngày kết thúc</string>
    <string name="total_days">Tổng số ngày: %d</string>
    <string name="total_price">Tổng giá: %s</string>
    <string name="invalid_date_range">Ngày kết thúc phải sau ngày bắt đầu</string>
    <string name="invalid_time">Giờ trả xe phải sau giờ nhận xe</string>

    <string name="filter_vehicles">Lọc xe</string>
    <string name="brand">Thương hiệu</string>
    <string name="availability">Trạng thái sẵn có</string>
    <string name="verification_status">Trạng thái xác minh</string>
    <string name="fuel_type">Loại nhiên liệu</string>
    <string name="rating">Đánh giá</string>
    <string name="price_range">Phạm vi giá</string>
    <string name="clear_filter">Xóa bộ lọc</string>
    <string name="apply_filter">Áp dụng</string>
    <string name="cancel">Hủy</string>
    <string name="all_brands">Tất cả thương hiệu</string>
    <string name="all_availability">Tất cả trạng thái</string>
    <string name="all_verification">Tất cả xác minh</string>
    <string name="all_fuel_types">Tất cả loại nhiên liệu</string>
    <string name="total_vehicles">Tổng số xe: %d</string>
    <string name="search_vehicles">Tìm kiếm xe...</string>
    <string name="search">Tìm kiếm</string>

    <string name="notifications">Thông báo</string>
    <string name="user_approved">Tài khoản đã được duyệt</string>
    <string name="user_rejected">Tài khoản bị từ chối</string>
    <string name="user_supplement">Yêu cầu bổ sung thông tin tài khoản</string>
    <string name="vehicle_approved">Xe đã được duyệt</string>
    <string name="vehicle_rejected">Xe bị từ chối</string>
    <string name="vehicle_supplement">Yêu cầu bổ sung thông tin xe</string>
    <string name="vehicle_hidden">Xe đã bị ẩn</string>
    <string name="vehicle_violation">Cảnh báo vi phạm xe</string>
    <string name="unread">Chưa đọc</string>
    <string name="read">Đã đọc</string>

</resources>
```

### src\main\res\values\styles.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<resources>
    <style name="AppButton" parent="Widget.AppCompat.Button">
        <item name="android:background">@null</item>
        <item name="backgroundTint">@null</item>
    </style>
    <style name="cr100">
        <item name="cornerSize">100dp</item>
    </style>
    <style name="FullScreenDialog" parent="Theme.AppCompat.Light.Dialog">
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:windowIsFloating">false</item>
        <item name="android:windowFullscreen">true</item>
        <item name="android:windowContentOverlay">@null</item>
    </style>
</resources>
```

### src\main\res\values\themes.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme -->
    <style name="Theme.CarRenting" parent="Theme.MaterialComponents.DayNight.DarkActionBar">
        <!-- Primary brand color -->
        <item name="colorPrimary">@color/sky</item>
        <item name="colorPrimaryVariant">@color/purple_700</item>
        <item name="colorOnPrimary">@color/white</item>
        <!-- Secondary brand color -->
        <item name="colorSecondary">@color/teal_200</item>
        <item name="colorSecondaryVariant">@color/teal_700</item>
        <item name="colorOnSecondary">@color/white</item>
        <!-- Status bar color -->
        <item name="android:statusBarColor" tools:targetApi="l">?attr/colorPrimaryVariant</item>
        <!-- Apply custom button style to prevent tinting -->
        <item name="buttonStyle">@style/AppButton</item>
    </style>

    <!-- No Action Bar theme -->
    <style name="Theme.CarRenting.NoActionBar">
        <item name="windowActionBar">false</item>
        <item name="windowNoTitle">true</item>
        <!-- Ensure button style is applied -->
        <item name="buttonStyle">@style/AppButton</item>
    </style>
</resources>
```

### src\main\res\values-night\themes.xml
```xml
<?xml version="1.0" encoding="utf-8"?>
<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme for dark mode -->
    <style name="Theme.CarRenting" parent="Theme.MaterialComponents.DayNight.DarkActionBar">
        <!-- Primary brand color -->
        <item name="colorPrimary">@color/sky</item>
        <item name="colorPrimaryVariant">@color/purple_700</item>
        <item name="colorOnPrimary">@color/black</item>
        <!-- Secondary brand color -->
        <item name="colorSecondary">@color/white</item>
        <item name="colorSecondaryVariant">@color/teal_200</item>
        <item name="colorOnSecondary">@color/black</item>
        <!-- Status bar color -->
        <item name="android:statusBarColor" tools:targetApi="l">?attr/colorPrimaryVariant</item>
        <!-- Apply custom button style to prevent tinting -->
        <item name="buttonStyle">@style/AppButton</item>
    </style>
</resources>
```

### src\main\res\xml\backup_rules.xml
```xml
<?xml version="1.0" encoding="utf-8"?><!--
   Sample backup rules file; uncomment and customize as necessary.
   See https://developer.android.com/guide/topics/data/autobackup
   for details.
   Note: This file is ignored for devices older that API 31
   See https://developer.android.com/about/versions/12/backup-restore
-->
<full-backup-content>
    <!--
   <include domain="sharedpref" path="."/>
   <exclude domain="sharedpref" path="device.xml"/>
-->
</full-backup-content>
```

### src\main\res\xml\data_extraction_rules.xml
```xml
<?xml version="1.0" encoding="utf-8"?><!--
   Sample data extraction rules file; uncomment and customize as necessary.
   See https://developer.android.com/about/versions/12/backup-restore#xml-changes
   for details.
-->
<data-extraction-rules>
    <cloud-backup>
        <!-- TODO: Use <include> and <exclude> to control what is backed up.
        <include .../>
        <exclude .../>
        -->
    </cloud-backup>
    <!--
    <device-transfer>
        <include .../>
        <exclude .../>
    </device-transfer>
    -->
</data-extraction-rules>
```

### src\test\java\com\uit\carrental\ExampleUnitTest.java
```java
package com.uit.carrental;

import org.junit.Test;

import static org.junit.Assert.*;

/**
 * Example local unit test, which will execute on the development machine (host).
 *
 * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
 */
public class ExampleUnitTest {
    @Test
    public void addition_isCorrect() {
        assertEquals(4, 2 + 2);
    }
}
```
